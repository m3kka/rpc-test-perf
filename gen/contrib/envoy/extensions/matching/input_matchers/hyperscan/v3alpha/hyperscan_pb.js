// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/matching/input_matchers/hyperscan/v3alpha/hyperscan.proto (package envoy.extensions.matching.input_matchers.hyperscan.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * `Hyperscan <https://github.com/intel/hyperscan>`_ regex matcher. The matcher uses the Hyperscan
 * engine which exploits x86 SIMD instructions to accelerate matching large numbers of regular
 * expressions simultaneously across streams of data.
 *
 * @generated from message envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan
 */
export const Hyperscan = proto3.makeMessageType(
  "envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan",
  () => [
    { no: 1, name: "regexes", kind: "message", T: Hyperscan_Regex, repeated: true },
  ],
);

/**
 * [#next-free-field: 11]
 *
 * @generated from message envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex
 */
export const Hyperscan_Regex = proto3.makeMessageType(
  "envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex",
  () => [
    { no: 1, name: "regex", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "caseless", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "dot_all", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "multiline", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "allow_empty", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "utf8", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "ucp", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "combination", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "quiet", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "Hyperscan_Regex"},
);

