// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/filters/network/sip_proxy/tra/v3alpha/tra.proto (package envoy.extensions.filters.network.sip_proxy.tra.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { GrpcService } from "../../../../../../../../envoy/config/core/v3/grpc_service_pb.js";
import type { ApiVersion } from "../../../../../../../../envoy/config/core/v3/config_source_pb.js";

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceConfig
 */
export declare class TraServiceConfig extends Message<TraServiceConfig> {
  /**
   * Specifies the gRPC service that hosts the rate limit service. The client
   * will connect to this cluster when it needs to make rate limit service
   * requests.
   *
   * @generated from field: envoy.config.core.v3.GrpcService grpc_service = 1;
   */
  grpcService?: GrpcService;

  /**
   * API version for rate limit transport protocol. This describes the rate limit gRPC endpoint and
   * version of messages used on the wire.
   *
   * @generated from field: envoy.config.core.v3.ApiVersion transport_api_version = 2;
   */
  transportApiVersion: ApiVersion;

  /**
   * @generated from field: google.protobuf.Duration timeout = 3;
   */
  timeout?: Duration;

  constructor(data?: PartialMessage<TraServiceConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TraServiceConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TraServiceConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TraServiceConfig;

  static equals(a: TraServiceConfig | PlainMessage<TraServiceConfig> | undefined, b: TraServiceConfig | PlainMessage<TraServiceConfig> | undefined): boolean;
}

/**
 * [#next-free-field: 7]
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceRequest
 */
export declare class TraServiceRequest extends Message<TraServiceRequest> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from oneof envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceRequest.request
   */
  request: {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateRequest create_request = 2;
     */
    value: CreateRequest;
    case: "createRequest";
  } | {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateRequest update_request = 3;
     */
    value: UpdateRequest;
    case: "updateRequest";
  } | {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveRequest retrieve_request = 4;
     */
    value: RetrieveRequest;
    case: "retrieveRequest";
  } | {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteRequest delete_request = 5;
     */
    value: DeleteRequest;
    case: "deleteRequest";
  } | {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeRequest subscribe_request = 6;
     */
    value: SubscribeRequest;
    case: "subscribeRequest";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TraServiceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TraServiceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TraServiceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TraServiceRequest;

  static equals(a: TraServiceRequest | PlainMessage<TraServiceRequest> | undefined, b: TraServiceRequest | PlainMessage<TraServiceRequest> | undefined): boolean;
}

/**
 * [#next-free-field: 9]
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceResponse
 */
export declare class TraServiceResponse extends Message<TraServiceResponse> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: int32 ret = 2;
   */
  ret: number;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;

  /**
   * @generated from oneof envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceResponse.response
   */
  response: {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateResponse create_response = 4;
     */
    value: CreateResponse;
    case: "createResponse";
  } | {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateResponse update_response = 5;
     */
    value: UpdateResponse;
    case: "updateResponse";
  } | {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveResponse retrieve_response = 6;
     */
    value: RetrieveResponse;
    case: "retrieveResponse";
  } | {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteResponse delete_response = 7;
     */
    value: DeleteResponse;
    case: "deleteResponse";
  } | {
    /**
     * @generated from field: envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeResponse subscribe_response = 8;
     */
    value: SubscribeResponse;
    case: "subscribeResponse";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TraServiceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TraServiceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TraServiceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TraServiceResponse;

  static equals(a: TraServiceResponse | PlainMessage<TraServiceResponse> | undefined, b: TraServiceResponse | PlainMessage<TraServiceResponse> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateRequest
 */
export declare class CreateRequest extends Message<CreateRequest> {
  /**
   * @generated from field: map<string, string> data = 1;
   */
  data: { [key: string]: string };

  /**
   * @generated from field: map<string, string> context = 2;
   */
  context: { [key: string]: string };

  constructor(data?: PartialMessage<CreateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRequest;

  static equals(a: CreateRequest | PlainMessage<CreateRequest> | undefined, b: CreateRequest | PlainMessage<CreateRequest> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateResponse
 */
export declare class CreateResponse extends Message<CreateResponse> {
  constructor(data?: PartialMessage<CreateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateResponse;

  static equals(a: CreateResponse | PlainMessage<CreateResponse> | undefined, b: CreateResponse | PlainMessage<CreateResponse> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateRequest
 */
export declare class UpdateRequest extends Message<UpdateRequest> {
  /**
   * @generated from field: map<string, string> data = 1;
   */
  data: { [key: string]: string };

  /**
   * @generated from field: map<string, string> context = 2;
   */
  context: { [key: string]: string };

  constructor(data?: PartialMessage<UpdateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRequest;

  static equals(a: UpdateRequest | PlainMessage<UpdateRequest> | undefined, b: UpdateRequest | PlainMessage<UpdateRequest> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateResponse
 */
export declare class UpdateResponse extends Message<UpdateResponse> {
  constructor(data?: PartialMessage<UpdateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateResponse;

  static equals(a: UpdateResponse | PlainMessage<UpdateResponse> | undefined, b: UpdateResponse | PlainMessage<UpdateResponse> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveRequest
 */
export declare class RetrieveRequest extends Message<RetrieveRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: map<string, string> context = 2;
   */
  context: { [key: string]: string };

  constructor(data?: PartialMessage<RetrieveRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RetrieveRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RetrieveRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RetrieveRequest;

  static equals(a: RetrieveRequest | PlainMessage<RetrieveRequest> | undefined, b: RetrieveRequest | PlainMessage<RetrieveRequest> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveResponse
 */
export declare class RetrieveResponse extends Message<RetrieveResponse> {
  /**
   * @generated from field: map<string, string> data = 1;
   */
  data: { [key: string]: string };

  constructor(data?: PartialMessage<RetrieveResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RetrieveResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RetrieveResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RetrieveResponse;

  static equals(a: RetrieveResponse | PlainMessage<RetrieveResponse> | undefined, b: RetrieveResponse | PlainMessage<RetrieveResponse> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteRequest
 */
export declare class DeleteRequest extends Message<DeleteRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: map<string, string> context = 2;
   */
  context: { [key: string]: string };

  constructor(data?: PartialMessage<DeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRequest;

  static equals(a: DeleteRequest | PlainMessage<DeleteRequest> | undefined, b: DeleteRequest | PlainMessage<DeleteRequest> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteResponse
 */
export declare class DeleteResponse extends Message<DeleteResponse> {
  constructor(data?: PartialMessage<DeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResponse;

  static equals(a: DeleteResponse | PlainMessage<DeleteResponse> | undefined, b: DeleteResponse | PlainMessage<DeleteResponse> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeRequest
 */
export declare class SubscribeRequest extends Message<SubscribeRequest> {
  constructor(data?: PartialMessage<SubscribeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribeRequest;

  static equals(a: SubscribeRequest | PlainMessage<SubscribeRequest> | undefined, b: SubscribeRequest | PlainMessage<SubscribeRequest> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeResponse
 */
export declare class SubscribeResponse extends Message<SubscribeResponse> {
  /**
   * @generated from field: map<string, string> data = 1;
   */
  data: { [key: string]: string };

  constructor(data?: PartialMessage<SubscribeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribeResponse;

  static equals(a: SubscribeResponse | PlainMessage<SubscribeResponse> | undefined, b: SubscribeResponse | PlainMessage<SubscribeResponse> | undefined): boolean;
}

