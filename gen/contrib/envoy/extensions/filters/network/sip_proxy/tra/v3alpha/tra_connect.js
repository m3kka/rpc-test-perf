// @generated by protoc-gen-connect-es v1.1.4
// @generated from file contrib/envoy/extensions/filters/network/sip_proxy/tra/v3alpha/tra.proto (package envoy.extensions.filters.network.sip_proxy.tra.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { TraServiceRequest, TraServiceResponse } from "./tra_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService
 */
export const TraService = {
  typeName: "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService",
  methods: {
    /**
     * @generated from rpc envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService.Create
     */
    create: {
      name: "Create",
      I: TraServiceRequest,
      O: TraServiceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService.Update
     */
    update: {
      name: "Update",
      I: TraServiceRequest,
      O: TraServiceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService.Retrieve
     */
    retrieve: {
      name: "Retrieve",
      I: TraServiceRequest,
      O: TraServiceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService.Delete
     */
    delete: {
      name: "Delete",
      I: TraServiceRequest,
      O: TraServiceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService.Subscribe
     */
    subscribe: {
      name: "Subscribe",
      I: TraServiceRequest,
      O: TraServiceResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
};

