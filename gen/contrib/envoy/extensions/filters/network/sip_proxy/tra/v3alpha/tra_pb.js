// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/filters/network/sip_proxy/tra/v3alpha/tra.proto (package envoy.extensions.filters.network.sip_proxy.tra.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3 } from "@bufbuild/protobuf";
import { GrpcService } from "../../../../../../../../envoy/config/core/v3/grpc_service_pb.js";
import { ApiVersion } from "../../../../../../../../envoy/config/core/v3/config_source_pb.js";

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceConfig
 */
export const TraServiceConfig = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceConfig",
  () => [
    { no: 1, name: "grpc_service", kind: "message", T: GrpcService },
    { no: 2, name: "transport_api_version", kind: "enum", T: proto3.getEnumType(ApiVersion) },
    { no: 3, name: "timeout", kind: "message", T: Duration },
  ],
);

/**
 * [#next-free-field: 7]
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceRequest
 */
export const TraServiceRequest = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceRequest",
  () => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_request", kind: "message", T: CreateRequest, oneof: "request" },
    { no: 3, name: "update_request", kind: "message", T: UpdateRequest, oneof: "request" },
    { no: 4, name: "retrieve_request", kind: "message", T: RetrieveRequest, oneof: "request" },
    { no: 5, name: "delete_request", kind: "message", T: DeleteRequest, oneof: "request" },
    { no: 6, name: "subscribe_request", kind: "message", T: SubscribeRequest, oneof: "request" },
  ],
);

/**
 * [#next-free-field: 9]
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceResponse
 */
export const TraServiceResponse = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceResponse",
  () => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ret", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "reason", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "create_response", kind: "message", T: CreateResponse, oneof: "response" },
    { no: 5, name: "update_response", kind: "message", T: UpdateResponse, oneof: "response" },
    { no: 6, name: "retrieve_response", kind: "message", T: RetrieveResponse, oneof: "response" },
    { no: 7, name: "delete_response", kind: "message", T: DeleteResponse, oneof: "response" },
    { no: 8, name: "subscribe_response", kind: "message", T: SubscribeResponse, oneof: "response" },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateRequest
 */
export const CreateRequest = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateRequest",
  () => [
    { no: 1, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 2, name: "context", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateResponse
 */
export const CreateResponse = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.CreateResponse",
  [],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateRequest
 */
export const UpdateRequest = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateRequest",
  () => [
    { no: 1, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 2, name: "context", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateResponse
 */
export const UpdateResponse = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.UpdateResponse",
  [],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveRequest
 */
export const RetrieveRequest = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveRequest",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "context", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveResponse
 */
export const RetrieveResponse = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.RetrieveResponse",
  () => [
    { no: 1, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteRequest
 */
export const DeleteRequest = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteRequest",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "context", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteResponse
 */
export const DeleteResponse = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.DeleteResponse",
  [],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeRequest
 */
export const SubscribeRequest = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeRequest",
  [],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeResponse
 */
export const SubscribeResponse = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.tra.v3alpha.SubscribeResponse",
  () => [
    { no: 1, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

