// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/filters/network/sip_proxy/v3alpha/sip_proxy.proto (package envoy.extensions.filters.network.sip_proxy.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Any, Duration, proto3 } from "@bufbuild/protobuf";
import { RouteConfiguration } from "./route_pb.js";
import { TraServiceConfig } from "../tra/v3alpha/tra_pb.js";

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.v3alpha.SipProxy
 */
export const SipProxy = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.v3alpha.SipProxy",
  () => [
    { no: 1, name: "stat_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "route_config", kind: "message", T: RouteConfiguration },
    { no: 3, name: "sip_filters", kind: "message", T: SipFilter, repeated: true },
    { no: 4, name: "settings", kind: "message", T: SipProxy_SipSettings },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.v3alpha.SipProxy.SipSettings
 */
export const SipProxy_SipSettings = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.v3alpha.SipProxy.SipSettings",
  () => [
    { no: 1, name: "transaction_timeout", kind: "message", T: Duration },
    { no: 2, name: "local_services", kind: "message", T: LocalService, repeated: true },
    { no: 3, name: "tra_service_config", kind: "message", T: TraServiceConfig },
    { no: 4, name: "operate_via", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "SipProxy_SipSettings"},
);

/**
 * SipFilter configures a Sip filter.
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.v3alpha.SipFilter
 */
export const SipFilter = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.v3alpha.SipFilter",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "typed_config", kind: "message", T: Any, oneof: "config_type" },
  ],
);

/**
 * SipProtocolOptions specifies Sip upstream protocol options. This object is used in
 * :ref:`typed_extension_protocol_options<envoy_v3_api_field_config.cluster.v3.Cluster.typed_extension_protocol_options>`,
 * keyed by the name ``envoy.filters.network.sip_proxy``.
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.v3alpha.SipProtocolOptions
 */
export const SipProtocolOptions = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.v3alpha.SipProtocolOptions",
  () => [
    { no: 1, name: "session_affinity", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "registration_affinity", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "customized_affinity", kind: "message", T: CustomizedAffinity },
  ],
);

/**
 * For affinity
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.v3alpha.CustomizedAffinity
 */
export const CustomizedAffinity = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.v3alpha.CustomizedAffinity",
  () => [
    { no: 1, name: "entries", kind: "message", T: CustomizedAffinityEntry, repeated: true },
    { no: 2, name: "stop_load_balance", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.v3alpha.CustomizedAffinityEntry
 */
export const CustomizedAffinityEntry = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.v3alpha.CustomizedAffinityEntry",
  () => [
    { no: 1, name: "header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "subscribe", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "query", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "cache", kind: "message", T: Cache },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.sip_proxy.v3alpha.Cache
 */
export const Cache = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.v3alpha.Cache",
  () => [
    { no: 1, name: "max_cache_item", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "add_query_to_cache", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Local Service
 *
 * @generated from message envoy.extensions.filters.network.sip_proxy.v3alpha.LocalService
 */
export const LocalService = proto3.makeMessageType(
  "envoy.extensions.filters.network.sip_proxy.v3alpha.LocalService",
  () => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "parameter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

