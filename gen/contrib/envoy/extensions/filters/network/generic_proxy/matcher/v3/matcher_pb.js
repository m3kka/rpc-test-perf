// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/filters/network/generic_proxy/matcher/v3/matcher.proto (package envoy.extensions.filters.network.generic_proxy.matcher.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { StringMatcher } from "../../../../../../../../envoy/type/matcher/v3/string_pb.js";

/**
 * Used to match request service of the downstream request. Only applicable if a service provided
 * by the application protocol.
 * This is deprecated and should be replaced by HostMatchInput. This is kept for backward compatibility.
 *
 * @generated from message envoy.extensions.filters.network.generic_proxy.matcher.v3.ServiceMatchInput
 */
export const ServiceMatchInput = proto3.makeMessageType(
  "envoy.extensions.filters.network.generic_proxy.matcher.v3.ServiceMatchInput",
  [],
);

/**
 * Used to match request host of the generic downstream request. Only applicable if a host provided
 * by the application protocol.
 * This is same with the ServiceMatchInput and this should be preferred over ServiceMatchInput.
 *
 * @generated from message envoy.extensions.filters.network.generic_proxy.matcher.v3.HostMatchInput
 */
export const HostMatchInput = proto3.makeMessageType(
  "envoy.extensions.filters.network.generic_proxy.matcher.v3.HostMatchInput",
  [],
);

/**
 * Used to match request path of the generic downstream request. Only applicable if a path provided
 * by the application protocol.
 *
 * @generated from message envoy.extensions.filters.network.generic_proxy.matcher.v3.PathMatchInput
 */
export const PathMatchInput = proto3.makeMessageType(
  "envoy.extensions.filters.network.generic_proxy.matcher.v3.PathMatchInput",
  [],
);

/**
 * Used to match request method of the generic downstream request. Only applicable if a method provided
 * by the application protocol.
 *
 * @generated from message envoy.extensions.filters.network.generic_proxy.matcher.v3.MethodMatchInput
 */
export const MethodMatchInput = proto3.makeMessageType(
  "envoy.extensions.filters.network.generic_proxy.matcher.v3.MethodMatchInput",
  [],
);

/**
 * Used to match an arbitrary property of the generic downstream request.
 * These properties are populated by the codecs of application protocols.
 *
 * @generated from message envoy.extensions.filters.network.generic_proxy.matcher.v3.PropertyMatchInput
 */
export const PropertyMatchInput = proto3.makeMessageType(
  "envoy.extensions.filters.network.generic_proxy.matcher.v3.PropertyMatchInput",
  () => [
    { no: 1, name: "property_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Used to match an whole generic downstream request.
 *
 * @generated from message envoy.extensions.filters.network.generic_proxy.matcher.v3.RequestMatchInput
 */
export const RequestMatchInput = proto3.makeMessageType(
  "envoy.extensions.filters.network.generic_proxy.matcher.v3.RequestMatchInput",
  [],
);

/**
 * Used to match an arbitrary key-value pair for headers, trailers or properties.
 *
 * @generated from message envoy.extensions.filters.network.generic_proxy.matcher.v3.KeyValueMatchEntry
 */
export const KeyValueMatchEntry = proto3.makeMessageType(
  "envoy.extensions.filters.network.generic_proxy.matcher.v3.KeyValueMatchEntry",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "string_match", kind: "message", T: StringMatcher },
  ],
);

/**
 * Custom matcher to match on the generic downstream request. This is used to match
 * multiple fields of the downstream request and avoid complex combinations of
 * HostMatchInput, PathMatchInput, MethodMatchInput and PropertyMatchInput.
 *
 * @generated from message envoy.extensions.filters.network.generic_proxy.matcher.v3.RequestMatcher
 */
export const RequestMatcher = proto3.makeMessageType(
  "envoy.extensions.filters.network.generic_proxy.matcher.v3.RequestMatcher",
  () => [
    { no: 1, name: "host", kind: "message", T: StringMatcher },
    { no: 2, name: "path", kind: "message", T: StringMatcher },
    { no: 3, name: "method", kind: "message", T: StringMatcher },
    { no: 4, name: "properties", kind: "message", T: KeyValueMatchEntry, repeated: true },
  ],
);

