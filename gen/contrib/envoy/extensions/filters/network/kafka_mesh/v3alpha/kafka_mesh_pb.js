// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/filters/network/kafka_mesh/v3alpha/kafka_mesh.proto (package envoy.extensions.filters.network.kafka_mesh.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.network.kafka_mesh.v3alpha.KafkaMesh
 */
export const KafkaMesh = proto3.makeMessageType(
  "envoy.extensions.filters.network.kafka_mesh.v3alpha.KafkaMesh",
  () => [
    { no: 1, name: "advertised_host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "advertised_port", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "upstream_clusters", kind: "message", T: KafkaClusterDefinition, repeated: true },
    { no: 4, name: "forwarding_rules", kind: "message", T: ForwardingRule, repeated: true },
    { no: 5, name: "consumer_proxy_mode", kind: "enum", T: proto3.getEnumType(KafkaMesh_ConsumerProxyMode) },
  ],
);

/**
 * @generated from enum envoy.extensions.filters.network.kafka_mesh.v3alpha.KafkaMesh.ConsumerProxyMode
 */
export const KafkaMesh_ConsumerProxyMode = proto3.makeEnum(
  "envoy.extensions.filters.network.kafka_mesh.v3alpha.KafkaMesh.ConsumerProxyMode",
  [
    {no: 0, name: "StatefulConsumerProxy"},
  ],
);

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.network.kafka_mesh.v3alpha.KafkaClusterDefinition
 */
export const KafkaClusterDefinition = proto3.makeMessageType(
  "envoy.extensions.filters.network.kafka_mesh.v3alpha.KafkaClusterDefinition",
  () => [
    { no: 1, name: "cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bootstrap_servers", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "partition_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "producer_config", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 5, name: "consumer_config", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.kafka_mesh.v3alpha.ForwardingRule
 */
export const ForwardingRule = proto3.makeMessageType(
  "envoy.extensions.filters.network.kafka_mesh.v3alpha.ForwardingRule",
  () => [
    { no: 1, name: "target_cluster", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "topic_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "trigger" },
  ],
);

