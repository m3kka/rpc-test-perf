// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/filters/http/language/v3alpha/language.proto (package envoy.extensions.filters.http.language.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Language detection filter config.
 *
 * @generated from message envoy.extensions.filters.http.language.v3alpha.Language
 */
export declare class Language extends Message<Language> {
  /**
   * The default language to be used as a fallback.
   * The value will be included in the list of the supported languages.
   *
   * See https://unicode-org.github.io/icu/userguide/locale/
   *
   * @generated from field: string default_language = 1;
   */
  defaultLanguage: string;

  /**
   * The set of supported languages. There is no order priority.
   * The order will be determined by the Accept-Language header priority list
   * of the client.
   *
   * See https://unicode-org.github.io/icu/userguide/locale/
   *
   * @generated from field: repeated string supported_languages = 2;
   */
  supportedLanguages: string[];

  /**
   * If the x-language header is altered, clear the route cache for the current request.
   * This should be set if the route configuration may depend on the x-language header.
   * Otherwise it should be unset to avoid the performance cost of route recalculation.
   *
   * @generated from field: bool clear_route_cache = 3;
   */
  clearRouteCache: boolean;

  constructor(data?: PartialMessage<Language>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.language.v3alpha.Language";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Language;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Language;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Language;

  static equals(a: Language | PlainMessage<Language> | undefined, b: Language | PlainMessage<Language> | undefined): boolean;
}

