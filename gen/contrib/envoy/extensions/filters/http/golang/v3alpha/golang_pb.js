// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/filters/http/golang/v3alpha/golang.proto (package envoy.extensions.filters.http.golang.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Any, proto3 } from "@bufbuild/protobuf";

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.http.golang.v3alpha.Config
 */
export const Config = proto3.makeMessageType(
  "envoy.extensions.filters.http.golang.v3alpha.Config",
  () => [
    { no: 1, name: "library_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "library_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "plugin_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "plugin_config", kind: "message", T: Any },
    { no: 5, name: "merge_policy", kind: "enum", T: proto3.getEnumType(Config_MergePolicy) },
  ],
);

/**
 * The meanings are as follows:
 *
 * :``MERGE_VIRTUALHOST_ROUTER_FILTER``: Pass all configuration into Go plugin.
 * :``MERGE_VIRTUALHOST_ROUTER``: Pass merged Virtual host and Router configuration into Go plugin.
 * :``OVERRIDE``: Pass merged Virtual host, Router, and plugin configuration into Go plugin.
 *
 * [#not-implemented-hide:]
 *
 * @generated from enum envoy.extensions.filters.http.golang.v3alpha.Config.MergePolicy
 */
export const Config_MergePolicy = proto3.makeEnum(
  "envoy.extensions.filters.http.golang.v3alpha.Config.MergePolicy",
  [
    {no: 0, name: "MERGE_VIRTUALHOST_ROUTER_FILTER"},
    {no: 1, name: "MERGE_VIRTUALHOST_ROUTER"},
    {no: 3, name: "OVERRIDE"},
  ],
);

/**
 * @generated from message envoy.extensions.filters.http.golang.v3alpha.RouterPlugin
 */
export const RouterPlugin = proto3.makeMessageType(
  "envoy.extensions.filters.http.golang.v3alpha.RouterPlugin",
  () => [
    { no: 1, name: "disabled", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "override" },
    { no: 2, name: "config", kind: "message", T: Any, oneof: "override" },
  ],
);

/**
 * @generated from message envoy.extensions.filters.http.golang.v3alpha.ConfigsPerRoute
 */
export const ConfigsPerRoute = proto3.makeMessageType(
  "envoy.extensions.filters.http.golang.v3alpha.ConfigsPerRoute",
  () => [
    { no: 1, name: "plugins_config", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: RouterPlugin} },
  ],
);

