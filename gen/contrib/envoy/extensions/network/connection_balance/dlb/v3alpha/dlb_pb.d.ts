// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/network/connection_balance/dlb/v3alpha/dlb.proto (package envoy.extensions.network.connection_balance.dlb.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * The Dlb is a hardware managed system of queues and arbiters connecting producers and consumers. It is a PCIE device
 * in the CPU package. It interacts with software running on cores and potentially other devices. The Dlb implements the
 * following balancing features:
 *
 * -  Lock-free multi-producer/multi-consumer operation.
 * -  Multiple priorities for varying traffic types.
 * -  Various distribution schemes.
 *
 * Dlb connection balancer uses Dlb hardware to balance connections, and can significantly reduce latency.
 *
 * As the Dlb connection balancer provides assistance from dedicated Dlb hardware, it can be used for a proxy with a large number of connections
 * (e.g., a gateway).
 *
 * @generated from message envoy.extensions.network.connection_balance.dlb.v3alpha.Dlb
 */
export declare class Dlb extends Message<Dlb> {
  /**
   * The ID of the Dlb hardware, start from 0.
   * If not specified, use the first available device as default.
   *
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * Maximum number of retries when sending to DLB device fails.
   * No retry as default.
   *
   * @generated from field: uint32 max_retries = 2;
   */
  maxRetries: number;

  /**
   * @generated from field: envoy.extensions.network.connection_balance.dlb.v3alpha.Dlb.FallbackPolicy fallback_policy = 3;
   */
  fallbackPolicy: Dlb_FallbackPolicy;

  constructor(data?: PartialMessage<Dlb>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.network.connection_balance.dlb.v3alpha.Dlb";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dlb;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dlb;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dlb;

  static equals(a: Dlb | PlainMessage<Dlb> | undefined, b: Dlb | PlainMessage<Dlb> | undefined): boolean;
}

/**
 * The fallback policy if any error occurs.
 * The default policy is None.
 *
 * @generated from enum envoy.extensions.network.connection_balance.dlb.v3alpha.Dlb.FallbackPolicy
 */
export declare enum Dlb_FallbackPolicy {
  /**
   * No fallback policy.
   *
   * @generated from enum value: None = 0;
   */
  None = 0,

  /**
   * Fall back to Nop Connection Balance.
   *
   * @generated from enum value: NopConnectionBalance = 1;
   */
  NopConnectionBalance = 1,

  /**
   * Fall back to Exact Connection Balance.
   *
   * @generated from enum value: ExactConnectionBalance = 2;
   */
  ExactConnectionBalance = 2,
}

