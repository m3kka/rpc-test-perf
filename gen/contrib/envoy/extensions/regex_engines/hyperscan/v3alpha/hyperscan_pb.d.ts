// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/regex_engines/hyperscan/v3alpha/hyperscan.proto (package envoy.extensions.regex_engines.hyperscan.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * `Hyperscan <https://github.com/intel/hyperscan>`_ regex engine. The engine uses hybrid automata
 * techniques to allow simultaneous matching of large numbers of regular expressions across streams
 * of data.
 *
 * The engine follows PCRE pattern syntax, and the regex string must adhere to the documented
 * `pattern support <https://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support>`_.
 * The syntax is not compatible with the default RE2 regex engine. Depending on configured
 * expressions, swapping regex engine may cause match rules to no longer be valid.
 *
 * @generated from message envoy.extensions.regex_engines.hyperscan.v3alpha.Hyperscan
 */
export declare class Hyperscan extends Message<Hyperscan> {
  constructor(data?: PartialMessage<Hyperscan>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.regex_engines.hyperscan.v3alpha.Hyperscan";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Hyperscan;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Hyperscan;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Hyperscan;

  static equals(a: Hyperscan | PlainMessage<Hyperscan> | undefined, b: Hyperscan | PlainMessage<Hyperscan> | undefined): boolean;
}

