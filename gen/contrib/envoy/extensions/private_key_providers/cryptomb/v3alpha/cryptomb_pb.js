// @generated by protoc-gen-es v1.5.1
// @generated from file contrib/envoy/extensions/private_key_providers/cryptomb/v3alpha/cryptomb.proto (package envoy.extensions.private_key_providers.cryptomb.v3alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3 } from "@bufbuild/protobuf";
import { DataSource } from "../../../../../../envoy/config/core/v3/base_pb.js";

/**
 * A CryptoMbPrivateKeyMethodConfig message specifies how the CryptoMb private
 * key provider is configured. The private key provider provides ``SIMD``
 * processing for RSA sign and decrypt operations (ECDSA signing uses regular
 * BoringSSL functions). The provider works by gathering the operations into a
 * worker-thread specific queue, and processing the queue using ``ipp-crypto``
 * library when the queue is full or when a timer expires.
 * [#extension-category: envoy.tls.key_providers]
 *
 * @generated from message envoy.extensions.private_key_providers.cryptomb.v3alpha.CryptoMbPrivateKeyMethodConfig
 */
export const CryptoMbPrivateKeyMethodConfig = proto3.makeMessageType(
  "envoy.extensions.private_key_providers.cryptomb.v3alpha.CryptoMbPrivateKeyMethodConfig",
  () => [
    { no: 1, name: "private_key", kind: "message", T: DataSource },
    { no: 2, name: "poll_delay", kind: "message", T: Duration },
  ],
);

