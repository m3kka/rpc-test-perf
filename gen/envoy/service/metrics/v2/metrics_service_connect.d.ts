// @generated by protoc-gen-connect-es v1.1.4
// @generated from file envoy/service/metrics/v2/metrics_service.proto (package envoy.service.metrics.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { StreamMetricsMessage, StreamMetricsResponse } from "./metrics_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Service for streaming metrics to server that consumes the metrics data. It uses Prometheus metric
 * data model as a standard to represent metrics information.
 *
 * @generated from service envoy.service.metrics.v2.MetricsService
 */
export declare const MetricsService: {
  readonly typeName: "envoy.service.metrics.v2.MetricsService",
  readonly methods: {
    /**
     * Envoy will connect and send StreamMetricsMessage messages forever. It does not expect any
     * response to be sent as nothing would be done in the case of failure.
     *
     * @generated from rpc envoy.service.metrics.v2.MetricsService.StreamMetrics
     */
    readonly streamMetrics: {
      readonly name: "StreamMetrics",
      readonly I: typeof StreamMetricsMessage,
      readonly O: typeof StreamMetricsResponse,
      readonly kind: MethodKind.ClientStreaming,
    },
  }
};

