// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/service/metrics/v3/metrics_service.proto (package envoy.service.metrics.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { MetricFamily } from "../../../../io/prometheus/client/metrics_pb.js";
import type { Node } from "../../../config/core/v3/base_pb.js";

/**
 * @generated from message envoy.service.metrics.v3.StreamMetricsResponse
 */
export declare class StreamMetricsResponse extends Message<StreamMetricsResponse> {
  constructor(data?: PartialMessage<StreamMetricsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.service.metrics.v3.StreamMetricsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamMetricsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamMetricsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamMetricsResponse;

  static equals(a: StreamMetricsResponse | PlainMessage<StreamMetricsResponse> | undefined, b: StreamMetricsResponse | PlainMessage<StreamMetricsResponse> | undefined): boolean;
}

/**
 * @generated from message envoy.service.metrics.v3.StreamMetricsMessage
 */
export declare class StreamMetricsMessage extends Message<StreamMetricsMessage> {
  /**
   * Identifier data effectively is a structured metadata. As a performance optimization this will
   * only be sent in the first message on the stream.
   *
   * @generated from field: envoy.service.metrics.v3.StreamMetricsMessage.Identifier identifier = 1;
   */
  identifier?: StreamMetricsMessage_Identifier;

  /**
   * A list of metric entries
   *
   * @generated from field: repeated io.prometheus.client.MetricFamily envoy_metrics = 2;
   */
  envoyMetrics: MetricFamily[];

  constructor(data?: PartialMessage<StreamMetricsMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.service.metrics.v3.StreamMetricsMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamMetricsMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamMetricsMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamMetricsMessage;

  static equals(a: StreamMetricsMessage | PlainMessage<StreamMetricsMessage> | undefined, b: StreamMetricsMessage | PlainMessage<StreamMetricsMessage> | undefined): boolean;
}

/**
 * @generated from message envoy.service.metrics.v3.StreamMetricsMessage.Identifier
 */
export declare class StreamMetricsMessage_Identifier extends Message<StreamMetricsMessage_Identifier> {
  /**
   * The node sending metrics over the stream.
   *
   * @generated from field: envoy.config.core.v3.Node node = 1;
   */
  node?: Node;

  constructor(data?: PartialMessage<StreamMetricsMessage_Identifier>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.service.metrics.v3.StreamMetricsMessage.Identifier";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamMetricsMessage_Identifier;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamMetricsMessage_Identifier;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamMetricsMessage_Identifier;

  static equals(a: StreamMetricsMessage_Identifier | PlainMessage<StreamMetricsMessage_Identifier> | undefined, b: StreamMetricsMessage_Identifier | PlainMessage<StreamMetricsMessage_Identifier> | undefined): boolean;
}

