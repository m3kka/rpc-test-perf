// @generated by protoc-gen-connect-es v1.1.4
// @generated from file envoy/service/tap/v3/tap.proto (package envoy.service.tap.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { StreamTapsRequest, StreamTapsResponse } from "./tap_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * [#not-implemented-hide:] A tap service to receive incoming taps. Envoy will call
 * StreamTaps to deliver captured taps to the server
 *
 * @generated from service envoy.service.tap.v3.TapSinkService
 */
export declare const TapSinkService: {
  readonly typeName: "envoy.service.tap.v3.TapSinkService",
  readonly methods: {
    /**
     * Envoy will connect and send StreamTapsRequest messages forever. It does not expect any
     * response to be sent as nothing would be done in the case of failure. The server should
     * disconnect if it expects Envoy to reconnect.
     *
     * @generated from rpc envoy.service.tap.v3.TapSinkService.StreamTaps
     */
    readonly streamTaps: {
      readonly name: "StreamTaps",
      readonly I: typeof StreamTapsRequest,
      readonly O: typeof StreamTapsResponse,
      readonly kind: MethodKind.ClientStreaming,
    },
  }
};

