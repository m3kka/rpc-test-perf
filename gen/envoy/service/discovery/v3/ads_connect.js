// @generated by protoc-gen-connect-es v1.1.4
// @generated from file envoy/service/discovery/v3/ads.proto (package envoy.service.discovery.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { DeltaDiscoveryRequest, DeltaDiscoveryResponse, DiscoveryRequest, DiscoveryResponse } from "./discovery_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * See https://github.com/envoyproxy/envoy-api#apis for a description of the role of
 * ADS and how it is intended to be used by a management server. ADS requests
 * have the same structure as their singleton xDS counterparts, but can
 * multiplex many resource types on a single stream. The type_url in the
 * DiscoveryRequest/DiscoveryResponse provides sufficient information to recover
 * the multiplexed singleton APIs at the Envoy instance and management server.
 *
 * @generated from service envoy.service.discovery.v3.AggregatedDiscoveryService
 */
export const AggregatedDiscoveryService = {
  typeName: "envoy.service.discovery.v3.AggregatedDiscoveryService",
  methods: {
    /**
     * This is a gRPC-only API.
     *
     * @generated from rpc envoy.service.discovery.v3.AggregatedDiscoveryService.StreamAggregatedResources
     */
    streamAggregatedResources: {
      name: "StreamAggregatedResources",
      I: DiscoveryRequest,
      O: DiscoveryResponse,
      kind: MethodKind.BiDiStreaming,
    },
    /**
     * @generated from rpc envoy.service.discovery.v3.AggregatedDiscoveryService.DeltaAggregatedResources
     */
    deltaAggregatedResources: {
      name: "DeltaAggregatedResources",
      I: DeltaDiscoveryRequest,
      O: DeltaDiscoveryResponse,
      kind: MethodKind.BiDiStreaming,
    },
  }
};

