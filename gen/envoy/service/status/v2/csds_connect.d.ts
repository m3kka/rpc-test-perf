// @generated by protoc-gen-connect-es v1.1.4
// @generated from file envoy/service/status/v2/csds.proto (package envoy.service.status.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ClientStatusRequest, ClientStatusResponse } from "./csds_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * CSDS is Client Status Discovery Service. It can be used to get the status of
 * an xDS-compliant client from the management server's point of view. In the
 * future, it can potentially be used as an interface to get the current
 * state directly from the client.
 *
 * @generated from service envoy.service.status.v2.ClientStatusDiscoveryService
 */
export declare const ClientStatusDiscoveryService: {
  readonly typeName: "envoy.service.status.v2.ClientStatusDiscoveryService",
  readonly methods: {
    /**
     * @generated from rpc envoy.service.status.v2.ClientStatusDiscoveryService.StreamClientStatus
     */
    readonly streamClientStatus: {
      readonly name: "StreamClientStatus",
      readonly I: typeof ClientStatusRequest,
      readonly O: typeof ClientStatusResponse,
      readonly kind: MethodKind.BiDiStreaming,
    },
    /**
     * @generated from rpc envoy.service.status.v2.ClientStatusDiscoveryService.FetchClientStatus
     */
    readonly fetchClientStatus: {
      readonly name: "FetchClientStatus",
      readonly I: typeof ClientStatusRequest,
      readonly O: typeof ClientStatusResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

