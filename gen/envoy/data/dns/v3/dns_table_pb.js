// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/data/dns/v3/dns_table.proto (package envoy.data.dns.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3 } from "@bufbuild/protobuf";
import { StringMatcher } from "../../../type/matcher/v3/string_pb.js";

/**
 * This message contains the configuration for the DNS Filter if populated
 * from the control plane
 *
 * @generated from message envoy.data.dns.v3.DnsTable
 */
export const DnsTable = proto3.makeMessageType(
  "envoy.data.dns.v3.DnsTable",
  () => [
    { no: 1, name: "external_retry_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "virtual_domains", kind: "message", T: DnsTable_DnsVirtualDomain, repeated: true },
    { no: 3, name: "known_suffixes", kind: "message", T: StringMatcher, repeated: true },
  ],
);

/**
 * This message contains a list of IP addresses returned for a query for a known name
 *
 * @generated from message envoy.data.dns.v3.DnsTable.AddressList
 */
export const DnsTable_AddressList = proto3.makeMessageType(
  "envoy.data.dns.v3.DnsTable.AddressList",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
  {localName: "DnsTable_AddressList"},
);

/**
 * Specify the service protocol using a numeric or string value
 *
 * @generated from message envoy.data.dns.v3.DnsTable.DnsServiceProtocol
 */
export const DnsTable_DnsServiceProtocol = proto3.makeMessageType(
  "envoy.data.dns.v3.DnsTable.DnsServiceProtocol",
  () => [
    { no: 1, name: "number", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "protocol_config" },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "protocol_config" },
  ],
  {localName: "DnsTable_DnsServiceProtocol"},
);

/**
 * Specify the target for a given DNS service
 * [#next-free-field: 6]
 *
 * @generated from message envoy.data.dns.v3.DnsTable.DnsServiceTarget
 */
export const DnsTable_DnsServiceTarget = proto3.makeMessageType(
  "envoy.data.dns.v3.DnsTable.DnsServiceTarget",
  () => [
    { no: 1, name: "host_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "endpoint_type" },
    { no: 2, name: "cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "endpoint_type" },
    { no: 3, name: "priority", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "weight", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "port", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
  {localName: "DnsTable_DnsServiceTarget"},
);

/**
 * This message defines a service selection record returned for a service query in a domain
 *
 * @generated from message envoy.data.dns.v3.DnsTable.DnsService
 */
export const DnsTable_DnsService = proto3.makeMessageType(
  "envoy.data.dns.v3.DnsTable.DnsService",
  () => [
    { no: 1, name: "service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "protocol", kind: "message", T: DnsTable_DnsServiceProtocol },
    { no: 3, name: "ttl", kind: "message", T: Duration },
    { no: 4, name: "targets", kind: "message", T: DnsTable_DnsServiceTarget, repeated: true },
  ],
  {localName: "DnsTable_DnsService"},
);

/**
 * Define a list of service records for a given service
 *
 * @generated from message envoy.data.dns.v3.DnsTable.DnsServiceList
 */
export const DnsTable_DnsServiceList = proto3.makeMessageType(
  "envoy.data.dns.v3.DnsTable.DnsServiceList",
  () => [
    { no: 1, name: "services", kind: "message", T: DnsTable_DnsService, repeated: true },
  ],
  {localName: "DnsTable_DnsServiceList"},
);

/**
 * @generated from message envoy.data.dns.v3.DnsTable.DnsEndpoint
 */
export const DnsTable_DnsEndpoint = proto3.makeMessageType(
  "envoy.data.dns.v3.DnsTable.DnsEndpoint",
  () => [
    { no: 1, name: "address_list", kind: "message", T: DnsTable_AddressList, oneof: "endpoint_config" },
    { no: 2, name: "cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "endpoint_config" },
    { no: 3, name: "service_list", kind: "message", T: DnsTable_DnsServiceList, oneof: "endpoint_config" },
  ],
  {localName: "DnsTable_DnsEndpoint"},
);

/**
 * @generated from message envoy.data.dns.v3.DnsTable.DnsVirtualDomain
 */
export const DnsTable_DnsVirtualDomain = proto3.makeMessageType(
  "envoy.data.dns.v3.DnsTable.DnsVirtualDomain",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoint", kind: "message", T: DnsTable_DnsEndpoint },
    { no: 3, name: "answer_ttl", kind: "message", T: Duration },
  ],
  {localName: "DnsTable_DnsVirtualDomain"},
);

