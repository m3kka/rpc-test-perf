// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/data/tap/v3/http.proto (package envoy.data.tap.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { HeaderMap, HeaderValue } from "../../../config/core/v3/base_pb.js";
import type { Body } from "./common_pb.js";

/**
 * A fully buffered HTTP trace message.
 *
 * @generated from message envoy.data.tap.v3.HttpBufferedTrace
 */
export declare class HttpBufferedTrace extends Message<HttpBufferedTrace> {
  /**
   * Request message.
   *
   * @generated from field: envoy.data.tap.v3.HttpBufferedTrace.Message request = 1;
   */
  request?: HttpBufferedTrace_Message;

  /**
   * Response message.
   *
   * @generated from field: envoy.data.tap.v3.HttpBufferedTrace.Message response = 2;
   */
  response?: HttpBufferedTrace_Message;

  constructor(data?: PartialMessage<HttpBufferedTrace>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.data.tap.v3.HttpBufferedTrace";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HttpBufferedTrace;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HttpBufferedTrace;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HttpBufferedTrace;

  static equals(a: HttpBufferedTrace | PlainMessage<HttpBufferedTrace> | undefined, b: HttpBufferedTrace | PlainMessage<HttpBufferedTrace> | undefined): boolean;
}

/**
 * HTTP message wrapper.
 *
 * @generated from message envoy.data.tap.v3.HttpBufferedTrace.Message
 */
export declare class HttpBufferedTrace_Message extends Message<HttpBufferedTrace_Message> {
  /**
   * Message headers.
   *
   * @generated from field: repeated envoy.config.core.v3.HeaderValue headers = 1;
   */
  headers: HeaderValue[];

  /**
   * Message body.
   *
   * @generated from field: envoy.data.tap.v3.Body body = 2;
   */
  body?: Body;

  /**
   * Message trailers.
   *
   * @generated from field: repeated envoy.config.core.v3.HeaderValue trailers = 3;
   */
  trailers: HeaderValue[];

  constructor(data?: PartialMessage<HttpBufferedTrace_Message>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.data.tap.v3.HttpBufferedTrace.Message";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HttpBufferedTrace_Message;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HttpBufferedTrace_Message;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HttpBufferedTrace_Message;

  static equals(a: HttpBufferedTrace_Message | PlainMessage<HttpBufferedTrace_Message> | undefined, b: HttpBufferedTrace_Message | PlainMessage<HttpBufferedTrace_Message> | undefined): boolean;
}

/**
 * A streamed HTTP trace segment. Multiple segments make up a full trace.
 * [#next-free-field: 8]
 *
 * @generated from message envoy.data.tap.v3.HttpStreamedTraceSegment
 */
export declare class HttpStreamedTraceSegment extends Message<HttpStreamedTraceSegment> {
  /**
   * Trace ID unique to the originating Envoy only. Trace IDs can repeat and should not be used
   * for long term stable uniqueness.
   *
   * @generated from field: uint64 trace_id = 1;
   */
  traceId: bigint;

  /**
   * @generated from oneof envoy.data.tap.v3.HttpStreamedTraceSegment.message_piece
   */
  messagePiece: {
    /**
     * Request headers.
     *
     * @generated from field: envoy.config.core.v3.HeaderMap request_headers = 2;
     */
    value: HeaderMap;
    case: "requestHeaders";
  } | {
    /**
     * Request body chunk.
     *
     * @generated from field: envoy.data.tap.v3.Body request_body_chunk = 3;
     */
    value: Body;
    case: "requestBodyChunk";
  } | {
    /**
     * Request trailers.
     *
     * @generated from field: envoy.config.core.v3.HeaderMap request_trailers = 4;
     */
    value: HeaderMap;
    case: "requestTrailers";
  } | {
    /**
     * Response headers.
     *
     * @generated from field: envoy.config.core.v3.HeaderMap response_headers = 5;
     */
    value: HeaderMap;
    case: "responseHeaders";
  } | {
    /**
     * Response body chunk.
     *
     * @generated from field: envoy.data.tap.v3.Body response_body_chunk = 6;
     */
    value: Body;
    case: "responseBodyChunk";
  } | {
    /**
     * Response trailers.
     *
     * @generated from field: envoy.config.core.v3.HeaderMap response_trailers = 7;
     */
    value: HeaderMap;
    case: "responseTrailers";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<HttpStreamedTraceSegment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.data.tap.v3.HttpStreamedTraceSegment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HttpStreamedTraceSegment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HttpStreamedTraceSegment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HttpStreamedTraceSegment;

  static equals(a: HttpStreamedTraceSegment | PlainMessage<HttpStreamedTraceSegment> | undefined, b: HttpStreamedTraceSegment | PlainMessage<HttpStreamedTraceSegment> | undefined): boolean;
}

