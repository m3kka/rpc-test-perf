// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/data/cluster/v3/outlier_detection_event.proto (package envoy.data.cluster.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Type of ejection that took place
 *
 * @generated from enum envoy.data.cluster.v3.OutlierEjectionType
 */
export declare enum OutlierEjectionType {
  /**
   * In case upstream host returns certain number of consecutive 5xx.
   * If
   * :ref:`outlier_detection.split_external_local_origin_errors<envoy_v3_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors>`
   * is ``false``, all type of errors are treated as HTTP 5xx errors.
   * See :ref:`Cluster outlier detection <arch_overview_outlier_detection>` documentation for
   * details.
   *
   * @generated from enum value: CONSECUTIVE_5XX = 0;
   */
  CONSECUTIVE_5XX = 0,

  /**
   * In case upstream host returns certain number of consecutive gateway errors
   *
   * @generated from enum value: CONSECUTIVE_GATEWAY_FAILURE = 1;
   */
  CONSECUTIVE_GATEWAY_FAILURE = 1,

  /**
   * Runs over aggregated success rate statistics from every host in cluster
   * and selects hosts for which ratio of successful replies deviates from other hosts
   * in the cluster.
   * If
   * :ref:`outlier_detection.split_external_local_origin_errors<envoy_v3_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors>`
   * is ``false``, all errors (externally and locally generated) are used to calculate success rate
   * statistics. See :ref:`Cluster outlier detection <arch_overview_outlier_detection>`
   * documentation for details.
   *
   * @generated from enum value: SUCCESS_RATE = 2;
   */
  SUCCESS_RATE = 2,

  /**
   * Consecutive local origin failures: Connection failures, resets, timeouts, etc
   * This type of ejection happens only when
   * :ref:`outlier_detection.split_external_local_origin_errors<envoy_v3_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors>`
   * is set to ``true``.
   * See :ref:`Cluster outlier detection <arch_overview_outlier_detection>` documentation for
   *
   * @generated from enum value: CONSECUTIVE_LOCAL_ORIGIN_FAILURE = 3;
   */
  CONSECUTIVE_LOCAL_ORIGIN_FAILURE = 3,

  /**
   * Runs over aggregated success rate statistics for local origin failures
   * for all hosts in the cluster and selects hosts for which success rate deviates from other
   * hosts in the cluster. This type of ejection happens only when
   * :ref:`outlier_detection.split_external_local_origin_errors<envoy_v3_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors>`
   * is set to ``true``.
   * See :ref:`Cluster outlier detection <arch_overview_outlier_detection>` documentation for
   *
   * @generated from enum value: SUCCESS_RATE_LOCAL_ORIGIN = 4;
   */
  SUCCESS_RATE_LOCAL_ORIGIN = 4,

  /**
   * Runs over aggregated success rate statistics from every host in cluster and selects hosts for
   * which ratio of failed replies is above configured value.
   *
   * @generated from enum value: FAILURE_PERCENTAGE = 5;
   */
  FAILURE_PERCENTAGE = 5,

  /**
   * Runs over aggregated success rate statistics for local origin failures from every host in
   * cluster and selects hosts for which ratio of failed replies is above configured value.
   *
   * @generated from enum value: FAILURE_PERCENTAGE_LOCAL_ORIGIN = 6;
   */
  FAILURE_PERCENTAGE_LOCAL_ORIGIN = 6,
}

/**
 * Represents possible action applied to upstream host
 *
 * @generated from enum envoy.data.cluster.v3.Action
 */
export declare enum Action {
  /**
   * In case host was excluded from service
   *
   * @generated from enum value: EJECT = 0;
   */
  EJECT = 0,

  /**
   * In case host was brought back into service
   *
   * @generated from enum value: UNEJECT = 1;
   */
  UNEJECT = 1,
}

/**
 * [#next-free-field: 12]
 *
 * @generated from message envoy.data.cluster.v3.OutlierDetectionEvent
 */
export declare class OutlierDetectionEvent extends Message<OutlierDetectionEvent> {
  /**
   * In case of eject represents type of ejection that took place.
   *
   * @generated from field: envoy.data.cluster.v3.OutlierEjectionType type = 1;
   */
  type: OutlierEjectionType;

  /**
   * Timestamp for event.
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * The time in seconds since the last action (either an ejection or unejection) took place.
   *
   * @generated from field: google.protobuf.UInt64Value secs_since_last_action = 3;
   */
  secsSinceLastAction?: bigint;

  /**
   * The :ref:`cluster <envoy_v3_api_msg_config.cluster.v3.Cluster>` that owns the ejected host.
   *
   * @generated from field: string cluster_name = 4;
   */
  clusterName: string;

  /**
   * The URL of the ejected host. E.g., ``tcp://1.2.3.4:80``.
   *
   * @generated from field: string upstream_url = 5;
   */
  upstreamUrl: string;

  /**
   * The action that took place.
   *
   * @generated from field: envoy.data.cluster.v3.Action action = 6;
   */
  action: Action;

  /**
   * If ``action`` is ``eject``, specifies the number of times the host has been ejected (local to
   * that Envoy and gets reset if the host gets removed from the upstream cluster for any reason and
   * then re-added).
   *
   * @generated from field: uint32 num_ejections = 7;
   */
  numEjections: number;

  /**
   * If ``action`` is ``eject``, specifies if the ejection was enforced. ``true`` means the host was
   * ejected. ``false`` means the event was logged but the host was not actually ejected.
   *
   * @generated from field: bool enforced = 8;
   */
  enforced: boolean;

  /**
   * @generated from oneof envoy.data.cluster.v3.OutlierDetectionEvent.event
   */
  event: {
    /**
     * @generated from field: envoy.data.cluster.v3.OutlierEjectSuccessRate eject_success_rate_event = 9;
     */
    value: OutlierEjectSuccessRate;
    case: "ejectSuccessRateEvent";
  } | {
    /**
     * @generated from field: envoy.data.cluster.v3.OutlierEjectConsecutive eject_consecutive_event = 10;
     */
    value: OutlierEjectConsecutive;
    case: "ejectConsecutiveEvent";
  } | {
    /**
     * @generated from field: envoy.data.cluster.v3.OutlierEjectFailurePercentage eject_failure_percentage_event = 11;
     */
    value: OutlierEjectFailurePercentage;
    case: "ejectFailurePercentageEvent";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<OutlierDetectionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.data.cluster.v3.OutlierDetectionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutlierDetectionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutlierDetectionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutlierDetectionEvent;

  static equals(a: OutlierDetectionEvent | PlainMessage<OutlierDetectionEvent> | undefined, b: OutlierDetectionEvent | PlainMessage<OutlierDetectionEvent> | undefined): boolean;
}

/**
 * @generated from message envoy.data.cluster.v3.OutlierEjectSuccessRate
 */
export declare class OutlierEjectSuccessRate extends Message<OutlierEjectSuccessRate> {
  /**
   * Hostâ€™s success rate at the time of the ejection event on a 0-100 range.
   *
   * @generated from field: uint32 host_success_rate = 1;
   */
  hostSuccessRate: number;

  /**
   * Average success rate of the hosts in the cluster at the time of the ejection event on a 0-100
   * range.
   *
   * @generated from field: uint32 cluster_average_success_rate = 2;
   */
  clusterAverageSuccessRate: number;

  /**
   * Success rate ejection threshold at the time of the ejection event.
   *
   * @generated from field: uint32 cluster_success_rate_ejection_threshold = 3;
   */
  clusterSuccessRateEjectionThreshold: number;

  constructor(data?: PartialMessage<OutlierEjectSuccessRate>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.data.cluster.v3.OutlierEjectSuccessRate";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutlierEjectSuccessRate;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutlierEjectSuccessRate;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutlierEjectSuccessRate;

  static equals(a: OutlierEjectSuccessRate | PlainMessage<OutlierEjectSuccessRate> | undefined, b: OutlierEjectSuccessRate | PlainMessage<OutlierEjectSuccessRate> | undefined): boolean;
}

/**
 * @generated from message envoy.data.cluster.v3.OutlierEjectConsecutive
 */
export declare class OutlierEjectConsecutive extends Message<OutlierEjectConsecutive> {
  constructor(data?: PartialMessage<OutlierEjectConsecutive>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.data.cluster.v3.OutlierEjectConsecutive";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutlierEjectConsecutive;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutlierEjectConsecutive;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutlierEjectConsecutive;

  static equals(a: OutlierEjectConsecutive | PlainMessage<OutlierEjectConsecutive> | undefined, b: OutlierEjectConsecutive | PlainMessage<OutlierEjectConsecutive> | undefined): boolean;
}

/**
 * @generated from message envoy.data.cluster.v3.OutlierEjectFailurePercentage
 */
export declare class OutlierEjectFailurePercentage extends Message<OutlierEjectFailurePercentage> {
  /**
   * Host's success rate at the time of the ejection event on a 0-100 range.
   *
   * @generated from field: uint32 host_success_rate = 1;
   */
  hostSuccessRate: number;

  constructor(data?: PartialMessage<OutlierEjectFailurePercentage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.data.cluster.v3.OutlierEjectFailurePercentage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutlierEjectFailurePercentage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutlierEjectFailurePercentage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutlierEjectFailurePercentage;

  static equals(a: OutlierEjectFailurePercentage | PlainMessage<OutlierEjectFailurePercentage> | undefined, b: OutlierEjectFailurePercentage | PlainMessage<OutlierEjectFailurePercentage> | undefined): boolean;
}

