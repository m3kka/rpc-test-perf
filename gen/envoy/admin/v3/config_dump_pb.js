// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/admin/v3/config_dump.proto (package envoy.admin.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Any, proto3, Timestamp } from "@bufbuild/protobuf";
import { Bootstrap } from "../../config/bootstrap/v3/bootstrap_pb.js";
import { ClientResourceStatus, UpdateFailureState } from "./config_dump_shared_pb.js";

/**
 * The :ref:`/config_dump <operations_admin_interface_config_dump>` admin endpoint uses this wrapper
 * message to maintain and serve arbitrary configuration information from any component in Envoy.
 *
 * @generated from message envoy.admin.v3.ConfigDump
 */
export const ConfigDump = proto3.makeMessageType(
  "envoy.admin.v3.ConfigDump",
  () => [
    { no: 1, name: "configs", kind: "message", T: Any, repeated: true },
  ],
);

/**
 * This message describes the bootstrap configuration that Envoy was started with. This includes
 * any CLI overrides that were merged. Bootstrap configuration information can be used to recreate
 * the static portions of an Envoy configuration by reusing the output as the bootstrap
 * configuration for another Envoy.
 *
 * @generated from message envoy.admin.v3.BootstrapConfigDump
 */
export const BootstrapConfigDump = proto3.makeMessageType(
  "envoy.admin.v3.BootstrapConfigDump",
  () => [
    { no: 1, name: "bootstrap", kind: "message", T: Bootstrap },
    { no: 2, name: "last_updated", kind: "message", T: Timestamp },
  ],
);

/**
 * Envoys SDS implementation fills this message with all secrets fetched dynamically via SDS.
 *
 * @generated from message envoy.admin.v3.SecretsConfigDump
 */
export const SecretsConfigDump = proto3.makeMessageType(
  "envoy.admin.v3.SecretsConfigDump",
  () => [
    { no: 1, name: "static_secrets", kind: "message", T: SecretsConfigDump_StaticSecret, repeated: true },
    { no: 2, name: "dynamic_active_secrets", kind: "message", T: SecretsConfigDump_DynamicSecret, repeated: true },
    { no: 3, name: "dynamic_warming_secrets", kind: "message", T: SecretsConfigDump_DynamicSecret, repeated: true },
  ],
);

/**
 * DynamicSecret contains secret information fetched via SDS.
 * [#next-free-field: 7]
 *
 * @generated from message envoy.admin.v3.SecretsConfigDump.DynamicSecret
 */
export const SecretsConfigDump_DynamicSecret = proto3.makeMessageType(
  "envoy.admin.v3.SecretsConfigDump.DynamicSecret",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "version_info", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_updated", kind: "message", T: Timestamp },
    { no: 4, name: "secret", kind: "message", T: Any },
    { no: 5, name: "error_state", kind: "message", T: UpdateFailureState },
    { no: 6, name: "client_status", kind: "enum", T: proto3.getEnumType(ClientResourceStatus) },
  ],
  {localName: "SecretsConfigDump_DynamicSecret"},
);

/**
 * StaticSecret specifies statically loaded secret in bootstrap.
 *
 * @generated from message envoy.admin.v3.SecretsConfigDump.StaticSecret
 */
export const SecretsConfigDump_StaticSecret = proto3.makeMessageType(
  "envoy.admin.v3.SecretsConfigDump.StaticSecret",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "last_updated", kind: "message", T: Timestamp },
    { no: 3, name: "secret", kind: "message", T: Any },
  ],
  {localName: "SecretsConfigDump_StaticSecret"},
);

