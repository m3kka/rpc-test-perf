// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/admin/v3/config_dump_shared.proto (package envoy.admin.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { Any, BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Resource status from the view of a xDS client, which tells the synchronization
 * status between the xDS client and the xDS server.
 *
 * @generated from enum envoy.admin.v3.ClientResourceStatus
 */
export declare enum ClientResourceStatus {
  /**
   * Resource status is not available/unknown.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Client requested this resource but hasn't received any update from management
   * server. The client will not fail requests, but will queue them until update
   * arrives or the client times out waiting for the resource.
   *
   * @generated from enum value: REQUESTED = 1;
   */
  REQUESTED = 1,

  /**
   * This resource has been requested by the client but has either not been
   * delivered by the server or was previously delivered by the server and then
   * subsequently removed from resources provided by the server. For more
   * information, please refer to the :ref:`"Knowing When a Requested Resource
   * Does Not Exist" <xds_protocol_resource_not_existed>` section.
   *
   * @generated from enum value: DOES_NOT_EXIST = 2;
   */
  DOES_NOT_EXIST = 2,

  /**
   * Client received this resource and replied with ACK.
   *
   * @generated from enum value: ACKED = 3;
   */
  ACKED = 3,

  /**
   * Client received this resource and replied with NACK.
   *
   * @generated from enum value: NACKED = 4;
   */
  NACKED = 4,
}

/**
 * @generated from message envoy.admin.v3.UpdateFailureState
 */
export declare class UpdateFailureState extends Message<UpdateFailureState> {
  /**
   * What the component configuration would have been if the update had succeeded.
   * This field may not be populated by xDS clients due to storage overhead.
   *
   * @generated from field: google.protobuf.Any failed_configuration = 1;
   */
  failedConfiguration?: Any;

  /**
   * Time of the latest failed update attempt.
   *
   * @generated from field: google.protobuf.Timestamp last_update_attempt = 2;
   */
  lastUpdateAttempt?: Timestamp;

  /**
   * Details about the last failed update attempt.
   *
   * @generated from field: string details = 3;
   */
  details: string;

  /**
   * This is the version of the rejected resource.
   * [#not-implemented-hide:]
   *
   * @generated from field: string version_info = 4;
   */
  versionInfo: string;

  constructor(data?: PartialMessage<UpdateFailureState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.UpdateFailureState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateFailureState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateFailureState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateFailureState;

  static equals(a: UpdateFailureState | PlainMessage<UpdateFailureState> | undefined, b: UpdateFailureState | PlainMessage<UpdateFailureState> | undefined): boolean;
}

/**
 * Envoy's listener manager fills this message with all currently known listeners. Listener
 * configuration information can be used to recreate an Envoy configuration by populating all
 * listeners as static listeners or by returning them in a LDS response.
 *
 * @generated from message envoy.admin.v3.ListenersConfigDump
 */
export declare class ListenersConfigDump extends Message<ListenersConfigDump> {
  /**
   * This is the :ref:`version_info <envoy_v3_api_field_service.discovery.v3.DiscoveryResponse.version_info>` in the
   * last processed LDS discovery response. If there are only static bootstrap listeners, this field
   * will be "".
   *
   * @generated from field: string version_info = 1;
   */
  versionInfo: string;

  /**
   * The statically loaded listener configs.
   *
   * @generated from field: repeated envoy.admin.v3.ListenersConfigDump.StaticListener static_listeners = 2;
   */
  staticListeners: ListenersConfigDump_StaticListener[];

  /**
   * State for any warming, active, or draining listeners.
   *
   * @generated from field: repeated envoy.admin.v3.ListenersConfigDump.DynamicListener dynamic_listeners = 3;
   */
  dynamicListeners: ListenersConfigDump_DynamicListener[];

  constructor(data?: PartialMessage<ListenersConfigDump>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ListenersConfigDump";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListenersConfigDump;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListenersConfigDump;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListenersConfigDump;

  static equals(a: ListenersConfigDump | PlainMessage<ListenersConfigDump> | undefined, b: ListenersConfigDump | PlainMessage<ListenersConfigDump> | undefined): boolean;
}

/**
 * Describes a statically loaded listener.
 *
 * @generated from message envoy.admin.v3.ListenersConfigDump.StaticListener
 */
export declare class ListenersConfigDump_StaticListener extends Message<ListenersConfigDump_StaticListener> {
  /**
   * The listener config.
   *
   * @generated from field: google.protobuf.Any listener = 1;
   */
  listener?: Any;

  /**
   * The timestamp when the Listener was last successfully updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 2;
   */
  lastUpdated?: Timestamp;

  constructor(data?: PartialMessage<ListenersConfigDump_StaticListener>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ListenersConfigDump.StaticListener";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListenersConfigDump_StaticListener;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListenersConfigDump_StaticListener;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListenersConfigDump_StaticListener;

  static equals(a: ListenersConfigDump_StaticListener | PlainMessage<ListenersConfigDump_StaticListener> | undefined, b: ListenersConfigDump_StaticListener | PlainMessage<ListenersConfigDump_StaticListener> | undefined): boolean;
}

/**
 * @generated from message envoy.admin.v3.ListenersConfigDump.DynamicListenerState
 */
export declare class ListenersConfigDump_DynamicListenerState extends Message<ListenersConfigDump_DynamicListenerState> {
  /**
   * This is the per-resource version information. This version is currently taken from the
   * :ref:`version_info <envoy_v3_api_field_service.discovery.v3.DiscoveryResponse.version_info>` field at the time
   * that the listener was loaded. In the future, discrete per-listener versions may be supported
   * by the API.
   *
   * @generated from field: string version_info = 1;
   */
  versionInfo: string;

  /**
   * The listener config.
   *
   * @generated from field: google.protobuf.Any listener = 2;
   */
  listener?: Any;

  /**
   * The timestamp when the Listener was last successfully updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 3;
   */
  lastUpdated?: Timestamp;

  constructor(data?: PartialMessage<ListenersConfigDump_DynamicListenerState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ListenersConfigDump.DynamicListenerState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListenersConfigDump_DynamicListenerState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListenersConfigDump_DynamicListenerState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListenersConfigDump_DynamicListenerState;

  static equals(a: ListenersConfigDump_DynamicListenerState | PlainMessage<ListenersConfigDump_DynamicListenerState> | undefined, b: ListenersConfigDump_DynamicListenerState | PlainMessage<ListenersConfigDump_DynamicListenerState> | undefined): boolean;
}

/**
 * Describes a dynamically loaded listener via the LDS API.
 * [#next-free-field: 7]
 *
 * @generated from message envoy.admin.v3.ListenersConfigDump.DynamicListener
 */
export declare class ListenersConfigDump_DynamicListener extends Message<ListenersConfigDump_DynamicListener> {
  /**
   * The name or unique id of this listener, pulled from the DynamicListenerState config.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The listener state for any active listener by this name.
   * These are listeners that are available to service data plane traffic.
   *
   * @generated from field: envoy.admin.v3.ListenersConfigDump.DynamicListenerState active_state = 2;
   */
  activeState?: ListenersConfigDump_DynamicListenerState;

  /**
   * The listener state for any warming listener by this name.
   * These are listeners that are currently undergoing warming in preparation to service data
   * plane traffic. Note that if attempting to recreate an Envoy configuration from a
   * configuration dump, the warming listeners should generally be discarded.
   *
   * @generated from field: envoy.admin.v3.ListenersConfigDump.DynamicListenerState warming_state = 3;
   */
  warmingState?: ListenersConfigDump_DynamicListenerState;

  /**
   * The listener state for any draining listener by this name.
   * These are listeners that are currently undergoing draining in preparation to stop servicing
   * data plane traffic. Note that if attempting to recreate an Envoy configuration from a
   * configuration dump, the draining listeners should generally be discarded.
   *
   * @generated from field: envoy.admin.v3.ListenersConfigDump.DynamicListenerState draining_state = 4;
   */
  drainingState?: ListenersConfigDump_DynamicListenerState;

  /**
   * Set if the last update failed, cleared after the next successful update.
   * The ``error_state`` field contains the rejected version of this particular
   * resource along with the reason and timestamp. For successfully updated or
   * acknowledged resource, this field should be empty.
   *
   * @generated from field: envoy.admin.v3.UpdateFailureState error_state = 5;
   */
  errorState?: UpdateFailureState;

  /**
   * The client status of this resource.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.ClientResourceStatus client_status = 6;
   */
  clientStatus: ClientResourceStatus;

  constructor(data?: PartialMessage<ListenersConfigDump_DynamicListener>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ListenersConfigDump.DynamicListener";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListenersConfigDump_DynamicListener;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListenersConfigDump_DynamicListener;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListenersConfigDump_DynamicListener;

  static equals(a: ListenersConfigDump_DynamicListener | PlainMessage<ListenersConfigDump_DynamicListener> | undefined, b: ListenersConfigDump_DynamicListener | PlainMessage<ListenersConfigDump_DynamicListener> | undefined): boolean;
}

/**
 * Envoy's cluster manager fills this message with all currently known clusters. Cluster
 * configuration information can be used to recreate an Envoy configuration by populating all
 * clusters as static clusters or by returning them in a CDS response.
 *
 * @generated from message envoy.admin.v3.ClustersConfigDump
 */
export declare class ClustersConfigDump extends Message<ClustersConfigDump> {
  /**
   * This is the :ref:`version_info <envoy_v3_api_field_service.discovery.v3.DiscoveryResponse.version_info>` in the
   * last processed CDS discovery response. If there are only static bootstrap clusters, this field
   * will be "".
   *
   * @generated from field: string version_info = 1;
   */
  versionInfo: string;

  /**
   * The statically loaded cluster configs.
   *
   * @generated from field: repeated envoy.admin.v3.ClustersConfigDump.StaticCluster static_clusters = 2;
   */
  staticClusters: ClustersConfigDump_StaticCluster[];

  /**
   * The dynamically loaded active clusters. These are clusters that are available to service
   * data plane traffic.
   *
   * @generated from field: repeated envoy.admin.v3.ClustersConfigDump.DynamicCluster dynamic_active_clusters = 3;
   */
  dynamicActiveClusters: ClustersConfigDump_DynamicCluster[];

  /**
   * The dynamically loaded warming clusters. These are clusters that are currently undergoing
   * warming in preparation to service data plane traffic. Note that if attempting to recreate an
   * Envoy configuration from a configuration dump, the warming clusters should generally be
   * discarded.
   *
   * @generated from field: repeated envoy.admin.v3.ClustersConfigDump.DynamicCluster dynamic_warming_clusters = 4;
   */
  dynamicWarmingClusters: ClustersConfigDump_DynamicCluster[];

  constructor(data?: PartialMessage<ClustersConfigDump>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ClustersConfigDump";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClustersConfigDump;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClustersConfigDump;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClustersConfigDump;

  static equals(a: ClustersConfigDump | PlainMessage<ClustersConfigDump> | undefined, b: ClustersConfigDump | PlainMessage<ClustersConfigDump> | undefined): boolean;
}

/**
 * Describes a statically loaded cluster.
 *
 * @generated from message envoy.admin.v3.ClustersConfigDump.StaticCluster
 */
export declare class ClustersConfigDump_StaticCluster extends Message<ClustersConfigDump_StaticCluster> {
  /**
   * The cluster config.
   *
   * @generated from field: google.protobuf.Any cluster = 1;
   */
  cluster?: Any;

  /**
   * The timestamp when the Cluster was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 2;
   */
  lastUpdated?: Timestamp;

  constructor(data?: PartialMessage<ClustersConfigDump_StaticCluster>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ClustersConfigDump.StaticCluster";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClustersConfigDump_StaticCluster;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClustersConfigDump_StaticCluster;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClustersConfigDump_StaticCluster;

  static equals(a: ClustersConfigDump_StaticCluster | PlainMessage<ClustersConfigDump_StaticCluster> | undefined, b: ClustersConfigDump_StaticCluster | PlainMessage<ClustersConfigDump_StaticCluster> | undefined): boolean;
}

/**
 * Describes a dynamically loaded cluster via the CDS API.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.admin.v3.ClustersConfigDump.DynamicCluster
 */
export declare class ClustersConfigDump_DynamicCluster extends Message<ClustersConfigDump_DynamicCluster> {
  /**
   * This is the per-resource version information. This version is currently taken from the
   * :ref:`version_info <envoy_v3_api_field_service.discovery.v3.DiscoveryResponse.version_info>` field at the time
   * that the cluster was loaded. In the future, discrete per-cluster versions may be supported by
   * the API.
   *
   * @generated from field: string version_info = 1;
   */
  versionInfo: string;

  /**
   * The cluster config.
   *
   * @generated from field: google.protobuf.Any cluster = 2;
   */
  cluster?: Any;

  /**
   * The timestamp when the Cluster was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 3;
   */
  lastUpdated?: Timestamp;

  /**
   * Set if the last update failed, cleared after the next successful update.
   * The ``error_state`` field contains the rejected version of this particular
   * resource along with the reason and timestamp. For successfully updated or
   * acknowledged resource, this field should be empty.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.UpdateFailureState error_state = 4;
   */
  errorState?: UpdateFailureState;

  /**
   * The client status of this resource.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.ClientResourceStatus client_status = 5;
   */
  clientStatus: ClientResourceStatus;

  constructor(data?: PartialMessage<ClustersConfigDump_DynamicCluster>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ClustersConfigDump.DynamicCluster";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClustersConfigDump_DynamicCluster;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClustersConfigDump_DynamicCluster;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClustersConfigDump_DynamicCluster;

  static equals(a: ClustersConfigDump_DynamicCluster | PlainMessage<ClustersConfigDump_DynamicCluster> | undefined, b: ClustersConfigDump_DynamicCluster | PlainMessage<ClustersConfigDump_DynamicCluster> | undefined): boolean;
}

/**
 * Envoy's RDS implementation fills this message with all currently loaded routes, as described by
 * their RouteConfiguration objects. Static routes that are either defined in the bootstrap configuration
 * or defined inline while configuring listeners are separated from those configured dynamically via RDS.
 * Route configuration information can be used to recreate an Envoy configuration by populating all routes
 * as static routes or by returning them in RDS responses.
 *
 * @generated from message envoy.admin.v3.RoutesConfigDump
 */
export declare class RoutesConfigDump extends Message<RoutesConfigDump> {
  /**
   * The statically loaded route configs.
   *
   * @generated from field: repeated envoy.admin.v3.RoutesConfigDump.StaticRouteConfig static_route_configs = 2;
   */
  staticRouteConfigs: RoutesConfigDump_StaticRouteConfig[];

  /**
   * The dynamically loaded route configs.
   *
   * @generated from field: repeated envoy.admin.v3.RoutesConfigDump.DynamicRouteConfig dynamic_route_configs = 3;
   */
  dynamicRouteConfigs: RoutesConfigDump_DynamicRouteConfig[];

  constructor(data?: PartialMessage<RoutesConfigDump>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.RoutesConfigDump";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoutesConfigDump;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoutesConfigDump;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoutesConfigDump;

  static equals(a: RoutesConfigDump | PlainMessage<RoutesConfigDump> | undefined, b: RoutesConfigDump | PlainMessage<RoutesConfigDump> | undefined): boolean;
}

/**
 * @generated from message envoy.admin.v3.RoutesConfigDump.StaticRouteConfig
 */
export declare class RoutesConfigDump_StaticRouteConfig extends Message<RoutesConfigDump_StaticRouteConfig> {
  /**
   * The route config.
   *
   * @generated from field: google.protobuf.Any route_config = 1;
   */
  routeConfig?: Any;

  /**
   * The timestamp when the Route was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 2;
   */
  lastUpdated?: Timestamp;

  constructor(data?: PartialMessage<RoutesConfigDump_StaticRouteConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.RoutesConfigDump.StaticRouteConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoutesConfigDump_StaticRouteConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoutesConfigDump_StaticRouteConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoutesConfigDump_StaticRouteConfig;

  static equals(a: RoutesConfigDump_StaticRouteConfig | PlainMessage<RoutesConfigDump_StaticRouteConfig> | undefined, b: RoutesConfigDump_StaticRouteConfig | PlainMessage<RoutesConfigDump_StaticRouteConfig> | undefined): boolean;
}

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.admin.v3.RoutesConfigDump.DynamicRouteConfig
 */
export declare class RoutesConfigDump_DynamicRouteConfig extends Message<RoutesConfigDump_DynamicRouteConfig> {
  /**
   * This is the per-resource version information. This version is currently taken from the
   * :ref:`version_info <envoy_v3_api_field_service.discovery.v3.DiscoveryResponse.version_info>` field at the time that
   * the route configuration was loaded.
   *
   * @generated from field: string version_info = 1;
   */
  versionInfo: string;

  /**
   * The route config.
   *
   * @generated from field: google.protobuf.Any route_config = 2;
   */
  routeConfig?: Any;

  /**
   * The timestamp when the Route was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 3;
   */
  lastUpdated?: Timestamp;

  /**
   * Set if the last update failed, cleared after the next successful update.
   * The ``error_state`` field contains the rejected version of this particular
   * resource along with the reason and timestamp. For successfully updated or
   * acknowledged resource, this field should be empty.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.UpdateFailureState error_state = 4;
   */
  errorState?: UpdateFailureState;

  /**
   * The client status of this resource.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.ClientResourceStatus client_status = 5;
   */
  clientStatus: ClientResourceStatus;

  constructor(data?: PartialMessage<RoutesConfigDump_DynamicRouteConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.RoutesConfigDump.DynamicRouteConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoutesConfigDump_DynamicRouteConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoutesConfigDump_DynamicRouteConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoutesConfigDump_DynamicRouteConfig;

  static equals(a: RoutesConfigDump_DynamicRouteConfig | PlainMessage<RoutesConfigDump_DynamicRouteConfig> | undefined, b: RoutesConfigDump_DynamicRouteConfig | PlainMessage<RoutesConfigDump_DynamicRouteConfig> | undefined): boolean;
}

/**
 * Envoy's scoped RDS implementation fills this message with all currently loaded route
 * configuration scopes (defined via ScopedRouteConfigurationsSet protos). This message lists both
 * the scopes defined inline with the higher order object (i.e., the HttpConnectionManager) and the
 * dynamically obtained scopes via the SRDS API.
 *
 * @generated from message envoy.admin.v3.ScopedRoutesConfigDump
 */
export declare class ScopedRoutesConfigDump extends Message<ScopedRoutesConfigDump> {
  /**
   * The statically loaded scoped route configs.
   *
   * @generated from field: repeated envoy.admin.v3.ScopedRoutesConfigDump.InlineScopedRouteConfigs inline_scoped_route_configs = 1;
   */
  inlineScopedRouteConfigs: ScopedRoutesConfigDump_InlineScopedRouteConfigs[];

  /**
   * The dynamically loaded scoped route configs.
   *
   * @generated from field: repeated envoy.admin.v3.ScopedRoutesConfigDump.DynamicScopedRouteConfigs dynamic_scoped_route_configs = 2;
   */
  dynamicScopedRouteConfigs: ScopedRoutesConfigDump_DynamicScopedRouteConfigs[];

  constructor(data?: PartialMessage<ScopedRoutesConfigDump>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ScopedRoutesConfigDump";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScopedRoutesConfigDump;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScopedRoutesConfigDump;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScopedRoutesConfigDump;

  static equals(a: ScopedRoutesConfigDump | PlainMessage<ScopedRoutesConfigDump> | undefined, b: ScopedRoutesConfigDump | PlainMessage<ScopedRoutesConfigDump> | undefined): boolean;
}

/**
 * @generated from message envoy.admin.v3.ScopedRoutesConfigDump.InlineScopedRouteConfigs
 */
export declare class ScopedRoutesConfigDump_InlineScopedRouteConfigs extends Message<ScopedRoutesConfigDump_InlineScopedRouteConfigs> {
  /**
   * The name assigned to the scoped route configurations.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The scoped route configurations.
   *
   * @generated from field: repeated google.protobuf.Any scoped_route_configs = 2;
   */
  scopedRouteConfigs: Any[];

  /**
   * The timestamp when the scoped route config set was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 3;
   */
  lastUpdated?: Timestamp;

  constructor(data?: PartialMessage<ScopedRoutesConfigDump_InlineScopedRouteConfigs>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ScopedRoutesConfigDump.InlineScopedRouteConfigs";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScopedRoutesConfigDump_InlineScopedRouteConfigs;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScopedRoutesConfigDump_InlineScopedRouteConfigs;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScopedRoutesConfigDump_InlineScopedRouteConfigs;

  static equals(a: ScopedRoutesConfigDump_InlineScopedRouteConfigs | PlainMessage<ScopedRoutesConfigDump_InlineScopedRouteConfigs> | undefined, b: ScopedRoutesConfigDump_InlineScopedRouteConfigs | PlainMessage<ScopedRoutesConfigDump_InlineScopedRouteConfigs> | undefined): boolean;
}

/**
 * [#next-free-field: 7]
 *
 * @generated from message envoy.admin.v3.ScopedRoutesConfigDump.DynamicScopedRouteConfigs
 */
export declare class ScopedRoutesConfigDump_DynamicScopedRouteConfigs extends Message<ScopedRoutesConfigDump_DynamicScopedRouteConfigs> {
  /**
   * The name assigned to the scoped route configurations.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * This is the per-resource version information. This version is currently taken from the
   * :ref:`version_info <envoy_v3_api_field_service.discovery.v3.DiscoveryResponse.version_info>` field at the time that
   * the scoped routes configuration was loaded.
   *
   * @generated from field: string version_info = 2;
   */
  versionInfo: string;

  /**
   * The scoped route configurations.
   *
   * @generated from field: repeated google.protobuf.Any scoped_route_configs = 3;
   */
  scopedRouteConfigs: Any[];

  /**
   * The timestamp when the scoped route config set was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 4;
   */
  lastUpdated?: Timestamp;

  /**
   * Set if the last update failed, cleared after the next successful update.
   * The ``error_state`` field contains the rejected version of this particular
   * resource along with the reason and timestamp. For successfully updated or
   * acknowledged resource, this field should be empty.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.UpdateFailureState error_state = 5;
   */
  errorState?: UpdateFailureState;

  /**
   * The client status of this resource.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.ClientResourceStatus client_status = 6;
   */
  clientStatus: ClientResourceStatus;

  constructor(data?: PartialMessage<ScopedRoutesConfigDump_DynamicScopedRouteConfigs>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.ScopedRoutesConfigDump.DynamicScopedRouteConfigs";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScopedRoutesConfigDump_DynamicScopedRouteConfigs;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScopedRoutesConfigDump_DynamicScopedRouteConfigs;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScopedRoutesConfigDump_DynamicScopedRouteConfigs;

  static equals(a: ScopedRoutesConfigDump_DynamicScopedRouteConfigs | PlainMessage<ScopedRoutesConfigDump_DynamicScopedRouteConfigs> | undefined, b: ScopedRoutesConfigDump_DynamicScopedRouteConfigs | PlainMessage<ScopedRoutesConfigDump_DynamicScopedRouteConfigs> | undefined): boolean;
}

/**
 * Envoy's admin fill this message with all currently known endpoints. Endpoint
 * configuration information can be used to recreate an Envoy configuration by populating all
 * endpoints as static endpoints or by returning them in an EDS response.
 *
 * @generated from message envoy.admin.v3.EndpointsConfigDump
 */
export declare class EndpointsConfigDump extends Message<EndpointsConfigDump> {
  /**
   * The statically loaded endpoint configs.
   *
   * @generated from field: repeated envoy.admin.v3.EndpointsConfigDump.StaticEndpointConfig static_endpoint_configs = 2;
   */
  staticEndpointConfigs: EndpointsConfigDump_StaticEndpointConfig[];

  /**
   * The dynamically loaded endpoint configs.
   *
   * @generated from field: repeated envoy.admin.v3.EndpointsConfigDump.DynamicEndpointConfig dynamic_endpoint_configs = 3;
   */
  dynamicEndpointConfigs: EndpointsConfigDump_DynamicEndpointConfig[];

  constructor(data?: PartialMessage<EndpointsConfigDump>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.EndpointsConfigDump";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndpointsConfigDump;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndpointsConfigDump;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndpointsConfigDump;

  static equals(a: EndpointsConfigDump | PlainMessage<EndpointsConfigDump> | undefined, b: EndpointsConfigDump | PlainMessage<EndpointsConfigDump> | undefined): boolean;
}

/**
 * @generated from message envoy.admin.v3.EndpointsConfigDump.StaticEndpointConfig
 */
export declare class EndpointsConfigDump_StaticEndpointConfig extends Message<EndpointsConfigDump_StaticEndpointConfig> {
  /**
   * The endpoint config.
   *
   * @generated from field: google.protobuf.Any endpoint_config = 1;
   */
  endpointConfig?: Any;

  /**
   * [#not-implemented-hide:] The timestamp when the Endpoint was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 2;
   */
  lastUpdated?: Timestamp;

  constructor(data?: PartialMessage<EndpointsConfigDump_StaticEndpointConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.EndpointsConfigDump.StaticEndpointConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndpointsConfigDump_StaticEndpointConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndpointsConfigDump_StaticEndpointConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndpointsConfigDump_StaticEndpointConfig;

  static equals(a: EndpointsConfigDump_StaticEndpointConfig | PlainMessage<EndpointsConfigDump_StaticEndpointConfig> | undefined, b: EndpointsConfigDump_StaticEndpointConfig | PlainMessage<EndpointsConfigDump_StaticEndpointConfig> | undefined): boolean;
}

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.admin.v3.EndpointsConfigDump.DynamicEndpointConfig
 */
export declare class EndpointsConfigDump_DynamicEndpointConfig extends Message<EndpointsConfigDump_DynamicEndpointConfig> {
  /**
   * [#not-implemented-hide:] This is the per-resource version information. This version is currently taken from the
   * :ref:`version_info <envoy_v3_api_field_service.discovery.v3.DiscoveryResponse.version_info>` field at the time that
   * the endpoint configuration was loaded.
   *
   * @generated from field: string version_info = 1;
   */
  versionInfo: string;

  /**
   * The endpoint config.
   *
   * @generated from field: google.protobuf.Any endpoint_config = 2;
   */
  endpointConfig?: Any;

  /**
   * [#not-implemented-hide:] The timestamp when the Endpoint was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 3;
   */
  lastUpdated?: Timestamp;

  /**
   * Set if the last update failed, cleared after the next successful update.
   * The ``error_state`` field contains the rejected version of this particular
   * resource along with the reason and timestamp. For successfully updated or
   * acknowledged resource, this field should be empty.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.UpdateFailureState error_state = 4;
   */
  errorState?: UpdateFailureState;

  /**
   * The client status of this resource.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.ClientResourceStatus client_status = 5;
   */
  clientStatus: ClientResourceStatus;

  constructor(data?: PartialMessage<EndpointsConfigDump_DynamicEndpointConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.EndpointsConfigDump.DynamicEndpointConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndpointsConfigDump_DynamicEndpointConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndpointsConfigDump_DynamicEndpointConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndpointsConfigDump_DynamicEndpointConfig;

  static equals(a: EndpointsConfigDump_DynamicEndpointConfig | PlainMessage<EndpointsConfigDump_DynamicEndpointConfig> | undefined, b: EndpointsConfigDump_DynamicEndpointConfig | PlainMessage<EndpointsConfigDump_DynamicEndpointConfig> | undefined): boolean;
}

/**
 * Envoy's ECDS service fills this message with all currently extension
 * configuration. Extension configuration information can be used to recreate
 * an Envoy ECDS listener and HTTP filters as static filters or by returning
 * them in ECDS response.
 *
 * @generated from message envoy.admin.v3.EcdsConfigDump
 */
export declare class EcdsConfigDump extends Message<EcdsConfigDump> {
  /**
   * The ECDS filter configs.
   *
   * @generated from field: repeated envoy.admin.v3.EcdsConfigDump.EcdsFilterConfig ecds_filters = 1;
   */
  ecdsFilters: EcdsConfigDump_EcdsFilterConfig[];

  constructor(data?: PartialMessage<EcdsConfigDump>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.EcdsConfigDump";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EcdsConfigDump;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EcdsConfigDump;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EcdsConfigDump;

  static equals(a: EcdsConfigDump | PlainMessage<EcdsConfigDump> | undefined, b: EcdsConfigDump | PlainMessage<EcdsConfigDump> | undefined): boolean;
}

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.admin.v3.EcdsConfigDump.EcdsFilterConfig
 */
export declare class EcdsConfigDump_EcdsFilterConfig extends Message<EcdsConfigDump_EcdsFilterConfig> {
  /**
   * This is the per-resource version information. This version is currently
   * taken from the :ref:`version_info
   * <envoy_v3_api_field_service.discovery.v3.DiscoveryResponse.version_info>`
   * field at the time that the ECDS filter was loaded.
   *
   * @generated from field: string version_info = 1;
   */
  versionInfo: string;

  /**
   * The ECDS filter config.
   *
   * @generated from field: google.protobuf.Any ecds_filter = 2;
   */
  ecdsFilter?: Any;

  /**
   * The timestamp when the ECDS filter was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 3;
   */
  lastUpdated?: Timestamp;

  /**
   * Set if the last update failed, cleared after the next successful update.
   * The ``error_state`` field contains the rejected version of this
   * particular resource along with the reason and timestamp. For successfully
   * updated or acknowledged resource, this field should be empty.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.UpdateFailureState error_state = 4;
   */
  errorState?: UpdateFailureState;

  /**
   * The client status of this resource.
   * [#not-implemented-hide:]
   *
   * @generated from field: envoy.admin.v3.ClientResourceStatus client_status = 5;
   */
  clientStatus: ClientResourceStatus;

  constructor(data?: PartialMessage<EcdsConfigDump_EcdsFilterConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.admin.v3.EcdsConfigDump.EcdsFilterConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EcdsConfigDump_EcdsFilterConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EcdsConfigDump_EcdsFilterConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EcdsConfigDump_EcdsFilterConfig;

  static equals(a: EcdsConfigDump_EcdsFilterConfig | PlainMessage<EcdsConfigDump_EcdsFilterConfig> | undefined, b: EcdsConfigDump_EcdsFilterConfig | PlainMessage<EcdsConfigDump_EcdsFilterConfig> | undefined): boolean;
}

