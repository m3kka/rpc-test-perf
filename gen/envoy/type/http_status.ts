// @generated by protobuf-ts 2.9.2
// @generated from protobuf file "envoy/type/http_status.proto" (package "envoy.type", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * HTTP status.
 *
 * @generated from protobuf message envoy.type.HttpStatus
 */
export interface HttpStatus {
    /**
     * Supplies HTTP response code.
     *
     * @generated from protobuf field: envoy.type.StatusCode code = 1;
     */
    code: StatusCode;
}
// [#protodoc-title: HTTP status codes]

/**
 * HTTP response codes supported in Envoy.
 * For more details: https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
 *
 * @generated from protobuf enum envoy.type.StatusCode
 */
export enum StatusCode {
    /**
     * Empty - This code not part of the HTTP status code specification, but it is needed for proto
     * `enum` type.
     *
     * @generated from protobuf enum value: Empty = 0;
     */
    Empty = 0,
    /**
     * @generated from protobuf enum value: Continue = 100;
     */
    Continue = 100,
    /**
     * @generated from protobuf enum value: OK = 200;
     */
    OK = 200,
    /**
     * @generated from protobuf enum value: Created = 201;
     */
    Created = 201,
    /**
     * @generated from protobuf enum value: Accepted = 202;
     */
    Accepted = 202,
    /**
     * @generated from protobuf enum value: NonAuthoritativeInformation = 203;
     */
    NonAuthoritativeInformation = 203,
    /**
     * @generated from protobuf enum value: NoContent = 204;
     */
    NoContent = 204,
    /**
     * @generated from protobuf enum value: ResetContent = 205;
     */
    ResetContent = 205,
    /**
     * @generated from protobuf enum value: PartialContent = 206;
     */
    PartialContent = 206,
    /**
     * @generated from protobuf enum value: MultiStatus = 207;
     */
    MultiStatus = 207,
    /**
     * @generated from protobuf enum value: AlreadyReported = 208;
     */
    AlreadyReported = 208,
    /**
     * @generated from protobuf enum value: IMUsed = 226;
     */
    IMUsed = 226,
    /**
     * @generated from protobuf enum value: MultipleChoices = 300;
     */
    MultipleChoices = 300,
    /**
     * @generated from protobuf enum value: MovedPermanently = 301;
     */
    MovedPermanently = 301,
    /**
     * @generated from protobuf enum value: Found = 302;
     */
    Found = 302,
    /**
     * @generated from protobuf enum value: SeeOther = 303;
     */
    SeeOther = 303,
    /**
     * @generated from protobuf enum value: NotModified = 304;
     */
    NotModified = 304,
    /**
     * @generated from protobuf enum value: UseProxy = 305;
     */
    UseProxy = 305,
    /**
     * @generated from protobuf enum value: TemporaryRedirect = 307;
     */
    TemporaryRedirect = 307,
    /**
     * @generated from protobuf enum value: PermanentRedirect = 308;
     */
    PermanentRedirect = 308,
    /**
     * @generated from protobuf enum value: BadRequest = 400;
     */
    BadRequest = 400,
    /**
     * @generated from protobuf enum value: Unauthorized = 401;
     */
    Unauthorized = 401,
    /**
     * @generated from protobuf enum value: PaymentRequired = 402;
     */
    PaymentRequired = 402,
    /**
     * @generated from protobuf enum value: Forbidden = 403;
     */
    Forbidden = 403,
    /**
     * @generated from protobuf enum value: NotFound = 404;
     */
    NotFound = 404,
    /**
     * @generated from protobuf enum value: MethodNotAllowed = 405;
     */
    MethodNotAllowed = 405,
    /**
     * @generated from protobuf enum value: NotAcceptable = 406;
     */
    NotAcceptable = 406,
    /**
     * @generated from protobuf enum value: ProxyAuthenticationRequired = 407;
     */
    ProxyAuthenticationRequired = 407,
    /**
     * @generated from protobuf enum value: RequestTimeout = 408;
     */
    RequestTimeout = 408,
    /**
     * @generated from protobuf enum value: Conflict = 409;
     */
    Conflict = 409,
    /**
     * @generated from protobuf enum value: Gone = 410;
     */
    Gone = 410,
    /**
     * @generated from protobuf enum value: LengthRequired = 411;
     */
    LengthRequired = 411,
    /**
     * @generated from protobuf enum value: PreconditionFailed = 412;
     */
    PreconditionFailed = 412,
    /**
     * @generated from protobuf enum value: PayloadTooLarge = 413;
     */
    PayloadTooLarge = 413,
    /**
     * @generated from protobuf enum value: URITooLong = 414;
     */
    URITooLong = 414,
    /**
     * @generated from protobuf enum value: UnsupportedMediaType = 415;
     */
    UnsupportedMediaType = 415,
    /**
     * @generated from protobuf enum value: RangeNotSatisfiable = 416;
     */
    RangeNotSatisfiable = 416,
    /**
     * @generated from protobuf enum value: ExpectationFailed = 417;
     */
    ExpectationFailed = 417,
    /**
     * @generated from protobuf enum value: MisdirectedRequest = 421;
     */
    MisdirectedRequest = 421,
    /**
     * @generated from protobuf enum value: UnprocessableEntity = 422;
     */
    UnprocessableEntity = 422,
    /**
     * @generated from protobuf enum value: Locked = 423;
     */
    Locked = 423,
    /**
     * @generated from protobuf enum value: FailedDependency = 424;
     */
    FailedDependency = 424,
    /**
     * @generated from protobuf enum value: UpgradeRequired = 426;
     */
    UpgradeRequired = 426,
    /**
     * @generated from protobuf enum value: PreconditionRequired = 428;
     */
    PreconditionRequired = 428,
    /**
     * @generated from protobuf enum value: TooManyRequests = 429;
     */
    TooManyRequests = 429,
    /**
     * @generated from protobuf enum value: RequestHeaderFieldsTooLarge = 431;
     */
    RequestHeaderFieldsTooLarge = 431,
    /**
     * @generated from protobuf enum value: InternalServerError = 500;
     */
    InternalServerError = 500,
    /**
     * @generated from protobuf enum value: NotImplemented = 501;
     */
    NotImplemented = 501,
    /**
     * @generated from protobuf enum value: BadGateway = 502;
     */
    BadGateway = 502,
    /**
     * @generated from protobuf enum value: ServiceUnavailable = 503;
     */
    ServiceUnavailable = 503,
    /**
     * @generated from protobuf enum value: GatewayTimeout = 504;
     */
    GatewayTimeout = 504,
    /**
     * @generated from protobuf enum value: HTTPVersionNotSupported = 505;
     */
    HTTPVersionNotSupported = 505,
    /**
     * @generated from protobuf enum value: VariantAlsoNegotiates = 506;
     */
    VariantAlsoNegotiates = 506,
    /**
     * @generated from protobuf enum value: InsufficientStorage = 507;
     */
    InsufficientStorage = 507,
    /**
     * @generated from protobuf enum value: LoopDetected = 508;
     */
    LoopDetected = 508,
    /**
     * @generated from protobuf enum value: NotExtended = 510;
     */
    NotExtended = 510,
    /**
     * @generated from protobuf enum value: NetworkAuthenticationRequired = 511;
     */
    NetworkAuthenticationRequired = 511
}
// @generated message type with reflection information, may provide speed optimized methods
class HttpStatus$Type extends MessageType<HttpStatus> {
    constructor() {
        super("envoy.type.HttpStatus", [
            { no: 1, name: "code", kind: "enum", T: () => ["envoy.type.StatusCode", StatusCode], options: { "validate.rules": { enum: { definedOnly: true, notIn: [0] } } } }
        ]);
    }
    create(value?: PartialMessage<HttpStatus>): HttpStatus {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.code = 0;
        if (value !== undefined)
            reflectionMergePartial<HttpStatus>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HttpStatus): HttpStatus {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* envoy.type.StatusCode code */ 1:
                    message.code = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HttpStatus, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* envoy.type.StatusCode code = 1; */
        if (message.code !== 0)
            writer.tag(1, WireType.Varint).int32(message.code);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.type.HttpStatus
 */
export const HttpStatus = new HttpStatus$Type();
