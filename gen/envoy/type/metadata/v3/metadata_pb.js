// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/type/metadata/v3/metadata.proto (package envoy.type.metadata.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * MetadataKey provides a general interface using ``key`` and ``path`` to retrieve value from
 * :ref:`Metadata <envoy_v3_api_msg_config.core.v3.Metadata>`.
 *
 * For example, for the following Metadata:
 *
 * .. code-block:: yaml
 *
 *    filter_metadata:
 *      envoy.xxx:
 *        prop:
 *          foo: bar
 *          xyz:
 *            hello: envoy
 *
 * The following MetadataKey will retrieve a string value "bar" from the Metadata.
 *
 * .. code-block:: yaml
 *
 *    key: envoy.xxx
 *    path:
 *    - key: prop
 *    - key: foo
 *
 *
 * @generated from message envoy.type.metadata.v3.MetadataKey
 */
export const MetadataKey = proto3.makeMessageType(
  "envoy.type.metadata.v3.MetadataKey",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "path", kind: "message", T: MetadataKey_PathSegment, repeated: true },
  ],
);

/**
 * Specifies the segment in a path to retrieve value from Metadata.
 * Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
 *
 * @generated from message envoy.type.metadata.v3.MetadataKey.PathSegment
 */
export const MetadataKey_PathSegment = proto3.makeMessageType(
  "envoy.type.metadata.v3.MetadataKey.PathSegment",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "segment" },
  ],
  {localName: "MetadataKey_PathSegment"},
);

/**
 * Describes what kind of metadata.
 *
 * @generated from message envoy.type.metadata.v3.MetadataKind
 */
export const MetadataKind = proto3.makeMessageType(
  "envoy.type.metadata.v3.MetadataKind",
  () => [
    { no: 1, name: "request", kind: "message", T: MetadataKind_Request, oneof: "kind" },
    { no: 2, name: "route", kind: "message", T: MetadataKind_Route, oneof: "kind" },
    { no: 3, name: "cluster", kind: "message", T: MetadataKind_Cluster, oneof: "kind" },
    { no: 4, name: "host", kind: "message", T: MetadataKind_Host, oneof: "kind" },
  ],
);

/**
 * Represents dynamic metadata associated with the request.
 *
 * @generated from message envoy.type.metadata.v3.MetadataKind.Request
 */
export const MetadataKind_Request = proto3.makeMessageType(
  "envoy.type.metadata.v3.MetadataKind.Request",
  [],
  {localName: "MetadataKind_Request"},
);

/**
 * Represents metadata from :ref:`the route<envoy_v3_api_field_config.route.v3.Route.metadata>`.
 *
 * @generated from message envoy.type.metadata.v3.MetadataKind.Route
 */
export const MetadataKind_Route = proto3.makeMessageType(
  "envoy.type.metadata.v3.MetadataKind.Route",
  [],
  {localName: "MetadataKind_Route"},
);

/**
 * Represents metadata from :ref:`the upstream cluster<envoy_v3_api_field_config.cluster.v3.Cluster.metadata>`.
 *
 * @generated from message envoy.type.metadata.v3.MetadataKind.Cluster
 */
export const MetadataKind_Cluster = proto3.makeMessageType(
  "envoy.type.metadata.v3.MetadataKind.Cluster",
  [],
  {localName: "MetadataKind_Cluster"},
);

/**
 * Represents metadata from :ref:`the upstream
 * host<envoy_v3_api_field_config.endpoint.v3.LbEndpoint.metadata>`.
 *
 * @generated from message envoy.type.metadata.v3.MetadataKind.Host
 */
export const MetadataKind_Host = proto3.makeMessageType(
  "envoy.type.metadata.v3.MetadataKind.Host",
  [],
  {localName: "MetadataKind_Host"},
);

