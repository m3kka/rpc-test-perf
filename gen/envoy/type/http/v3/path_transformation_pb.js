// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/type/http/v3/path_transformation.proto (package envoy.type.http.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message envoy.type.http.v3.PathTransformation
 */
export const PathTransformation = proto3.makeMessageType(
  "envoy.type.http.v3.PathTransformation",
  () => [
    { no: 1, name: "operations", kind: "message", T: PathTransformation_Operation, repeated: true },
  ],
);

/**
 * A type of operation to alter text.
 *
 * @generated from message envoy.type.http.v3.PathTransformation.Operation
 */
export const PathTransformation_Operation = proto3.makeMessageType(
  "envoy.type.http.v3.PathTransformation.Operation",
  () => [
    { no: 2, name: "normalize_path_rfc_3986", kind: "message", T: PathTransformation_Operation_NormalizePathRFC3986, oneof: "operation_specifier" },
    { no: 3, name: "merge_slashes", kind: "message", T: PathTransformation_Operation_MergeSlashes, oneof: "operation_specifier" },
  ],
  {localName: "PathTransformation_Operation"},
);

/**
 * Should text be normalized according to RFC 3986? This typically is used for path headers
 * before any processing of requests by HTTP filters or routing. This applies percent-encoded
 * normalization and path segment normalization. Fails on characters disallowed in URLs
 * (e.g. NULLs). See `Normalization and Comparison
 * <https://tools.ietf.org/html/rfc3986#section-6>`_ for details of normalization. Note that
 * this options does not perform `case normalization
 * <https://tools.ietf.org/html/rfc3986#section-6.2.2.1>`_
 *
 * @generated from message envoy.type.http.v3.PathTransformation.Operation.NormalizePathRFC3986
 */
export const PathTransformation_Operation_NormalizePathRFC3986 = proto3.makeMessageType(
  "envoy.type.http.v3.PathTransformation.Operation.NormalizePathRFC3986",
  [],
  {localName: "PathTransformation_Operation_NormalizePathRFC3986"},
);

/**
 * Determines if adjacent slashes are merged into one. A common use case is for a request path
 * header. Using this option in ``:ref: PathNormalizationOptions
 * <envoy_v3_api_msg_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions>``
 * will allow incoming requests with path ``//dir///file`` to match against route with ``prefix``
 * match set to ``/dir``. When using for header transformations, note that slash merging is not
 * part of `HTTP spec <https://tools.ietf.org/html/rfc3986>`_ and is provided for convenience.
 *
 * @generated from message envoy.type.http.v3.PathTransformation.Operation.MergeSlashes
 */
export const PathTransformation_Operation_MergeSlashes = proto3.makeMessageType(
  "envoy.type.http.v3.PathTransformation.Operation.MergeSlashes",
  [],
  {localName: "PathTransformation_Operation_MergeSlashes"},
);

