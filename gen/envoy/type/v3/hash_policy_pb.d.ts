// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/type/v3/hash_policy.proto (package envoy.type.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Specifies the hash policy
 *
 * @generated from message envoy.type.v3.HashPolicy
 */
export declare class HashPolicy extends Message<HashPolicy> {
  /**
   * @generated from oneof envoy.type.v3.HashPolicy.policy_specifier
   */
  policySpecifier: {
    /**
     * @generated from field: envoy.type.v3.HashPolicy.SourceIp source_ip = 1;
     */
    value: HashPolicy_SourceIp;
    case: "sourceIp";
  } | {
    /**
     * @generated from field: envoy.type.v3.HashPolicy.FilterState filter_state = 2;
     */
    value: HashPolicy_FilterState;
    case: "filterState";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<HashPolicy>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.type.v3.HashPolicy";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HashPolicy;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HashPolicy;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HashPolicy;

  static equals(a: HashPolicy | PlainMessage<HashPolicy> | undefined, b: HashPolicy | PlainMessage<HashPolicy> | undefined): boolean;
}

/**
 * The source IP will be used to compute the hash used by hash-based load balancing
 * algorithms.
 *
 * @generated from message envoy.type.v3.HashPolicy.SourceIp
 */
export declare class HashPolicy_SourceIp extends Message<HashPolicy_SourceIp> {
  constructor(data?: PartialMessage<HashPolicy_SourceIp>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.type.v3.HashPolicy.SourceIp";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HashPolicy_SourceIp;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HashPolicy_SourceIp;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HashPolicy_SourceIp;

  static equals(a: HashPolicy_SourceIp | PlainMessage<HashPolicy_SourceIp> | undefined, b: HashPolicy_SourceIp | PlainMessage<HashPolicy_SourceIp> | undefined): boolean;
}

/**
 * An Object in the :ref:`filterState <arch_overview_data_sharing_between_filters>` will be used
 * to compute the hash used by hash-based load balancing algorithms.
 *
 * @generated from message envoy.type.v3.HashPolicy.FilterState
 */
export declare class HashPolicy_FilterState extends Message<HashPolicy_FilterState> {
  /**
   * The name of the Object in the filterState, which is an Envoy::Hashable object. If there is no
   * data associated with the key, or the stored object is not Envoy::Hashable, no hash will be
   * produced.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  constructor(data?: PartialMessage<HashPolicy_FilterState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.type.v3.HashPolicy.FilterState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HashPolicy_FilterState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HashPolicy_FilterState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HashPolicy_FilterState;

  static equals(a: HashPolicy_FilterState | PlainMessage<HashPolicy_FilterState> | undefined, b: HashPolicy_FilterState | PlainMessage<HashPolicy_FilterState> | undefined): boolean;
}

