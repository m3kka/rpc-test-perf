// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/type/matcher/metadata.proto (package envoy.type.matcher, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { ValueMatcher } from "./value_pb.js";

/**
 * [#next-major-version: MetadataMatcher should use StructMatcher]
 *
 * @generated from message envoy.type.matcher.MetadataMatcher
 */
export const MetadataMatcher = proto3.makeMessageType(
  "envoy.type.matcher.MetadataMatcher",
  () => [
    { no: 1, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "path", kind: "message", T: MetadataMatcher_PathSegment, repeated: true },
    { no: 3, name: "value", kind: "message", T: ValueMatcher },
  ],
);

/**
 * Specifies the segment in a path to retrieve value from Metadata.
 * Note: Currently it's not supported to retrieve a value from a list in Metadata. This means that
 * if the segment key refers to a list, it has to be the last segment in a path.
 *
 * @generated from message envoy.type.matcher.MetadataMatcher.PathSegment
 */
export const MetadataMatcher_PathSegment = proto3.makeMessageType(
  "envoy.type.matcher.MetadataMatcher.PathSegment",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "segment" },
  ],
  {localName: "MetadataMatcher_PathSegment"},
);

