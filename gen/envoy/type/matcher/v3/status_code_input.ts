// @generated by protobuf-ts 2.9.2
// @generated from protobuf file "envoy/type/matcher/v3/status_code_input.proto" (package "envoy.type.matcher.v3", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// [#protodoc-title: Common HTTP Inputs]

/**
 * Match input indicates that matching should be done on the response status
 * code.
 *
 * @generated from protobuf message envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput
 */
export interface HttpResponseStatusCodeMatchInput {
}
/**
 * Match input indicates that the matching should be done on the class of the
 * response status code. For eg: 1xx, 2xx, 3xx, 4xx or 5xx.
 *
 * @generated from protobuf message envoy.type.matcher.v3.HttpResponseStatusCodeClassMatchInput
 */
export interface HttpResponseStatusCodeClassMatchInput {
}
// @generated message type with reflection information, may provide speed optimized methods
class HttpResponseStatusCodeMatchInput$Type extends MessageType<HttpResponseStatusCodeMatchInput> {
    constructor() {
        super("envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput", []);
    }
    create(value?: PartialMessage<HttpResponseStatusCodeMatchInput>): HttpResponseStatusCodeMatchInput {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<HttpResponseStatusCodeMatchInput>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HttpResponseStatusCodeMatchInput): HttpResponseStatusCodeMatchInput {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HttpResponseStatusCodeMatchInput, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput
 */
export const HttpResponseStatusCodeMatchInput = new HttpResponseStatusCodeMatchInput$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HttpResponseStatusCodeClassMatchInput$Type extends MessageType<HttpResponseStatusCodeClassMatchInput> {
    constructor() {
        super("envoy.type.matcher.v3.HttpResponseStatusCodeClassMatchInput", []);
    }
    create(value?: PartialMessage<HttpResponseStatusCodeClassMatchInput>): HttpResponseStatusCodeClassMatchInput {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<HttpResponseStatusCodeClassMatchInput>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HttpResponseStatusCodeClassMatchInput): HttpResponseStatusCodeClassMatchInput {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HttpResponseStatusCodeClassMatchInput, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.type.matcher.v3.HttpResponseStatusCodeClassMatchInput
 */
export const HttpResponseStatusCodeClassMatchInput = new HttpResponseStatusCodeClassMatchInput$Type();
