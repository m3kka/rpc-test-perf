// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/type/matcher/v3/struct.proto (package envoy.type.matcher.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ValueMatcher } from "./value_pb.js";

/**
 * StructMatcher provides a general interface to check if a given value is matched in
 * google.protobuf.Struct. It uses ``path`` to retrieve the value
 * from the struct and then check if it's matched to the specified value.
 *
 * For example, for the following Struct:
 *
 * .. code-block:: yaml
 *
 *        fields:
 *          a:
 *            struct_value:
 *              fields:
 *                b:
 *                  struct_value:
 *                    fields:
 *                      c:
 *                        string_value: pro
 *                t:
 *                  list_value:
 *                    values:
 *                      - string_value: m
 *                      - string_value: n
 *
 * The following MetadataMatcher is matched as the path [a, b, c] will retrieve a string value "pro"
 * from the Metadata which is matched to the specified prefix match.
 *
 * .. code-block:: yaml
 *
 *    path:
 *    - key: a
 *    - key: b
 *    - key: c
 *    value:
 *      string_match:
 *        prefix: pr
 *
 * The following StructMatcher is matched as the code will match one of the string values in the
 * list at the path [a, t].
 *
 * .. code-block:: yaml
 *
 *    path:
 *    - key: a
 *    - key: t
 *    value:
 *      list_match:
 *        one_of:
 *          string_match:
 *            exact: m
 *
 * An example use of StructMatcher is to match metadata in envoy.v*.core.Node.
 *
 * @generated from message envoy.type.matcher.v3.StructMatcher
 */
export declare class StructMatcher extends Message<StructMatcher> {
  /**
   * The path to retrieve the Value from the Struct.
   *
   * @generated from field: repeated envoy.type.matcher.v3.StructMatcher.PathSegment path = 2;
   */
  path: StructMatcher_PathSegment[];

  /**
   * The StructMatcher is matched if the value retrieved by path is matched to this value.
   *
   * @generated from field: envoy.type.matcher.v3.ValueMatcher value = 3;
   */
  value?: ValueMatcher;

  constructor(data?: PartialMessage<StructMatcher>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.type.matcher.v3.StructMatcher";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructMatcher;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructMatcher;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructMatcher;

  static equals(a: StructMatcher | PlainMessage<StructMatcher> | undefined, b: StructMatcher | PlainMessage<StructMatcher> | undefined): boolean;
}

/**
 * Specifies the segment in a path to retrieve value from Struct.
 *
 * @generated from message envoy.type.matcher.v3.StructMatcher.PathSegment
 */
export declare class StructMatcher_PathSegment extends Message<StructMatcher_PathSegment> {
  /**
   * @generated from oneof envoy.type.matcher.v3.StructMatcher.PathSegment.segment
   */
  segment: {
    /**
     * If specified, use the key to retrieve the value in a Struct.
     *
     * @generated from field: string key = 1;
     */
    value: string;
    case: "key";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<StructMatcher_PathSegment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.type.matcher.v3.StructMatcher.PathSegment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructMatcher_PathSegment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructMatcher_PathSegment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructMatcher_PathSegment;

  static equals(a: StructMatcher_PathSegment | PlainMessage<StructMatcher_PathSegment> | undefined, b: StructMatcher_PathSegment | PlainMessage<StructMatcher_PathSegment> | undefined): boolean;
}

