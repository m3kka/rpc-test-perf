// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/type/matcher/v3/filter_state.proto (package envoy.type.matcher.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { StringMatcher } from "./string_pb.js";

/**
 * FilterStateMatcher provides a general interface for matching the filter state objects.
 *
 * @generated from message envoy.type.matcher.v3.FilterStateMatcher
 */
export declare class FilterStateMatcher extends Message<FilterStateMatcher> {
  /**
   * The filter state key to retrieve the object.
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from oneof envoy.type.matcher.v3.FilterStateMatcher.matcher
   */
  matcher: {
    /**
     * Matches the filter state object as a string value.
     *
     * @generated from field: envoy.type.matcher.v3.StringMatcher string_match = 2;
     */
    value: StringMatcher;
    case: "stringMatch";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<FilterStateMatcher>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.type.matcher.v3.FilterStateMatcher";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilterStateMatcher;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilterStateMatcher;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilterStateMatcher;

  static equals(a: FilterStateMatcher | PlainMessage<FilterStateMatcher> | undefined, b: FilterStateMatcher | PlainMessage<FilterStateMatcher> | undefined): boolean;
}

