// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/api/v2/endpoint/load_report.proto (package envoy.api.v2.endpoint, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3, Struct } from "@bufbuild/protobuf";
import { Locality } from "../core/base_pb.js";
import { Address } from "../core/address_pb.js";

/**
 * These are stats Envoy reports to GLB every so often. Report frequency is
 * defined by
 * :ref:`LoadStatsResponse.load_reporting_interval<envoy_api_field_service.load_stats.v2.LoadStatsResponse.load_reporting_interval>`.
 * Stats per upstream region/zone and optionally per subzone.
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 * [#next-free-field: 9]
 *
 * @generated from message envoy.api.v2.endpoint.UpstreamLocalityStats
 */
export const UpstreamLocalityStats = proto3.makeMessageType(
  "envoy.api.v2.endpoint.UpstreamLocalityStats",
  () => [
    { no: 1, name: "locality", kind: "message", T: Locality },
    { no: 2, name: "total_successful_requests", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total_requests_in_progress", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "total_error_requests", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "total_issued_requests", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "load_metric_stats", kind: "message", T: EndpointLoadMetricStats, repeated: true },
    { no: 7, name: "upstream_endpoint_stats", kind: "message", T: UpstreamEndpointStats, repeated: true },
    { no: 6, name: "priority", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 * [#next-free-field: 8]
 *
 * @generated from message envoy.api.v2.endpoint.UpstreamEndpointStats
 */
export const UpstreamEndpointStats = proto3.makeMessageType(
  "envoy.api.v2.endpoint.UpstreamEndpointStats",
  () => [
    { no: 1, name: "address", kind: "message", T: Address },
    { no: 6, name: "metadata", kind: "message", T: Struct },
    { no: 2, name: "total_successful_requests", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total_requests_in_progress", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "total_error_requests", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "total_issued_requests", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "load_metric_stats", kind: "message", T: EndpointLoadMetricStats, repeated: true },
  ],
);

/**
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 *
 * @generated from message envoy.api.v2.endpoint.EndpointLoadMetricStats
 */
export const EndpointLoadMetricStats = proto3.makeMessageType(
  "envoy.api.v2.endpoint.EndpointLoadMetricStats",
  () => [
    { no: 1, name: "metric_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "num_requests_finished_with_metric", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total_metric_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

/**
 * Per cluster load stats. Envoy reports these stats a management server in a
 * :ref:`LoadStatsRequest<envoy_api_msg_service.load_stats.v2.LoadStatsRequest>`
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 * Next ID: 7
 * [#next-free-field: 7]
 *
 * @generated from message envoy.api.v2.endpoint.ClusterStats
 */
export const ClusterStats = proto3.makeMessageType(
  "envoy.api.v2.endpoint.ClusterStats",
  () => [
    { no: 1, name: "cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "cluster_service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "upstream_locality_stats", kind: "message", T: UpstreamLocalityStats, repeated: true },
    { no: 3, name: "total_dropped_requests", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "dropped_requests", kind: "message", T: ClusterStats_DroppedRequests, repeated: true },
    { no: 4, name: "load_report_interval", kind: "message", T: Duration },
  ],
);

/**
 * @generated from message envoy.api.v2.endpoint.ClusterStats.DroppedRequests
 */
export const ClusterStats_DroppedRequests = proto3.makeMessageType(
  "envoy.api.v2.endpoint.ClusterStats.DroppedRequests",
  () => [
    { no: 1, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "dropped_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
  {localName: "ClusterStats_DroppedRequests"},
);

