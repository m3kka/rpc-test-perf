// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/api/v2/endpoint/load_report.proto (package envoy.api.v2.endpoint, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Locality } from "../core/base_pb.js";
import type { Address } from "../core/address_pb.js";

/**
 * These are stats Envoy reports to GLB every so often. Report frequency is
 * defined by
 * :ref:`LoadStatsResponse.load_reporting_interval<envoy_api_field_service.load_stats.v2.LoadStatsResponse.load_reporting_interval>`.
 * Stats per upstream region/zone and optionally per subzone.
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 * [#next-free-field: 9]
 *
 * @generated from message envoy.api.v2.endpoint.UpstreamLocalityStats
 */
export declare class UpstreamLocalityStats extends Message<UpstreamLocalityStats> {
  /**
   * Name of zone, region and optionally endpoint group these metrics were
   * collected from. Zone and region names could be empty if unknown.
   *
   * @generated from field: envoy.api.v2.core.Locality locality = 1;
   */
  locality?: Locality;

  /**
   * The total number of requests successfully completed by the endpoints in the
   * locality.
   *
   * @generated from field: uint64 total_successful_requests = 2;
   */
  totalSuccessfulRequests: bigint;

  /**
   * The total number of unfinished requests
   *
   * @generated from field: uint64 total_requests_in_progress = 3;
   */
  totalRequestsInProgress: bigint;

  /**
   * The total number of requests that failed due to errors at the endpoint,
   * aggregated over all endpoints in the locality.
   *
   * @generated from field: uint64 total_error_requests = 4;
   */
  totalErrorRequests: bigint;

  /**
   * The total number of requests that were issued by this Envoy since
   * the last report. This information is aggregated over all the
   * upstream endpoints in the locality.
   *
   * @generated from field: uint64 total_issued_requests = 8;
   */
  totalIssuedRequests: bigint;

  /**
   * Stats for multi-dimensional load balancing.
   *
   * @generated from field: repeated envoy.api.v2.endpoint.EndpointLoadMetricStats load_metric_stats = 5;
   */
  loadMetricStats: EndpointLoadMetricStats[];

  /**
   * Endpoint granularity stats information for this locality. This information
   * is populated if the Server requests it by setting
   * :ref:`LoadStatsResponse.report_endpoint_granularity<envoy_api_field_service.load_stats.v2.LoadStatsResponse.report_endpoint_granularity>`.
   *
   * @generated from field: repeated envoy.api.v2.endpoint.UpstreamEndpointStats upstream_endpoint_stats = 7;
   */
  upstreamEndpointStats: UpstreamEndpointStats[];

  /**
   * [#not-implemented-hide:] The priority of the endpoint group these metrics
   * were collected from.
   *
   * @generated from field: uint32 priority = 6;
   */
  priority: number;

  constructor(data?: PartialMessage<UpstreamLocalityStats>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.api.v2.endpoint.UpstreamLocalityStats";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpstreamLocalityStats;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpstreamLocalityStats;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpstreamLocalityStats;

  static equals(a: UpstreamLocalityStats | PlainMessage<UpstreamLocalityStats> | undefined, b: UpstreamLocalityStats | PlainMessage<UpstreamLocalityStats> | undefined): boolean;
}

/**
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 * [#next-free-field: 8]
 *
 * @generated from message envoy.api.v2.endpoint.UpstreamEndpointStats
 */
export declare class UpstreamEndpointStats extends Message<UpstreamEndpointStats> {
  /**
   * Upstream host address.
   *
   * @generated from field: envoy.api.v2.core.Address address = 1;
   */
  address?: Address;

  /**
   * Opaque and implementation dependent metadata of the
   * endpoint. Envoy will pass this directly to the management server.
   *
   * @generated from field: google.protobuf.Struct metadata = 6;
   */
  metadata?: Struct;

  /**
   * The total number of requests successfully completed by the endpoints in the
   * locality. These include non-5xx responses for HTTP, where errors
   * originate at the client and the endpoint responded successfully. For gRPC,
   * the grpc-status values are those not covered by total_error_requests below.
   *
   * @generated from field: uint64 total_successful_requests = 2;
   */
  totalSuccessfulRequests: bigint;

  /**
   * The total number of unfinished requests for this endpoint.
   *
   * @generated from field: uint64 total_requests_in_progress = 3;
   */
  totalRequestsInProgress: bigint;

  /**
   * The total number of requests that failed due to errors at the endpoint.
   * For HTTP these are responses with 5xx status codes and for gRPC the
   * grpc-status values:
   *
   *   - DeadlineExceeded
   *   - Unimplemented
   *   - Internal
   *   - Unavailable
   *   - Unknown
   *   - DataLoss
   *
   * @generated from field: uint64 total_error_requests = 4;
   */
  totalErrorRequests: bigint;

  /**
   * The total number of requests that were issued to this endpoint
   * since the last report. A single TCP connection, HTTP or gRPC
   * request or stream is counted as one request.
   *
   * @generated from field: uint64 total_issued_requests = 7;
   */
  totalIssuedRequests: bigint;

  /**
   * Stats for multi-dimensional load balancing.
   *
   * @generated from field: repeated envoy.api.v2.endpoint.EndpointLoadMetricStats load_metric_stats = 5;
   */
  loadMetricStats: EndpointLoadMetricStats[];

  constructor(data?: PartialMessage<UpstreamEndpointStats>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.api.v2.endpoint.UpstreamEndpointStats";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpstreamEndpointStats;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpstreamEndpointStats;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpstreamEndpointStats;

  static equals(a: UpstreamEndpointStats | PlainMessage<UpstreamEndpointStats> | undefined, b: UpstreamEndpointStats | PlainMessage<UpstreamEndpointStats> | undefined): boolean;
}

/**
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 *
 * @generated from message envoy.api.v2.endpoint.EndpointLoadMetricStats
 */
export declare class EndpointLoadMetricStats extends Message<EndpointLoadMetricStats> {
  /**
   * Name of the metric; may be empty.
   *
   * @generated from field: string metric_name = 1;
   */
  metricName: string;

  /**
   * Number of calls that finished and included this metric.
   *
   * @generated from field: uint64 num_requests_finished_with_metric = 2;
   */
  numRequestsFinishedWithMetric: bigint;

  /**
   * Sum of metric values across all calls that finished with this metric for
   * load_reporting_interval.
   *
   * @generated from field: double total_metric_value = 3;
   */
  totalMetricValue: number;

  constructor(data?: PartialMessage<EndpointLoadMetricStats>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.api.v2.endpoint.EndpointLoadMetricStats";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndpointLoadMetricStats;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndpointLoadMetricStats;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndpointLoadMetricStats;

  static equals(a: EndpointLoadMetricStats | PlainMessage<EndpointLoadMetricStats> | undefined, b: EndpointLoadMetricStats | PlainMessage<EndpointLoadMetricStats> | undefined): boolean;
}

/**
 * Per cluster load stats. Envoy reports these stats a management server in a
 * :ref:`LoadStatsRequest<envoy_api_msg_service.load_stats.v2.LoadStatsRequest>`
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 * Next ID: 7
 * [#next-free-field: 7]
 *
 * @generated from message envoy.api.v2.endpoint.ClusterStats
 */
export declare class ClusterStats extends Message<ClusterStats> {
  /**
   * The name of the cluster.
   *
   * @generated from field: string cluster_name = 1;
   */
  clusterName: string;

  /**
   * The eds_cluster_config service_name of the cluster.
   * It's possible that two clusters send the same service_name to EDS,
   * in that case, the management server is supposed to do aggregation on the load reports.
   *
   * @generated from field: string cluster_service_name = 6;
   */
  clusterServiceName: string;

  /**
   * Need at least one.
   *
   * @generated from field: repeated envoy.api.v2.endpoint.UpstreamLocalityStats upstream_locality_stats = 2;
   */
  upstreamLocalityStats: UpstreamLocalityStats[];

  /**
   * Cluster-level stats such as total_successful_requests may be computed by
   * summing upstream_locality_stats. In addition, below there are additional
   * cluster-wide stats.
   *
   * The total number of dropped requests. This covers requests
   * deliberately dropped by the drop_overload policy and circuit breaking.
   *
   * @generated from field: uint64 total_dropped_requests = 3;
   */
  totalDroppedRequests: bigint;

  /**
   * Information about deliberately dropped requests for each category specified
   * in the DropOverload policy.
   *
   * @generated from field: repeated envoy.api.v2.endpoint.ClusterStats.DroppedRequests dropped_requests = 5;
   */
  droppedRequests: ClusterStats_DroppedRequests[];

  /**
   * Period over which the actual load report occurred. This will be guaranteed to include every
   * request reported. Due to system load and delays between the *LoadStatsRequest* sent from Envoy
   * and the *LoadStatsResponse* message sent from the management server, this may be longer than
   * the requested load reporting interval in the *LoadStatsResponse*.
   *
   * @generated from field: google.protobuf.Duration load_report_interval = 4;
   */
  loadReportInterval?: Duration;

  constructor(data?: PartialMessage<ClusterStats>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.api.v2.endpoint.ClusterStats";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterStats;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterStats;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterStats;

  static equals(a: ClusterStats | PlainMessage<ClusterStats> | undefined, b: ClusterStats | PlainMessage<ClusterStats> | undefined): boolean;
}

/**
 * @generated from message envoy.api.v2.endpoint.ClusterStats.DroppedRequests
 */
export declare class ClusterStats_DroppedRequests extends Message<ClusterStats_DroppedRequests> {
  /**
   * Identifier for the policy specifying the drop.
   *
   * @generated from field: string category = 1;
   */
  category: string;

  /**
   * Total number of deliberately dropped requests for the category.
   *
   * @generated from field: uint64 dropped_count = 2;
   */
  droppedCount: bigint;

  constructor(data?: PartialMessage<ClusterStats_DroppedRequests>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.api.v2.endpoint.ClusterStats.DroppedRequests";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterStats_DroppedRequests;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterStats_DroppedRequests;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterStats_DroppedRequests;

  static equals(a: ClusterStats_DroppedRequests | PlainMessage<ClusterStats_DroppedRequests> | undefined, b: ClusterStats_DroppedRequests | PlainMessage<ClusterStats_DroppedRequests> | undefined): boolean;
}

