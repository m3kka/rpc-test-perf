// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/api/v2/core/config_source.proto (package envoy.api.v2.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { DoubleValue, Duration, proto3, UInt32Value } from "@bufbuild/protobuf";
import { GrpcService } from "./grpc_service_pb.js";

/**
 * xDS API version. This is used to describe both resource and transport
 * protocol versions (in distinct configuration fields).
 *
 * @generated from enum envoy.api.v2.core.ApiVersion
 */
export const ApiVersion = proto3.makeEnum(
  "envoy.api.v2.core.ApiVersion",
  [
    {no: 0, name: "AUTO"},
    {no: 1, name: "V2"},
    {no: 2, name: "V3"},
  ],
);

/**
 * API configuration source. This identifies the API type and cluster that Envoy
 * will use to fetch an xDS API.
 * [#next-free-field: 9]
 *
 * @generated from message envoy.api.v2.core.ApiConfigSource
 */
export const ApiConfigSource = proto3.makeMessageType(
  "envoy.api.v2.core.ApiConfigSource",
  () => [
    { no: 1, name: "api_type", kind: "enum", T: proto3.getEnumType(ApiConfigSource_ApiType) },
    { no: 8, name: "transport_api_version", kind: "enum", T: proto3.getEnumType(ApiVersion) },
    { no: 2, name: "cluster_names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "grpc_services", kind: "message", T: GrpcService, repeated: true },
    { no: 3, name: "refresh_delay", kind: "message", T: Duration },
    { no: 5, name: "request_timeout", kind: "message", T: Duration },
    { no: 6, name: "rate_limit_settings", kind: "message", T: RateLimitSettings },
    { no: 7, name: "set_node_on_first_message_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * APIs may be fetched via either REST or gRPC.
 *
 * @generated from enum envoy.api.v2.core.ApiConfigSource.ApiType
 */
export const ApiConfigSource_ApiType = proto3.makeEnum(
  "envoy.api.v2.core.ApiConfigSource.ApiType",
  [
    {no: 0, name: "UNSUPPORTED_REST_LEGACY"},
    {no: 1, name: "REST"},
    {no: 2, name: "GRPC"},
    {no: 3, name: "DELTA_GRPC"},
  ],
);

/**
 * Aggregated Discovery Service (ADS) options. This is currently empty, but when
 * set in :ref:`ConfigSource <envoy_api_msg_core.ConfigSource>` can be used to
 * specify that ADS is to be used.
 *
 * @generated from message envoy.api.v2.core.AggregatedConfigSource
 */
export const AggregatedConfigSource = proto3.makeMessageType(
  "envoy.api.v2.core.AggregatedConfigSource",
  [],
);

/**
 * [#not-implemented-hide:]
 * Self-referencing config source options. This is currently empty, but when
 * set in :ref:`ConfigSource <envoy_api_msg_core.ConfigSource>` can be used to
 * specify that other data can be obtained from the same server.
 *
 * @generated from message envoy.api.v2.core.SelfConfigSource
 */
export const SelfConfigSource = proto3.makeMessageType(
  "envoy.api.v2.core.SelfConfigSource",
  () => [
    { no: 1, name: "transport_api_version", kind: "enum", T: proto3.getEnumType(ApiVersion) },
  ],
);

/**
 * Rate Limit settings to be applied for discovery requests made by Envoy.
 *
 * @generated from message envoy.api.v2.core.RateLimitSettings
 */
export const RateLimitSettings = proto3.makeMessageType(
  "envoy.api.v2.core.RateLimitSettings",
  () => [
    { no: 1, name: "max_tokens", kind: "message", T: UInt32Value },
    { no: 2, name: "fill_rate", kind: "message", T: DoubleValue },
  ],
);

/**
 * Configuration for :ref:`listeners <config_listeners>`, :ref:`clusters
 * <config_cluster_manager>`, :ref:`routes
 * <envoy_api_msg_RouteConfiguration>`, :ref:`endpoints
 * <arch_overview_service_discovery>` etc. may either be sourced from the
 * filesystem or from an xDS API source. Filesystem configs are watched with
 * inotify for updates.
 * [#next-free-field: 7]
 *
 * @generated from message envoy.api.v2.core.ConfigSource
 */
export const ConfigSource = proto3.makeMessageType(
  "envoy.api.v2.core.ConfigSource",
  () => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "config_source_specifier" },
    { no: 2, name: "api_config_source", kind: "message", T: ApiConfigSource, oneof: "config_source_specifier" },
    { no: 3, name: "ads", kind: "message", T: AggregatedConfigSource, oneof: "config_source_specifier" },
    { no: 5, name: "self", kind: "message", T: SelfConfigSource, oneof: "config_source_specifier" },
    { no: 4, name: "initial_fetch_timeout", kind: "message", T: Duration },
    { no: 6, name: "resource_api_version", kind: "enum", T: proto3.getEnumType(ApiVersion) },
  ],
);

