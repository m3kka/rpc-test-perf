// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/transport_socket/tap/v2alpha/tap.proto (package envoy.config.transport_socket.tap.v2alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { CommonExtensionConfig } from "../../../common/tap/v2alpha/common_pb.js";
import type { TransportSocket } from "../../../../api/v2/core/base_pb.js";

/**
 * Configuration for tap transport socket. This wraps another transport socket, providing the
 * ability to interpose and record in plain text any traffic that is surfaced to Envoy.
 *
 * @generated from message envoy.config.transport_socket.tap.v2alpha.Tap
 */
export declare class Tap extends Message<Tap> {
  /**
   * Common configuration for the tap transport socket.
   *
   * @generated from field: envoy.config.common.tap.v2alpha.CommonExtensionConfig common_config = 1;
   */
  commonConfig?: CommonExtensionConfig;

  /**
   * The underlying transport socket being wrapped.
   *
   * @generated from field: envoy.api.v2.core.TransportSocket transport_socket = 2;
   */
  transportSocket?: TransportSocket;

  constructor(data?: PartialMessage<Tap>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.transport_socket.tap.v2alpha.Tap";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Tap;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Tap;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Tap;

  static equals(a: Tap | PlainMessage<Tap> | undefined, b: Tap | PlainMessage<Tap> | undefined): boolean;
}

