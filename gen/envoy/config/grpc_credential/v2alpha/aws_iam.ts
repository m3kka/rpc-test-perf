// @generated by protobuf-ts 2.9.2
// @generated from protobuf file "envoy/config/grpc_credential/v2alpha/aws_iam.proto" (package "envoy.config.grpc_credential.v2alpha", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// [#protodoc-title: Grpc Credentials AWS IAM]
// Configuration for AWS IAM Grpc Credentials Plugin
// [#extension: envoy.grpc_credentials.aws_iam]

/**
 * @generated from protobuf message envoy.config.grpc_credential.v2alpha.AwsIamConfig
 */
export interface AwsIamConfig {
    /**
     * The `service namespace
     * <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces>`_
     * of the Grpc endpoint.
     *
     * Example: appmesh
     *
     * @generated from protobuf field: string service_name = 1;
     */
    serviceName: string;
    /**
     * The `region <https://docs.aws.amazon.com/general/latest/gr/rande.html>`_ hosting the Grpc
     * endpoint. If unspecified, the extension will use the value in the ``AWS_REGION`` environment
     * variable.
     *
     * Example: us-west-2
     *
     * @generated from protobuf field: string region = 2;
     */
    region: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class AwsIamConfig$Type extends MessageType<AwsIamConfig> {
    constructor() {
        super("envoy.config.grpc_credential.v2alpha.AwsIamConfig", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minBytes: "1" } } } },
            { no: 2, name: "region", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<AwsIamConfig>): AwsIamConfig {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.serviceName = "";
        message.region = "";
        if (value !== undefined)
            reflectionMergePartial<AwsIamConfig>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AwsIamConfig): AwsIamConfig {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string service_name */ 1:
                    message.serviceName = reader.string();
                    break;
                case /* string region */ 2:
                    message.region = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AwsIamConfig, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string service_name = 1; */
        if (message.serviceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.serviceName);
        /* string region = 2; */
        if (message.region !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.region);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.config.grpc_credential.v2alpha.AwsIamConfig
 */
export const AwsIamConfig = new AwsIamConfig$Type();
