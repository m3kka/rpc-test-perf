// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/retry/omit_host_metadata/v2/omit_host_metadata_config.proto (package envoy.config.retry.omit_host_metadata.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Metadata } from "../../../../api/v2/core/base_pb.js";

/**
 * A retry host predicate that can be used to reject a host based on
 * predefined metadata match criteria.
 * [#extension: envoy.retry_host_predicates.omit_host_metadata]
 *
 * @generated from message envoy.config.retry.omit_host_metadata.v2.OmitHostMetadataConfig
 */
export declare class OmitHostMetadataConfig extends Message<OmitHostMetadataConfig> {
  /**
   * Retry host predicate metadata match criteria. The hosts in
   * the upstream cluster with matching metadata will be omitted while
   * attempting a retry of a failed request. The metadata should be specified
   * under the *envoy.lb* key.
   *
   * @generated from field: envoy.api.v2.core.Metadata metadata_match = 1;
   */
  metadataMatch?: Metadata;

  constructor(data?: PartialMessage<OmitHostMetadataConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.retry.omit_host_metadata.v2.OmitHostMetadataConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmitHostMetadataConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmitHostMetadataConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmitHostMetadataConfig;

  static equals(a: OmitHostMetadataConfig | PlainMessage<OmitHostMetadataConfig> | undefined, b: OmitHostMetadataConfig | PlainMessage<OmitHostMetadataConfig> | undefined): boolean;
}

