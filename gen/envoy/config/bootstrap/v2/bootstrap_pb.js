// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/bootstrap/v2/bootstrap.proto (package envoy.config.bootstrap.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3, Struct, UInt64Value } from "@bufbuild/protobuf";
import { Node } from "../../../api/v2/core/base_pb.js";
import { ApiConfigSource, ConfigSource } from "../../../api/v2/core/config_source_pb.js";
import { StatsConfig, StatsSink } from "../../metrics/v2/stats_pb.js";
import { Tracing } from "../../trace/v2/http_tracer_pb.js";
import { OverloadManager } from "../../overload/v2alpha/overload_pb.js";
import { Listener } from "../../../api/v2/listener_pb.js";
import { Cluster } from "../../../api/v2/cluster_pb.js";
import { Secret } from "../../../api/v2/auth/secret_pb.js";
import { Address, BindConfig } from "../../../api/v2/core/address_pb.js";
import { SocketOption } from "../../../api/v2/core/socket_option_pb.js";
import { EventServiceConfig } from "../../../api/v2/core/event_service_config_pb.js";

/**
 * Bootstrap :ref:`configuration overview <config_overview_bootstrap>`.
 * [#next-free-field: 21]
 *
 * @generated from message envoy.config.bootstrap.v2.Bootstrap
 */
export const Bootstrap = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.Bootstrap",
  () => [
    { no: 1, name: "node", kind: "message", T: Node },
    { no: 2, name: "static_resources", kind: "message", T: Bootstrap_StaticResources },
    { no: 3, name: "dynamic_resources", kind: "message", T: Bootstrap_DynamicResources },
    { no: 4, name: "cluster_manager", kind: "message", T: ClusterManager },
    { no: 14, name: "hds_config", kind: "message", T: ApiConfigSource },
    { no: 5, name: "flags_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "stats_sinks", kind: "message", T: StatsSink, repeated: true },
    { no: 13, name: "stats_config", kind: "message", T: StatsConfig },
    { no: 7, name: "stats_flush_interval", kind: "message", T: Duration },
    { no: 8, name: "watchdog", kind: "message", T: Watchdog },
    { no: 9, name: "tracing", kind: "message", T: Tracing },
    { no: 11, name: "runtime", kind: "message", T: Runtime },
    { no: 17, name: "layered_runtime", kind: "message", T: LayeredRuntime },
    { no: 12, name: "admin", kind: "message", T: Admin },
    { no: 15, name: "overload_manager", kind: "message", T: OverloadManager },
    { no: 16, name: "enable_dispatcher_stats", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "header_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "stats_server_version_override", kind: "message", T: UInt64Value },
    { no: 20, name: "use_tcp_for_dns_lookups", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message envoy.config.bootstrap.v2.Bootstrap.StaticResources
 */
export const Bootstrap_StaticResources = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.Bootstrap.StaticResources",
  () => [
    { no: 1, name: "listeners", kind: "message", T: Listener, repeated: true },
    { no: 2, name: "clusters", kind: "message", T: Cluster, repeated: true },
    { no: 3, name: "secrets", kind: "message", T: Secret, repeated: true },
  ],
  {localName: "Bootstrap_StaticResources"},
);

/**
 * @generated from message envoy.config.bootstrap.v2.Bootstrap.DynamicResources
 */
export const Bootstrap_DynamicResources = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.Bootstrap.DynamicResources",
  () => [
    { no: 1, name: "lds_config", kind: "message", T: ConfigSource },
    { no: 2, name: "cds_config", kind: "message", T: ConfigSource },
    { no: 3, name: "ads_config", kind: "message", T: ApiConfigSource },
  ],
  {localName: "Bootstrap_DynamicResources"},
);

/**
 * Administration interface :ref:`operations documentation
 * <operations_admin_interface>`.
 *
 * @generated from message envoy.config.bootstrap.v2.Admin
 */
export const Admin = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.Admin",
  () => [
    { no: 1, name: "access_log_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "profile_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "address", kind: "message", T: Address },
    { no: 4, name: "socket_options", kind: "message", T: SocketOption, repeated: true },
  ],
);

/**
 * Cluster manager :ref:`architecture overview <arch_overview_cluster_manager>`.
 *
 * @generated from message envoy.config.bootstrap.v2.ClusterManager
 */
export const ClusterManager = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.ClusterManager",
  () => [
    { no: 1, name: "local_cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "outlier_detection", kind: "message", T: ClusterManager_OutlierDetection },
    { no: 3, name: "upstream_bind_config", kind: "message", T: BindConfig },
    { no: 4, name: "load_stats_config", kind: "message", T: ApiConfigSource },
  ],
);

/**
 * @generated from message envoy.config.bootstrap.v2.ClusterManager.OutlierDetection
 */
export const ClusterManager_OutlierDetection = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.ClusterManager.OutlierDetection",
  () => [
    { no: 1, name: "event_log_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "event_service", kind: "message", T: EventServiceConfig },
  ],
  {localName: "ClusterManager_OutlierDetection"},
);

/**
 * Envoy process watchdog configuration. When configured, this monitors for
 * nonresponsive threads and kills the process after the configured thresholds.
 * See the :ref:`watchdog documentation <operations_performance_watchdog>` for more information.
 *
 * @generated from message envoy.config.bootstrap.v2.Watchdog
 */
export const Watchdog = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.Watchdog",
  () => [
    { no: 1, name: "miss_timeout", kind: "message", T: Duration },
    { no: 2, name: "megamiss_timeout", kind: "message", T: Duration },
    { no: 3, name: "kill_timeout", kind: "message", T: Duration },
    { no: 4, name: "multikill_timeout", kind: "message", T: Duration },
  ],
);

/**
 * Runtime :ref:`configuration overview <config_runtime>` (deprecated).
 *
 * @generated from message envoy.config.bootstrap.v2.Runtime
 */
export const Runtime = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.Runtime",
  () => [
    { no: 1, name: "symlink_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "subdirectory", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "override_subdirectory", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "base", kind: "message", T: Struct },
  ],
);

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.config.bootstrap.v2.RuntimeLayer
 */
export const RuntimeLayer = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.RuntimeLayer",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "static_layer", kind: "message", T: Struct, oneof: "layer_specifier" },
    { no: 3, name: "disk_layer", kind: "message", T: RuntimeLayer_DiskLayer, oneof: "layer_specifier" },
    { no: 4, name: "admin_layer", kind: "message", T: RuntimeLayer_AdminLayer, oneof: "layer_specifier" },
    { no: 5, name: "rtds_layer", kind: "message", T: RuntimeLayer_RtdsLayer, oneof: "layer_specifier" },
  ],
);

/**
 * :ref:`Disk runtime <config_runtime_local_disk>` layer.
 *
 * @generated from message envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer
 */
export const RuntimeLayer_DiskLayer = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer",
  () => [
    { no: 1, name: "symlink_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "subdirectory", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "append_service_cluster", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "RuntimeLayer_DiskLayer"},
);

/**
 * :ref:`Admin console runtime <config_runtime_admin>` layer.
 *
 * @generated from message envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer
 */
export const RuntimeLayer_AdminLayer = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer",
  [],
  {localName: "RuntimeLayer_AdminLayer"},
);

/**
 * :ref:`Runtime Discovery Service (RTDS) <config_runtime_rtds>` layer.
 *
 * @generated from message envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer
 */
export const RuntimeLayer_RtdsLayer = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "rtds_config", kind: "message", T: ConfigSource },
  ],
  {localName: "RuntimeLayer_RtdsLayer"},
);

/**
 * Runtime :ref:`configuration overview <config_runtime>`.
 *
 * @generated from message envoy.config.bootstrap.v2.LayeredRuntime
 */
export const LayeredRuntime = proto3.makeMessageType(
  "envoy.config.bootstrap.v2.LayeredRuntime",
  () => [
    { no: 1, name: "layers", kind: "message", T: RuntimeLayer, repeated: true },
  ],
);

