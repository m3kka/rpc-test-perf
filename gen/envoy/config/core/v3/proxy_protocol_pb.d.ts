// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/core/v3/proxy_protocol.proto (package envoy.config.core.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message envoy.config.core.v3.ProxyProtocolPassThroughTLVs
 */
export declare class ProxyProtocolPassThroughTLVs extends Message<ProxyProtocolPassThroughTLVs> {
  /**
   * The strategy to pass through TLVs. Default is INCLUDE_ALL.
   * If INCLUDE_ALL is set, all TLVs will be passed through no matter the tlv_type field.
   *
   * @generated from field: envoy.config.core.v3.ProxyProtocolPassThroughTLVs.PassTLVsMatchType match_type = 1;
   */
  matchType: ProxyProtocolPassThroughTLVs_PassTLVsMatchType;

  /**
   * The TLV types that are applied based on match_type.
   * TLV type is defined as uint8_t in proxy protocol. See `the spec
   * <https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt>`_ for details.
   *
   * @generated from field: repeated uint32 tlv_type = 2;
   */
  tlvType: number[];

  constructor(data?: PartialMessage<ProxyProtocolPassThroughTLVs>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.core.v3.ProxyProtocolPassThroughTLVs";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProxyProtocolPassThroughTLVs;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProxyProtocolPassThroughTLVs;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProxyProtocolPassThroughTLVs;

  static equals(a: ProxyProtocolPassThroughTLVs | PlainMessage<ProxyProtocolPassThroughTLVs> | undefined, b: ProxyProtocolPassThroughTLVs | PlainMessage<ProxyProtocolPassThroughTLVs> | undefined): boolean;
}

/**
 * @generated from enum envoy.config.core.v3.ProxyProtocolPassThroughTLVs.PassTLVsMatchType
 */
export declare enum ProxyProtocolPassThroughTLVs_PassTLVsMatchType {
  /**
   * Pass all TLVs.
   *
   * @generated from enum value: INCLUDE_ALL = 0;
   */
  INCLUDE_ALL = 0,

  /**
   * Pass specific TLVs defined in tlv_type.
   *
   * @generated from enum value: INCLUDE = 1;
   */
  INCLUDE = 1,
}

/**
 * @generated from message envoy.config.core.v3.ProxyProtocolConfig
 */
export declare class ProxyProtocolConfig extends Message<ProxyProtocolConfig> {
  /**
   * The PROXY protocol version to use. See https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt for details
   *
   * @generated from field: envoy.config.core.v3.ProxyProtocolConfig.Version version = 1;
   */
  version: ProxyProtocolConfig_Version;

  /**
   * This config controls which TLVs can be passed to upstream if it is Proxy Protocol
   * V2 header. If there is no setting for this field, no TLVs will be passed through.
   *
   * @generated from field: envoy.config.core.v3.ProxyProtocolPassThroughTLVs pass_through_tlvs = 2;
   */
  passThroughTlvs?: ProxyProtocolPassThroughTLVs;

  constructor(data?: PartialMessage<ProxyProtocolConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.core.v3.ProxyProtocolConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProxyProtocolConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProxyProtocolConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProxyProtocolConfig;

  static equals(a: ProxyProtocolConfig | PlainMessage<ProxyProtocolConfig> | undefined, b: ProxyProtocolConfig | PlainMessage<ProxyProtocolConfig> | undefined): boolean;
}

/**
 * @generated from enum envoy.config.core.v3.ProxyProtocolConfig.Version
 */
export declare enum ProxyProtocolConfig_Version {
  /**
   * PROXY protocol version 1. Human readable format.
   *
   * @generated from enum value: V1 = 0;
   */
  V1 = 0,

  /**
   * PROXY protocol version 2. Binary format.
   *
   * @generated from enum value: V2 = 1;
   */
  V2 = 1,
}

