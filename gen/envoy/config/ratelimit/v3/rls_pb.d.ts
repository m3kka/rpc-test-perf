// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/ratelimit/v3/rls.proto (package envoy.config.ratelimit.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { GrpcService } from "../../core/v3/grpc_service_pb.js";
import type { ApiVersion } from "../../core/v3/config_source_pb.js";

/**
 * Rate limit :ref:`configuration overview <config_rate_limit_service>`.
 *
 * @generated from message envoy.config.ratelimit.v3.RateLimitServiceConfig
 */
export declare class RateLimitServiceConfig extends Message<RateLimitServiceConfig> {
  /**
   * Specifies the gRPC service that hosts the rate limit service. The client
   * will connect to this cluster when it needs to make rate limit service
   * requests.
   *
   * @generated from field: envoy.config.core.v3.GrpcService grpc_service = 2;
   */
  grpcService?: GrpcService;

  /**
   * API version for rate limit transport protocol. This describes the rate limit gRPC endpoint and
   * version of messages used on the wire.
   *
   * @generated from field: envoy.config.core.v3.ApiVersion transport_api_version = 4;
   */
  transportApiVersion: ApiVersion;

  constructor(data?: PartialMessage<RateLimitServiceConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.ratelimit.v3.RateLimitServiceConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RateLimitServiceConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RateLimitServiceConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RateLimitServiceConfig;

  static equals(a: RateLimitServiceConfig | PlainMessage<RateLimitServiceConfig> | undefined, b: RateLimitServiceConfig | PlainMessage<RateLimitServiceConfig> | undefined): boolean;
}

