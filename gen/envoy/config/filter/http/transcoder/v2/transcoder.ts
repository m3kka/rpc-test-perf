// @generated by protobuf-ts 2.9.2
// @generated from protobuf file "envoy/config/filter/http/transcoder/v2/transcoder.proto" (package "envoy.config.filter.http.transcoder.v2", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// [#protodoc-title: gRPC-JSON transcoder]
// gRPC-JSON transcoder :ref:`configuration overview <config_http_filters_grpc_json_transcoder>`.
// [#extension: envoy.filters.http.grpc_json_transcoder]

/**
 * [#next-free-field: 10]
 *
 * @generated from protobuf message envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder
 */
export interface GrpcJsonTranscoder {
    /**
     * @generated from protobuf oneof: descriptor_set
     */
    descriptorSet: {
        oneofKind: "protoDescriptor";
        /**
         * Supplies the filename of
         * :ref:`the proto descriptor set <config_grpc_json_generate_proto_descriptor_set>` for the gRPC
         * services.
         *
         * @generated from protobuf field: string proto_descriptor = 1;
         */
        protoDescriptor: string;
    } | {
        oneofKind: "protoDescriptorBin";
        /**
         * Supplies the binary content of
         * :ref:`the proto descriptor set <config_grpc_json_generate_proto_descriptor_set>` for the gRPC
         * services.
         *
         * @generated from protobuf field: bytes proto_descriptor_bin = 4;
         */
        protoDescriptorBin: Uint8Array;
    } | {
        oneofKind: undefined;
    };
    /**
     * A list of strings that
     * supplies the fully qualified service names (i.e. "package_name.service_name") that
     * the transcoder will translate. If the service name doesn't exist in ``proto_descriptor``,
     * Envoy will fail at startup. The ``proto_descriptor`` may contain more services than
     * the service names specified here, but they won't be translated.
     *
     * @generated from protobuf field: repeated string services = 2;
     */
    services: string[];
    /**
     * Control options for response JSON. These options are passed directly to
     * `JsonPrintOptions <https://developers.google.com/protocol-buffers/docs/reference/cpp/
     * google.protobuf.util.json_util#JsonPrintOptions>`_.
     *
     * @generated from protobuf field: envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder.PrintOptions print_options = 3;
     */
    printOptions?: GrpcJsonTranscoder_PrintOptions;
    /**
     * Whether to keep the incoming request route after the outgoing headers have been transformed to
     * the match the upstream gRPC service. Note: This means that routes for gRPC services that are
     * not transcoded cannot be used in combination with *match_incoming_request_route*.
     *
     * @generated from protobuf field: bool match_incoming_request_route = 5;
     */
    matchIncomingRequestRoute: boolean;
    /**
     * A list of query parameters to be ignored for transcoding method mapping.
     * By default, the transcoder filter will not transcode a request if there are any
     * unknown/invalid query parameters.
     *
     * Example :
     *
     * .. code-block:: proto
     *
     *     service Bookstore {
     *       rpc GetShelf(GetShelfRequest) returns (Shelf) {
     *         option (google.api.http) = {
     *           get: "/shelves/{shelf}"
     *         };
     *       }
     *     }
     *
     *     message GetShelfRequest {
     *       int64 shelf = 1;
     *     }
     *
     *     message Shelf {}
     *
     * The request ``/shelves/100?foo=bar`` will not be mapped to ``GetShelf``` because variable
     * binding for ``foo`` is not defined. Adding ``foo`` to ``ignored_query_parameters`` will allow
     * the same request to be mapped to ``GetShelf``.
     *
     * @generated from protobuf field: repeated string ignored_query_parameters = 6;
     */
    ignoredQueryParameters: string[];
    /**
     * Whether to route methods without the ``google.api.http`` option.
     *
     * Example :
     *
     * .. code-block:: proto
     *
     *     package bookstore;
     *
     *     service Bookstore {
     *       rpc GetShelf(GetShelfRequest) returns (Shelf) {}
     *     }
     *
     *     message GetShelfRequest {
     *       int64 shelf = 1;
     *     }
     *
     *     message Shelf {}
     *
     * The client could ``post`` a json body ``{"shelf": 1234}`` with the path of
     * ``/bookstore.Bookstore/GetShelfRequest`` to call ``GetShelfRequest``.
     *
     * @generated from protobuf field: bool auto_mapping = 7;
     */
    autoMapping: boolean;
    /**
     * Whether to ignore query parameters that cannot be mapped to a corresponding
     * protobuf field. Use this if you cannot control the query parameters and do
     * not know them beforehand. Otherwise use ``ignored_query_parameters``.
     * Defaults to false.
     *
     * @generated from protobuf field: bool ignore_unknown_query_parameters = 8;
     */
    ignoreUnknownQueryParameters: boolean;
    /**
     * Whether to convert gRPC status headers to JSON.
     * When trailer indicates a gRPC error and there was no HTTP body, take ``google.rpc.Status``
     * from the ``grpc-status-details-bin`` header and use it as JSON body.
     * If there was no such header, make ``google.rpc.Status`` out of the ``grpc-status`` and
     * ``grpc-message`` headers.
     * The error details types must be present in the ``proto_descriptor``.
     *
     * For example, if an upstream server replies with headers:
     *
     * .. code-block:: none
     *
     *     grpc-status: 5
     *     grpc-status-details-bin:
     *         CAUaMwoqdHlwZS5nb29nbGVhcGlzLmNvbS9nb29nbGUucnBjLlJlcXVlc3RJbmZvEgUKA3ItMQ
     *
     * The ``grpc-status-details-bin`` header contains a base64-encoded protobuf message
     * ``google.rpc.Status``. It will be transcoded into:
     *
     * .. code-block:: none
     *
     *     HTTP/1.1 404 Not Found
     *     content-type: application/json
     *
     *     {"code":5,"details":[{"@type":"type.googleapis.com/google.rpc.RequestInfo","requestId":"r-1"}]}
     *
     * In order to transcode the message, the ``google.rpc.RequestInfo`` type from
     * the ``google/rpc/error_details.proto`` should be included in the configured
     * :ref:`proto descriptor set <config_grpc_json_generate_proto_descriptor_set>`.
     *
     * @generated from protobuf field: bool convert_grpc_status = 9;
     */
    convertGrpcStatus: boolean;
}
/**
 * @generated from protobuf message envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder.PrintOptions
 */
export interface GrpcJsonTranscoder_PrintOptions {
    /**
     * Whether to add spaces, line breaks and indentation to make the JSON
     * output easy to read. Defaults to false.
     *
     * @generated from protobuf field: bool add_whitespace = 1;
     */
    addWhitespace: boolean;
    /**
     * Whether to always print primitive fields. By default primitive
     * fields with default values will be omitted in JSON output. For
     * example, an int32 field set to 0 will be omitted. Setting this flag to
     * true will override the default behavior and print primitive fields
     * regardless of their values. Defaults to false.
     *
     * @generated from protobuf field: bool always_print_primitive_fields = 2;
     */
    alwaysPrintPrimitiveFields: boolean;
    /**
     * Whether to always print enums as ints. By default they are rendered
     * as strings. Defaults to false.
     *
     * @generated from protobuf field: bool always_print_enums_as_ints = 3;
     */
    alwaysPrintEnumsAsInts: boolean;
    /**
     * Whether to preserve proto field names. By default protobuf will
     * generate JSON field names using the ``json_name`` option, or lower camel case,
     * in that order. Setting this flag will preserve the original field names. Defaults to false.
     *
     * @generated from protobuf field: bool preserve_proto_field_names = 4;
     */
    preserveProtoFieldNames: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class GrpcJsonTranscoder$Type extends MessageType<GrpcJsonTranscoder> {
    constructor() {
        super("envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder", [
            { no: 1, name: "proto_descriptor", kind: "scalar", oneof: "descriptorSet", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "proto_descriptor_bin", kind: "scalar", oneof: "descriptorSet", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "services", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { repeated: { minItems: "1" } } } },
            { no: 3, name: "print_options", kind: "message", T: () => GrpcJsonTranscoder_PrintOptions },
            { no: 5, name: "match_incoming_request_route", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "ignored_query_parameters", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "auto_mapping", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "ignore_unknown_query_parameters", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "convert_grpc_status", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GrpcJsonTranscoder>): GrpcJsonTranscoder {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.descriptorSet = { oneofKind: undefined };
        message.services = [];
        message.matchIncomingRequestRoute = false;
        message.ignoredQueryParameters = [];
        message.autoMapping = false;
        message.ignoreUnknownQueryParameters = false;
        message.convertGrpcStatus = false;
        if (value !== undefined)
            reflectionMergePartial<GrpcJsonTranscoder>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GrpcJsonTranscoder): GrpcJsonTranscoder {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string proto_descriptor */ 1:
                    message.descriptorSet = {
                        oneofKind: "protoDescriptor",
                        protoDescriptor: reader.string()
                    };
                    break;
                case /* bytes proto_descriptor_bin */ 4:
                    message.descriptorSet = {
                        oneofKind: "protoDescriptorBin",
                        protoDescriptorBin: reader.bytes()
                    };
                    break;
                case /* repeated string services */ 2:
                    message.services.push(reader.string());
                    break;
                case /* envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder.PrintOptions print_options */ 3:
                    message.printOptions = GrpcJsonTranscoder_PrintOptions.internalBinaryRead(reader, reader.uint32(), options, message.printOptions);
                    break;
                case /* bool match_incoming_request_route */ 5:
                    message.matchIncomingRequestRoute = reader.bool();
                    break;
                case /* repeated string ignored_query_parameters */ 6:
                    message.ignoredQueryParameters.push(reader.string());
                    break;
                case /* bool auto_mapping */ 7:
                    message.autoMapping = reader.bool();
                    break;
                case /* bool ignore_unknown_query_parameters */ 8:
                    message.ignoreUnknownQueryParameters = reader.bool();
                    break;
                case /* bool convert_grpc_status */ 9:
                    message.convertGrpcStatus = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GrpcJsonTranscoder, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string proto_descriptor = 1; */
        if (message.descriptorSet.oneofKind === "protoDescriptor")
            writer.tag(1, WireType.LengthDelimited).string(message.descriptorSet.protoDescriptor);
        /* bytes proto_descriptor_bin = 4; */
        if (message.descriptorSet.oneofKind === "protoDescriptorBin")
            writer.tag(4, WireType.LengthDelimited).bytes(message.descriptorSet.protoDescriptorBin);
        /* repeated string services = 2; */
        for (let i = 0; i < message.services.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.services[i]);
        /* envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder.PrintOptions print_options = 3; */
        if (message.printOptions)
            GrpcJsonTranscoder_PrintOptions.internalBinaryWrite(message.printOptions, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bool match_incoming_request_route = 5; */
        if (message.matchIncomingRequestRoute !== false)
            writer.tag(5, WireType.Varint).bool(message.matchIncomingRequestRoute);
        /* repeated string ignored_query_parameters = 6; */
        for (let i = 0; i < message.ignoredQueryParameters.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.ignoredQueryParameters[i]);
        /* bool auto_mapping = 7; */
        if (message.autoMapping !== false)
            writer.tag(7, WireType.Varint).bool(message.autoMapping);
        /* bool ignore_unknown_query_parameters = 8; */
        if (message.ignoreUnknownQueryParameters !== false)
            writer.tag(8, WireType.Varint).bool(message.ignoreUnknownQueryParameters);
        /* bool convert_grpc_status = 9; */
        if (message.convertGrpcStatus !== false)
            writer.tag(9, WireType.Varint).bool(message.convertGrpcStatus);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder
 */
export const GrpcJsonTranscoder = new GrpcJsonTranscoder$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GrpcJsonTranscoder_PrintOptions$Type extends MessageType<GrpcJsonTranscoder_PrintOptions> {
    constructor() {
        super("envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder.PrintOptions", [
            { no: 1, name: "add_whitespace", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "always_print_primitive_fields", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "always_print_enums_as_ints", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "preserve_proto_field_names", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GrpcJsonTranscoder_PrintOptions>): GrpcJsonTranscoder_PrintOptions {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.addWhitespace = false;
        message.alwaysPrintPrimitiveFields = false;
        message.alwaysPrintEnumsAsInts = false;
        message.preserveProtoFieldNames = false;
        if (value !== undefined)
            reflectionMergePartial<GrpcJsonTranscoder_PrintOptions>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GrpcJsonTranscoder_PrintOptions): GrpcJsonTranscoder_PrintOptions {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool add_whitespace */ 1:
                    message.addWhitespace = reader.bool();
                    break;
                case /* bool always_print_primitive_fields */ 2:
                    message.alwaysPrintPrimitiveFields = reader.bool();
                    break;
                case /* bool always_print_enums_as_ints */ 3:
                    message.alwaysPrintEnumsAsInts = reader.bool();
                    break;
                case /* bool preserve_proto_field_names */ 4:
                    message.preserveProtoFieldNames = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GrpcJsonTranscoder_PrintOptions, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool add_whitespace = 1; */
        if (message.addWhitespace !== false)
            writer.tag(1, WireType.Varint).bool(message.addWhitespace);
        /* bool always_print_primitive_fields = 2; */
        if (message.alwaysPrintPrimitiveFields !== false)
            writer.tag(2, WireType.Varint).bool(message.alwaysPrintPrimitiveFields);
        /* bool always_print_enums_as_ints = 3; */
        if (message.alwaysPrintEnumsAsInts !== false)
            writer.tag(3, WireType.Varint).bool(message.alwaysPrintEnumsAsInts);
        /* bool preserve_proto_field_names = 4; */
        if (message.preserveProtoFieldNames !== false)
            writer.tag(4, WireType.Varint).bool(message.preserveProtoFieldNames);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder.PrintOptions
 */
export const GrpcJsonTranscoder_PrintOptions = new GrpcJsonTranscoder_PrintOptions$Type();
