// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/filter/http/aws_request_signing/v2alpha/aws_request_signing.proto (package envoy.config.filter.http.aws_request_signing.v2alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Top level configuration for the AWS request signing filter.
 *
 * @generated from message envoy.config.filter.http.aws_request_signing.v2alpha.AwsRequestSigning
 */
export declare class AwsRequestSigning extends Message<AwsRequestSigning> {
  /**
   * The `service namespace
   * <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces>`_
   * of the HTTP endpoint.
   *
   * Example: s3
   *
   * @generated from field: string service_name = 1;
   */
  serviceName: string;

  /**
   * The `region <https://docs.aws.amazon.com/general/latest/gr/rande.html>`_ hosting the HTTP
   * endpoint.
   *
   * Example: us-west-2
   *
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * Indicates that before signing headers, the host header will be swapped with
   * this value. If not set or empty, the original host header value
   * will be used and no rewrite will happen.
   *
   * Note: this rewrite affects both signing and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite <envoy_api_field_route.RouteAction.host_rewrite>` given that the
   * value set here would be used for signing whereas the value set in the HCM would be used
   * for host header forwarding which is not the desired outcome.
   *
   * @generated from field: string host_rewrite = 3;
   */
  hostRewrite: string;

  constructor(data?: PartialMessage<AwsRequestSigning>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.filter.http.aws_request_signing.v2alpha.AwsRequestSigning";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AwsRequestSigning;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AwsRequestSigning;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AwsRequestSigning;

  static equals(a: AwsRequestSigning | PlainMessage<AwsRequestSigning> | undefined, b: AwsRequestSigning | PlainMessage<AwsRequestSigning> | undefined): boolean;
}

