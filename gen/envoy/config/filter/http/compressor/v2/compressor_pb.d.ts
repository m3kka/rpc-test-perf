// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/filter/http/compressor/v2/compressor.proto (package envoy.config.filter.http.compressor.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { RuntimeFeatureFlag } from "../../../../../api/v2/core/base_pb.js";

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.config.filter.http.compressor.v2.Compressor
 */
export declare class Compressor extends Message<Compressor> {
  /**
   * Minimum response length, in bytes, which will trigger compression. The default value is 30.
   *
   * @generated from field: google.protobuf.UInt32Value content_length = 1;
   */
  contentLength?: number;

  /**
   * Set of strings that allows specifying which mime-types yield compression; e.g.,
   * application/json, text/html, etc. When this field is not defined, compression will be applied
   * to the following mime-types: "application/javascript", "application/json",
   * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
   * and their synonyms.
   *
   * @generated from field: repeated string content_type = 2;
   */
  contentType: string[];

  /**
   * If true, disables compression when the response contains an etag header. When it is false, the
   * filter will preserve weak etags and remove the ones that require strong validation.
   *
   * @generated from field: bool disable_on_etag_header = 3;
   */
  disableOnEtagHeader: boolean;

  /**
   * If true, removes accept-encoding from the request headers before dispatching it to the upstream
   * so that responses do not get compressed before reaching the filter.
   * .. attention:
   *
   *    To avoid interfering with other compression filters in the same chain use this option in
   *    the filter closest to the upstream.
   *
   * @generated from field: bool remove_accept_encoding_header = 4;
   */
  removeAcceptEncodingHeader: boolean;

  /**
   * Runtime flag that controls whether the filter is enabled or not. If set to false, the
   * filter will operate as a pass-through filter. If not specified, defaults to enabled.
   *
   * @generated from field: envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;
   */
  runtimeEnabled?: RuntimeFeatureFlag;

  constructor(data?: PartialMessage<Compressor>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.filter.http.compressor.v2.Compressor";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Compressor;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Compressor;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Compressor;

  static equals(a: Compressor | PlainMessage<Compressor> | undefined, b: Compressor | PlainMessage<Compressor> | undefined): boolean;
}

