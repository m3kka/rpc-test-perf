// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto (package envoy.config.filter.http.adaptive_concurrency.v2alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3, UInt32Value } from "@bufbuild/protobuf";
import { Percent } from "../../../../../type/percent_pb.js";
import { RuntimeFeatureFlag } from "../../../../../api/v2/core/base_pb.js";

/**
 * Configuration parameters for the gradient controller.
 *
 * @generated from message envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig
 */
export const GradientControllerConfig = proto3.makeMessageType(
  "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig",
  () => [
    { no: 1, name: "sample_aggregate_percentile", kind: "message", T: Percent },
    { no: 2, name: "concurrency_limit_params", kind: "message", T: GradientControllerConfig_ConcurrencyLimitCalculationParams },
    { no: 3, name: "min_rtt_calc_params", kind: "message", T: GradientControllerConfig_MinimumRTTCalculationParams },
  ],
);

/**
 * Parameters controlling the periodic recalculation of the concurrency limit from sampled request
 * latencies.
 *
 * @generated from message envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig.ConcurrencyLimitCalculationParams
 */
export const GradientControllerConfig_ConcurrencyLimitCalculationParams = proto3.makeMessageType(
  "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig.ConcurrencyLimitCalculationParams",
  () => [
    { no: 2, name: "max_concurrency_limit", kind: "message", T: UInt32Value },
    { no: 3, name: "concurrency_update_interval", kind: "message", T: Duration },
  ],
  {localName: "GradientControllerConfig_ConcurrencyLimitCalculationParams"},
);

/**
 * Parameters controlling the periodic minRTT recalculation.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig.MinimumRTTCalculationParams
 */
export const GradientControllerConfig_MinimumRTTCalculationParams = proto3.makeMessageType(
  "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig.MinimumRTTCalculationParams",
  () => [
    { no: 1, name: "interval", kind: "message", T: Duration },
    { no: 2, name: "request_count", kind: "message", T: UInt32Value },
    { no: 3, name: "jitter", kind: "message", T: Percent },
    { no: 4, name: "min_concurrency", kind: "message", T: UInt32Value },
    { no: 5, name: "buffer", kind: "message", T: Percent },
  ],
  {localName: "GradientControllerConfig_MinimumRTTCalculationParams"},
);

/**
 * @generated from message envoy.config.filter.http.adaptive_concurrency.v2alpha.AdaptiveConcurrency
 */
export const AdaptiveConcurrency = proto3.makeMessageType(
  "envoy.config.filter.http.adaptive_concurrency.v2alpha.AdaptiveConcurrency",
  () => [
    { no: 1, name: "gradient_controller_config", kind: "message", T: GradientControllerConfig, oneof: "concurrency_controller_config" },
    { no: 2, name: "enabled", kind: "message", T: RuntimeFeatureFlag },
  ],
);

