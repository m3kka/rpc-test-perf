// @generated by protobuf-ts 2.9.2
// @generated from protobuf file "envoy/config/filter/listener/tls_inspector/v2/tls_inspector.proto" (package "envoy.config.filter.listener.tls_inspector.v2", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// [#protodoc-title: TLS Inspector Filter]
// Allows detecting whether the transport appears to be TLS or plaintext.
// [#extension: envoy.filters.listener.tls_inspector]

/**
 * @generated from protobuf message envoy.config.filter.listener.tls_inspector.v2.TlsInspector
 */
export interface TlsInspector {
}
// @generated message type with reflection information, may provide speed optimized methods
class TlsInspector$Type extends MessageType<TlsInspector> {
    constructor() {
        super("envoy.config.filter.listener.tls_inspector.v2.TlsInspector", []);
    }
    create(value?: PartialMessage<TlsInspector>): TlsInspector {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<TlsInspector>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TlsInspector): TlsInspector {
        return target ?? this.create();
    }
    internalBinaryWrite(message: TlsInspector, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.config.filter.listener.tls_inspector.v2.TlsInspector
 */
export const TlsInspector = new TlsInspector$Type();
