// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/filter/network/rbac/v2/rbac.proto (package envoy.config.filter.network.rbac.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { RBAC as RBAC$1 } from "../../../../rbac/v2/rbac_pb.js";

/**
 * RBAC network filter config.
 *
 * Header should not be used in rules/shadow_rules in RBAC network filter as
 * this information is only available in :ref:`RBAC http filter <config_http_filters_rbac>`.
 *
 * @generated from message envoy.config.filter.network.rbac.v2.RBAC
 */
export const RBAC = proto3.makeMessageType(
  "envoy.config.filter.network.rbac.v2.RBAC",
  () => [
    { no: 1, name: "rules", kind: "message", T: RBAC$1 },
    { no: 2, name: "shadow_rules", kind: "message", T: RBAC$1 },
    { no: 3, name: "stat_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "enforcement_type", kind: "enum", T: proto3.getEnumType(RBAC_EnforcementType) },
  ],
);

/**
 * @generated from enum envoy.config.filter.network.rbac.v2.RBAC.EnforcementType
 */
export const RBAC_EnforcementType = proto3.makeEnum(
  "envoy.config.filter.network.rbac.v2.RBAC.EnforcementType",
  [
    {no: 0, name: "ONE_TIME_ON_FIRST_BYTE"},
    {no: 1, name: "CONTINUOUS"},
  ],
);

