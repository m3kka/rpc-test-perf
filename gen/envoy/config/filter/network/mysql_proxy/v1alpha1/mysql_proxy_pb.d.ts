// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/filter/network/mysql_proxy/v1alpha1/mysql_proxy.proto (package envoy.config.filter.network.mysql_proxy.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message envoy.config.filter.network.mysql_proxy.v1alpha1.MySQLProxy
 */
export declare class MySQLProxy extends Message<MySQLProxy> {
  /**
   * The human readable prefix to use when emitting :ref:`statistics
   * <config_network_filters_mysql_proxy_stats>`.
   *
   * @generated from field: string stat_prefix = 1;
   */
  statPrefix: string;

  /**
   * [#not-implemented-hide:] The optional path to use for writing MySQL access logs.
   * If the access log field is empty, access logs will not be written.
   *
   * @generated from field: string access_log = 2;
   */
  accessLog: string;

  constructor(data?: PartialMessage<MySQLProxy>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.filter.network.mysql_proxy.v1alpha1.MySQLProxy";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MySQLProxy;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MySQLProxy;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MySQLProxy;

  static equals(a: MySQLProxy | PlainMessage<MySQLProxy> | undefined, b: MySQLProxy | PlainMessage<MySQLProxy> | undefined): boolean;
}

