// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/filter/network/ext_authz/v2/ext_authz.proto (package envoy.config.filter.network.ext_authz.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { GrpcService } from "../../../../../api/v2/core/grpc_service_pb.js";

/**
 * External Authorization filter calls out to an external service over the
 * gRPC Authorization API defined by
 * :ref:`CheckRequest <envoy_api_msg_service.auth.v2.CheckRequest>`.
 * A failed check will cause this filter to close the TCP connection.
 *
 * @generated from message envoy.config.filter.network.ext_authz.v2.ExtAuthz
 */
export declare class ExtAuthz extends Message<ExtAuthz> {
  /**
   * The prefix to use when emitting statistics.
   *
   * @generated from field: string stat_prefix = 1;
   */
  statPrefix: string;

  /**
   * The external authorization gRPC service configuration.
   * The default timeout is set to 200ms by this filter.
   *
   * @generated from field: envoy.api.v2.core.GrpcService grpc_service = 2;
   */
  grpcService?: GrpcService;

  /**
   * The filter's behaviour in case the external authorization service does
   * not respond back. When it is set to true, Envoy will also allow traffic in case of
   * communication failure between authorization service and the proxy.
   * Defaults to false.
   *
   * @generated from field: bool failure_mode_allow = 3;
   */
  failureModeAllow: boolean;

  /**
   * Specifies if the peer certificate is sent to the external service.
   *
   * When this field is true, Envoy will include the peer X.509 certificate, if available, in the
   * :ref:`certificate<envoy_api_field_service.auth.v2.AttributeContext.Peer.certificate>`.
   *
   * @generated from field: bool include_peer_certificate = 4;
   */
  includePeerCertificate: boolean;

  constructor(data?: PartialMessage<ExtAuthz>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.filter.network.ext_authz.v2.ExtAuthz";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExtAuthz;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExtAuthz;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExtAuthz;

  static equals(a: ExtAuthz | PlainMessage<ExtAuthz> | undefined, b: ExtAuthz | PlainMessage<ExtAuthz> | undefined): boolean;
}

