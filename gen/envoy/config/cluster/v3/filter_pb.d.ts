// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/cluster/v3/filter.proto (package envoy.config.cluster.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { Any, BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message envoy.config.cluster.v3.Filter
 */
export declare class Filter extends Message<Filter> {
  /**
   * The name of the filter configuration.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Filter specific configuration which depends on the filter being
   * instantiated. See the supported filters for further documentation.
   * Note that Envoy's :ref:`downstream network
   * filters <config_network_filters>` are not valid upstream filters.
   *
   * @generated from field: google.protobuf.Any typed_config = 2;
   */
  typedConfig?: Any;

  constructor(data?: PartialMessage<Filter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.cluster.v3.Filter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Filter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Filter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Filter;

  static equals(a: Filter | PlainMessage<Filter> | undefined, b: Filter | PlainMessage<Filter> | undefined): boolean;
}

