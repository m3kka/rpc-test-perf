// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/cluster/v3/circuit_breaker.proto (package envoy.config.cluster.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, UInt32Value } from "@bufbuild/protobuf";
import { RoutingPriority } from "../../core/v3/base_pb.js";
import { Percent } from "../../../type/v3/percent_pb.js";

/**
 * :ref:`Circuit breaking<arch_overview_circuit_break>` settings can be
 * specified individually for each defined priority.
 *
 * @generated from message envoy.config.cluster.v3.CircuitBreakers
 */
export const CircuitBreakers = proto3.makeMessageType(
  "envoy.config.cluster.v3.CircuitBreakers",
  () => [
    { no: 1, name: "thresholds", kind: "message", T: CircuitBreakers_Thresholds, repeated: true },
    { no: 2, name: "per_host_thresholds", kind: "message", T: CircuitBreakers_Thresholds, repeated: true },
  ],
);

/**
 * A Thresholds defines CircuitBreaker settings for a
 * :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`.
 * [#next-free-field: 9]
 *
 * @generated from message envoy.config.cluster.v3.CircuitBreakers.Thresholds
 */
export const CircuitBreakers_Thresholds = proto3.makeMessageType(
  "envoy.config.cluster.v3.CircuitBreakers.Thresholds",
  () => [
    { no: 1, name: "priority", kind: "enum", T: proto3.getEnumType(RoutingPriority) },
    { no: 2, name: "max_connections", kind: "message", T: UInt32Value },
    { no: 3, name: "max_pending_requests", kind: "message", T: UInt32Value },
    { no: 4, name: "max_requests", kind: "message", T: UInt32Value },
    { no: 5, name: "max_retries", kind: "message", T: UInt32Value },
    { no: 8, name: "retry_budget", kind: "message", T: CircuitBreakers_Thresholds_RetryBudget },
    { no: 6, name: "track_remaining", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "max_connection_pools", kind: "message", T: UInt32Value },
  ],
  {localName: "CircuitBreakers_Thresholds"},
);

/**
 * @generated from message envoy.config.cluster.v3.CircuitBreakers.Thresholds.RetryBudget
 */
export const CircuitBreakers_Thresholds_RetryBudget = proto3.makeMessageType(
  "envoy.config.cluster.v3.CircuitBreakers.Thresholds.RetryBudget",
  () => [
    { no: 1, name: "budget_percent", kind: "message", T: Percent },
    { no: 2, name: "min_retry_concurrency", kind: "message", T: UInt32Value },
  ],
  {localName: "CircuitBreakers_Thresholds_RetryBudget"},
);

