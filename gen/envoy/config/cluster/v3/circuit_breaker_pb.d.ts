// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/cluster/v3/circuit_breaker.proto (package envoy.config.cluster.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { RoutingPriority } from "../../core/v3/base_pb.js";
import type { Percent } from "../../../type/v3/percent_pb.js";

/**
 * :ref:`Circuit breaking<arch_overview_circuit_break>` settings can be
 * specified individually for each defined priority.
 *
 * @generated from message envoy.config.cluster.v3.CircuitBreakers
 */
export declare class CircuitBreakers extends Message<CircuitBreakers> {
  /**
   * If multiple :ref:`Thresholds<envoy_v3_api_msg_config.cluster.v3.CircuitBreakers.Thresholds>`
   * are defined with the same :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`,
   * the first one in the list is used. If no Thresholds is defined for a given
   * :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`, the default values
   * are used.
   *
   * @generated from field: repeated envoy.config.cluster.v3.CircuitBreakers.Thresholds thresholds = 1;
   */
  thresholds: CircuitBreakers_Thresholds[];

  /**
   * Optional per-host limits which apply to each individual host in a cluster.
   *
   * .. note::
   *  currently only the :ref:`max_connections
   *  <envoy_v3_api_field_config.cluster.v3.CircuitBreakers.Thresholds.max_connections>` field is supported for per-host limits.
   *
   * If multiple per-host :ref:`Thresholds<envoy_v3_api_msg_config.cluster.v3.CircuitBreakers.Thresholds>`
   * are defined with the same :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`,
   * the first one in the list is used. If no per-host Thresholds are defined for a given
   * :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`,
   * the cluster will not have per-host limits.
   *
   * @generated from field: repeated envoy.config.cluster.v3.CircuitBreakers.Thresholds per_host_thresholds = 2;
   */
  perHostThresholds: CircuitBreakers_Thresholds[];

  constructor(data?: PartialMessage<CircuitBreakers>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.cluster.v3.CircuitBreakers";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CircuitBreakers;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CircuitBreakers;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CircuitBreakers;

  static equals(a: CircuitBreakers | PlainMessage<CircuitBreakers> | undefined, b: CircuitBreakers | PlainMessage<CircuitBreakers> | undefined): boolean;
}

/**
 * A Thresholds defines CircuitBreaker settings for a
 * :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`.
 * [#next-free-field: 9]
 *
 * @generated from message envoy.config.cluster.v3.CircuitBreakers.Thresholds
 */
export declare class CircuitBreakers_Thresholds extends Message<CircuitBreakers_Thresholds> {
  /**
   * The :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`
   * the specified CircuitBreaker settings apply to.
   *
   * @generated from field: envoy.config.core.v3.RoutingPriority priority = 1;
   */
  priority: RoutingPriority;

  /**
   * The maximum number of connections that Envoy will make to the upstream
   * cluster. If not specified, the default is 1024.
   *
   * @generated from field: google.protobuf.UInt32Value max_connections = 2;
   */
  maxConnections?: number;

  /**
   * The maximum number of pending requests that Envoy will allow to the
   * upstream cluster. If not specified, the default is 1024.
   * This limit is applied as a connection limit for non-HTTP traffic.
   *
   * @generated from field: google.protobuf.UInt32Value max_pending_requests = 3;
   */
  maxPendingRequests?: number;

  /**
   * The maximum number of parallel requests that Envoy will make to the
   * upstream cluster. If not specified, the default is 1024.
   * This limit does not apply to non-HTTP traffic.
   *
   * @generated from field: google.protobuf.UInt32Value max_requests = 4;
   */
  maxRequests?: number;

  /**
   * The maximum number of parallel retries that Envoy will allow to the
   * upstream cluster. If not specified, the default is 3.
   *
   * @generated from field: google.protobuf.UInt32Value max_retries = 5;
   */
  maxRetries?: number;

  /**
   * Specifies a limit on concurrent retries in relation to the number of active requests. This
   * parameter is optional.
   *
   * .. note::
   *
   *    If this field is set, the retry budget will override any configured retry circuit
   *    breaker.
   *
   * @generated from field: envoy.config.cluster.v3.CircuitBreakers.Thresholds.RetryBudget retry_budget = 8;
   */
  retryBudget?: CircuitBreakers_Thresholds_RetryBudget;

  /**
   * If track_remaining is true, then stats will be published that expose
   * the number of resources remaining until the circuit breakers open. If
   * not specified, the default is false.
   *
   * .. note::
   *
   *    If a retry budget is used in lieu of the max_retries circuit breaker,
   *    the remaining retry resources remaining will not be tracked.
   *
   * @generated from field: bool track_remaining = 6;
   */
  trackRemaining: boolean;

  /**
   * The maximum number of connection pools per cluster that Envoy will concurrently support at
   * once. If not specified, the default is unlimited. Set this for clusters which create a
   * large number of connection pools. See
   * :ref:`Circuit Breaking <arch_overview_circuit_break_cluster_maximum_connection_pools>` for
   * more details.
   *
   * @generated from field: google.protobuf.UInt32Value max_connection_pools = 7;
   */
  maxConnectionPools?: number;

  constructor(data?: PartialMessage<CircuitBreakers_Thresholds>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.cluster.v3.CircuitBreakers.Thresholds";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CircuitBreakers_Thresholds;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CircuitBreakers_Thresholds;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CircuitBreakers_Thresholds;

  static equals(a: CircuitBreakers_Thresholds | PlainMessage<CircuitBreakers_Thresholds> | undefined, b: CircuitBreakers_Thresholds | PlainMessage<CircuitBreakers_Thresholds> | undefined): boolean;
}

/**
 * @generated from message envoy.config.cluster.v3.CircuitBreakers.Thresholds.RetryBudget
 */
export declare class CircuitBreakers_Thresholds_RetryBudget extends Message<CircuitBreakers_Thresholds_RetryBudget> {
  /**
   * Specifies the limit on concurrent retries as a percentage of the sum of active requests and
   * active pending requests. For example, if there are 100 active requests and the
   * budget_percent is set to 25, there may be 25 active retries.
   *
   * This parameter is optional. Defaults to 20%.
   *
   * @generated from field: envoy.type.v3.Percent budget_percent = 1;
   */
  budgetPercent?: Percent;

  /**
   * Specifies the minimum retry concurrency allowed for the retry budget. The limit on the
   * number of active retries may never go below this number.
   *
   * This parameter is optional. Defaults to 3.
   *
   * @generated from field: google.protobuf.UInt32Value min_retry_concurrency = 2;
   */
  minRetryConcurrency?: number;

  constructor(data?: PartialMessage<CircuitBreakers_Thresholds_RetryBudget>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.cluster.v3.CircuitBreakers.Thresholds.RetryBudget";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CircuitBreakers_Thresholds_RetryBudget;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CircuitBreakers_Thresholds_RetryBudget;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CircuitBreakers_Thresholds_RetryBudget;

  static equals(a: CircuitBreakers_Thresholds_RetryBudget | PlainMessage<CircuitBreakers_Thresholds_RetryBudget> | undefined, b: CircuitBreakers_Thresholds_RetryBudget | PlainMessage<CircuitBreakers_Thresholds_RetryBudget> | undefined): boolean;
}

