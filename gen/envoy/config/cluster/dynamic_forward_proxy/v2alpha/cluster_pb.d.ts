// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/cluster/dynamic_forward_proxy/v2alpha/cluster.proto (package envoy.config.cluster.dynamic_forward_proxy.v2alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { DnsCacheConfig } from "../../../common/dynamic_forward_proxy/v2alpha/dns_cache_pb.js";

/**
 * Configuration for the dynamic forward proxy cluster. See the :ref:`architecture overview
 * <arch_overview_http_dynamic_forward_proxy>` for more information.
 * [#extension: envoy.clusters.dynamic_forward_proxy]
 *
 * @generated from message envoy.config.cluster.dynamic_forward_proxy.v2alpha.ClusterConfig
 */
export declare class ClusterConfig extends Message<ClusterConfig> {
  /**
   * The DNS cache configuration that the cluster will attach to. Note this configuration must
   * match that of associated :ref:`dynamic forward proxy HTTP filter configuration
   * <envoy_api_field_config.filter.http.dynamic_forward_proxy.v2alpha.FilterConfig.dns_cache_config>`.
   *
   * @generated from field: envoy.config.common.dynamic_forward_proxy.v2alpha.DnsCacheConfig dns_cache_config = 1;
   */
  dnsCacheConfig?: DnsCacheConfig;

  constructor(data?: PartialMessage<ClusterConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.cluster.dynamic_forward_proxy.v2alpha.ClusterConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterConfig;

  static equals(a: ClusterConfig | PlainMessage<ClusterConfig> | undefined, b: ClusterConfig | PlainMessage<ClusterConfig> | undefined): boolean;
}

