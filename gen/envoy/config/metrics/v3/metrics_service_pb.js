// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/metrics/v3/metrics_service.proto (package envoy.config.metrics.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BoolValue, proto3 } from "@bufbuild/protobuf";
import { GrpcService } from "../../core/v3/grpc_service_pb.js";
import { ApiVersion } from "../../core/v3/config_source_pb.js";

/**
 * HistogramEmitMode is used to configure which metric types should be emitted for histograms.
 *
 * @generated from enum envoy.config.metrics.v3.HistogramEmitMode
 */
export const HistogramEmitMode = proto3.makeEnum(
  "envoy.config.metrics.v3.HistogramEmitMode",
  [
    {no: 0, name: "SUMMARY_AND_HISTOGRAM"},
    {no: 1, name: "SUMMARY"},
    {no: 2, name: "HISTOGRAM"},
  ],
);

/**
 * Metrics Service is configured as a built-in ``envoy.stat_sinks.metrics_service`` :ref:`StatsSink
 * <envoy_v3_api_msg_config.metrics.v3.StatsSink>`. This opaque configuration will be used to create
 * Metrics Service.
 *
 * Example:
 *
 * .. code-block:: yaml
 *
 *     stats_sinks:
 *       - name: envoy.stat_sinks.metrics_service
 *         typed_config:
 *           "@type": type.googleapis.com/envoy.config.metrics.v3.MetricsServiceConfig
 *           transport_api_version: V3
 *
 * [#extension: envoy.stat_sinks.metrics_service]
 * [#next-free-field: 6]
 *
 * @generated from message envoy.config.metrics.v3.MetricsServiceConfig
 */
export const MetricsServiceConfig = proto3.makeMessageType(
  "envoy.config.metrics.v3.MetricsServiceConfig",
  () => [
    { no: 1, name: "grpc_service", kind: "message", T: GrpcService },
    { no: 3, name: "transport_api_version", kind: "enum", T: proto3.getEnumType(ApiVersion) },
    { no: 2, name: "report_counters_as_deltas", kind: "message", T: BoolValue },
    { no: 4, name: "emit_tags_as_labels", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "histogram_emit_mode", kind: "enum", T: proto3.getEnumType(HistogramEmitMode) },
  ],
);

