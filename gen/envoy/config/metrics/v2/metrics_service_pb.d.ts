// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/metrics/v2/metrics_service.proto (package envoy.config.metrics.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { GrpcService } from "../../../api/v2/core/grpc_service_pb.js";

/**
 * Metrics Service is configured as a built-in *envoy.stat_sinks.metrics_service* :ref:`StatsSink
 * <envoy_api_msg_config.metrics.v2.StatsSink>`. This opaque configuration will be used to create
 * Metrics Service.
 * [#extension: envoy.stat_sinks.metrics_service]
 *
 * @generated from message envoy.config.metrics.v2.MetricsServiceConfig
 */
export declare class MetricsServiceConfig extends Message<MetricsServiceConfig> {
  /**
   * The upstream gRPC cluster that hosts the metrics service.
   *
   * @generated from field: envoy.api.v2.core.GrpcService grpc_service = 1;
   */
  grpcService?: GrpcService;

  constructor(data?: PartialMessage<MetricsServiceConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.metrics.v2.MetricsServiceConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MetricsServiceConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MetricsServiceConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MetricsServiceConfig;

  static equals(a: MetricsServiceConfig | PlainMessage<MetricsServiceConfig> | undefined, b: MetricsServiceConfig | PlainMessage<MetricsServiceConfig> | undefined): boolean;
}

