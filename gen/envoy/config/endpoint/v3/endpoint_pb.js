// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/endpoint/v3/endpoint.proto (package envoy.config.endpoint.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3, UInt32Value } from "@bufbuild/protobuf";
import { Endpoint, LocalityLbEndpoints } from "./endpoint_components_pb.js";
import { FractionalPercent } from "../../../type/v3/percent_pb.js";

/**
 * Each route from RDS will map to a single cluster or traffic split across
 * clusters using weights expressed in the RDS WeightedCluster.
 *
 * With EDS, each cluster is treated independently from a LB perspective, with
 * LB taking place between the Localities within a cluster and at a finer
 * granularity between the hosts within a locality. The percentage of traffic
 * for each endpoint is determined by both its load_balancing_weight, and the
 * load_balancing_weight of its locality. First, a locality will be selected,
 * then an endpoint within that locality will be chose based on its weight.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.config.endpoint.v3.ClusterLoadAssignment
 */
export const ClusterLoadAssignment = proto3.makeMessageType(
  "envoy.config.endpoint.v3.ClusterLoadAssignment",
  () => [
    { no: 1, name: "cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "endpoints", kind: "message", T: LocalityLbEndpoints, repeated: true },
    { no: 5, name: "named_endpoints", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Endpoint} },
    { no: 4, name: "policy", kind: "message", T: ClusterLoadAssignment_Policy },
  ],
);

/**
 * Load balancing policy settings.
 * [#next-free-field: 7]
 *
 * @generated from message envoy.config.endpoint.v3.ClusterLoadAssignment.Policy
 */
export const ClusterLoadAssignment_Policy = proto3.makeMessageType(
  "envoy.config.endpoint.v3.ClusterLoadAssignment.Policy",
  () => [
    { no: 2, name: "drop_overloads", kind: "message", T: ClusterLoadAssignment_Policy_DropOverload, repeated: true },
    { no: 3, name: "overprovisioning_factor", kind: "message", T: UInt32Value },
    { no: 4, name: "endpoint_stale_after", kind: "message", T: Duration },
    { no: 6, name: "weighted_priority_health", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "ClusterLoadAssignment_Policy"},
);

/**
 * [#not-implemented-hide:]
 *
 * @generated from message envoy.config.endpoint.v3.ClusterLoadAssignment.Policy.DropOverload
 */
export const ClusterLoadAssignment_Policy_DropOverload = proto3.makeMessageType(
  "envoy.config.endpoint.v3.ClusterLoadAssignment.Policy.DropOverload",
  () => [
    { no: 1, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "drop_percentage", kind: "message", T: FractionalPercent },
  ],
  {localName: "ClusterLoadAssignment_Policy_DropOverload"},
);

