// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/endpoint/v3/endpoint_components.proto (package envoy.config.endpoint.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, UInt32Value } from "@bufbuild/protobuf";
import { Address } from "../../core/v3/address_pb.js";
import { HealthStatus } from "../../core/v3/health_check_pb.js";
import { Locality, Metadata } from "../../core/v3/base_pb.js";
import { ConfigSource } from "../../core/v3/config_source_pb.js";

/**
 * Upstream host identifier.
 *
 * @generated from message envoy.config.endpoint.v3.Endpoint
 */
export const Endpoint = proto3.makeMessageType(
  "envoy.config.endpoint.v3.Endpoint",
  () => [
    { no: 1, name: "address", kind: "message", T: Address },
    { no: 2, name: "health_check_config", kind: "message", T: Endpoint_HealthCheckConfig },
    { no: 3, name: "hostname", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "additional_addresses", kind: "message", T: Endpoint_AdditionalAddress, repeated: true },
  ],
);

/**
 * The optional health check configuration.
 *
 * @generated from message envoy.config.endpoint.v3.Endpoint.HealthCheckConfig
 */
export const Endpoint_HealthCheckConfig = proto3.makeMessageType(
  "envoy.config.endpoint.v3.Endpoint.HealthCheckConfig",
  () => [
    { no: 1, name: "port_value", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "hostname", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "address", kind: "message", T: Address },
    { no: 4, name: "disable_active_health_check", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "Endpoint_HealthCheckConfig"},
);

/**
 * @generated from message envoy.config.endpoint.v3.Endpoint.AdditionalAddress
 */
export const Endpoint_AdditionalAddress = proto3.makeMessageType(
  "envoy.config.endpoint.v3.Endpoint.AdditionalAddress",
  () => [
    { no: 1, name: "address", kind: "message", T: Address },
  ],
  {localName: "Endpoint_AdditionalAddress"},
);

/**
 * An Endpoint that Envoy can route traffic to.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.config.endpoint.v3.LbEndpoint
 */
export const LbEndpoint = proto3.makeMessageType(
  "envoy.config.endpoint.v3.LbEndpoint",
  () => [
    { no: 1, name: "endpoint", kind: "message", T: Endpoint, oneof: "host_identifier" },
    { no: 5, name: "endpoint_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "host_identifier" },
    { no: 2, name: "health_status", kind: "enum", T: proto3.getEnumType(HealthStatus) },
    { no: 3, name: "metadata", kind: "message", T: Metadata },
    { no: 4, name: "load_balancing_weight", kind: "message", T: UInt32Value },
  ],
);

/**
 * [#not-implemented-hide:]
 * A configuration for a LEDS collection.
 *
 * @generated from message envoy.config.endpoint.v3.LedsClusterLocalityConfig
 */
export const LedsClusterLocalityConfig = proto3.makeMessageType(
  "envoy.config.endpoint.v3.LedsClusterLocalityConfig",
  () => [
    { no: 1, name: "leds_config", kind: "message", T: ConfigSource },
    { no: 2, name: "leds_collection_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * A group of endpoints belonging to a Locality.
 * One can have multiple LocalityLbEndpoints for a locality, but only if
 * they have different priorities.
 * [#next-free-field: 9]
 *
 * @generated from message envoy.config.endpoint.v3.LocalityLbEndpoints
 */
export const LocalityLbEndpoints = proto3.makeMessageType(
  "envoy.config.endpoint.v3.LocalityLbEndpoints",
  () => [
    { no: 1, name: "locality", kind: "message", T: Locality },
    { no: 2, name: "lb_endpoints", kind: "message", T: LbEndpoint, repeated: true },
    { no: 7, name: "load_balancer_endpoints", kind: "message", T: LocalityLbEndpoints_LbEndpointList, oneof: "lb_config" },
    { no: 8, name: "leds_cluster_locality_config", kind: "message", T: LedsClusterLocalityConfig, oneof: "lb_config" },
    { no: 3, name: "load_balancing_weight", kind: "message", T: UInt32Value },
    { no: 5, name: "priority", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "proximity", kind: "message", T: UInt32Value },
  ],
);

/**
 * [#not-implemented-hide:]
 * A list of endpoints of a specific locality.
 *
 * @generated from message envoy.config.endpoint.v3.LocalityLbEndpoints.LbEndpointList
 */
export const LocalityLbEndpoints_LbEndpointList = proto3.makeMessageType(
  "envoy.config.endpoint.v3.LocalityLbEndpoints.LbEndpointList",
  () => [
    { no: 1, name: "lb_endpoints", kind: "message", T: LbEndpoint, repeated: true },
  ],
  {localName: "LocalityLbEndpoints_LbEndpointList"},
);

