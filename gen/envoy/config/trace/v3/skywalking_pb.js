// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/trace/v3/skywalking.proto (package envoy.config.trace.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, UInt32Value } from "@bufbuild/protobuf";
import { GrpcService } from "../../core/v3/grpc_service_pb.js";

/**
 * Configuration for the SkyWalking tracer. Please note that if SkyWalking tracer is used as the
 * provider of http tracer, then
 * :ref:`start_child_span <envoy_v3_api_field_extensions.filters.http.router.v3.Router.start_child_span>`
 * in the router must be set to true to get the correct topology and tracing data. Moreover, SkyWalking
 * Tracer does not support SkyWalking extension header (``sw8-x``) temporarily.
 * [#extension: envoy.tracers.skywalking]
 *
 * @generated from message envoy.config.trace.v3.SkyWalkingConfig
 */
export const SkyWalkingConfig = proto3.makeMessageType(
  "envoy.config.trace.v3.SkyWalkingConfig",
  () => [
    { no: 1, name: "grpc_service", kind: "message", T: GrpcService },
    { no: 2, name: "client_config", kind: "message", T: ClientConfig },
  ],
);

/**
 * Client config for SkyWalking tracer.
 *
 * @generated from message envoy.config.trace.v3.ClientConfig
 */
export const ClientConfig = proto3.makeMessageType(
  "envoy.config.trace.v3.ClientConfig",
  () => [
    { no: 1, name: "service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "instance_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "backend_token", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "backend_token_specifier" },
    { no: 4, name: "max_cache_size", kind: "message", T: UInt32Value },
  ],
);

