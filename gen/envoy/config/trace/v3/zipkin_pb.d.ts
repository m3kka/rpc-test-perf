// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/trace/v3/zipkin.proto (package envoy.config.trace.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Configuration for the Zipkin tracer.
 * [#extension: envoy.tracers.zipkin]
 * [#next-free-field: 8]
 *
 * @generated from message envoy.config.trace.v3.ZipkinConfig
 */
export declare class ZipkinConfig extends Message<ZipkinConfig> {
  /**
   * The cluster manager cluster that hosts the Zipkin collectors.
   *
   * @generated from field: string collector_cluster = 1;
   */
  collectorCluster: string;

  /**
   * The API endpoint of the Zipkin service where the spans will be sent. When
   * using a standard Zipkin installation.
   *
   * @generated from field: string collector_endpoint = 2;
   */
  collectorEndpoint: string;

  /**
   * Determines whether a 128bit trace id will be used when creating a new
   * trace instance. The default value is false, which will result in a 64 bit trace id being used.
   *
   * @generated from field: bool trace_id_128bit = 3;
   */
  traceId128bit: boolean;

  /**
   * Determines whether client and server spans will share the same span context.
   * The default value is true.
   *
   * @generated from field: google.protobuf.BoolValue shared_span_context = 4;
   */
  sharedSpanContext?: boolean;

  /**
   * Determines the selected collector endpoint version.
   *
   * @generated from field: envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;
   */
  collectorEndpointVersion: ZipkinConfig_CollectorEndpointVersion;

  /**
   * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
   * that require a specific hostname. Defaults to :ref:`collector_cluster <envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster>` above.
   *
   * @generated from field: string collector_hostname = 6;
   */
  collectorHostname: string;

  /**
   * If this is set to true, then Envoy will be treated as an independent hop in trace chain. A complete span pair will be created for a single
   * request. Server span will be created for the downstream request and client span will be created for the related upstream request.
   * This should be set to true in the following cases:
   *
   * * The Envoy Proxy is used as gateway or ingress.
   * * The Envoy Proxy is used as sidecar but inbound traffic capturing or outbound traffic capturing is disabled.
   * * Any case that the `start_child_span of router <envoy_v3_api_field_extensions.filters.http.router.v3.Router.start_child_span>` is set to true.
   *
   * .. attention::
   *
   *   If this is set to true, then the
   *   :ref:`start_child_span of router <envoy_v3_api_field_extensions.filters.http.router.v3.Router.start_child_span>`
   *   SHOULD be set to true also to ensure the correctness of trace chain.
   *
   * @generated from field: bool split_spans_for_request = 7;
   */
  splitSpansForRequest: boolean;

  constructor(data?: PartialMessage<ZipkinConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.trace.v3.ZipkinConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ZipkinConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ZipkinConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ZipkinConfig;

  static equals(a: ZipkinConfig | PlainMessage<ZipkinConfig> | undefined, b: ZipkinConfig | PlainMessage<ZipkinConfig> | undefined): boolean;
}

/**
 * Available Zipkin collector endpoint versions.
 *
 * @generated from enum envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion
 */
export declare enum ZipkinConfig_CollectorEndpointVersion {
  /**
   * Zipkin API v1, JSON over HTTP.
   * [#comment: The default implementation of Zipkin client before this field is added was only v1
   * and the way user configure this was by not explicitly specifying the version. Consequently,
   * before this is added, the corresponding Zipkin collector expected to receive v1 payload.
   * Hence the motivation of adding HTTP_JSON_V1 as the default is to avoid a breaking change when
   * user upgrading Envoy with this change. Furthermore, we also immediately deprecate this field,
   * since in Zipkin realm this v1 version is considered to be not preferable anymore.]
   *
   * @generated from enum value: DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE = 0 [deprecated = true];
   * @deprecated
   */
  DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE = 0,

  /**
   * Zipkin API v2, JSON over HTTP.
   *
   * @generated from enum value: HTTP_JSON = 1;
   */
  HTTP_JSON = 1,

  /**
   * Zipkin API v2, protobuf over HTTP.
   *
   * @generated from enum value: HTTP_PROTO = 2;
   */
  HTTP_PROTO = 2,

  /**
   * [#not-implemented-hide:]
   *
   * @generated from enum value: GRPC = 3;
   */
  GRPC = 3,
}

