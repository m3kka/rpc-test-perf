// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/trace/v2/lightstep.proto (package envoy.config.trace.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Configuration for the LightStep tracer.
 * [#extension: envoy.tracers.lightstep]
 *
 * @generated from message envoy.config.trace.v2.LightstepConfig
 */
export declare class LightstepConfig extends Message<LightstepConfig> {
  /**
   * The cluster manager cluster that hosts the LightStep collectors.
   *
   * @generated from field: string collector_cluster = 1;
   */
  collectorCluster: string;

  /**
   * File containing the access token to the `LightStep
   * <https://lightstep.com/>`_ API.
   *
   * @generated from field: string access_token_file = 2;
   */
  accessTokenFile: string;

  /**
   * Propagation modes to use by LightStep's tracer.
   *
   * @generated from field: repeated envoy.config.trace.v2.LightstepConfig.PropagationMode propagation_modes = 3;
   */
  propagationModes: LightstepConfig_PropagationMode[];

  constructor(data?: PartialMessage<LightstepConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.trace.v2.LightstepConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LightstepConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LightstepConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LightstepConfig;

  static equals(a: LightstepConfig | PlainMessage<LightstepConfig> | undefined, b: LightstepConfig | PlainMessage<LightstepConfig> | undefined): boolean;
}

/**
 * Available propagation modes
 *
 * @generated from enum envoy.config.trace.v2.LightstepConfig.PropagationMode
 */
export declare enum LightstepConfig_PropagationMode {
  /**
   * Propagate trace context in the single header x-ot-span-context.
   *
   * @generated from enum value: ENVOY = 0;
   */
  ENVOY = 0,

  /**
   * Propagate trace context using LightStep's native format.
   *
   * @generated from enum value: LIGHTSTEP = 1;
   */
  LIGHTSTEP = 1,

  /**
   * Propagate trace context using the b3 format.
   *
   * @generated from enum value: B3 = 2;
   */
  B3 = 2,

  /**
   * Propagation trace context using the w3 trace-context standard.
   *
   * @generated from enum value: TRACE_CONTEXT = 3;
   */
  TRACE_CONTEXT = 3,
}

