// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/config/trace/v2alpha/xray.proto (package envoy.config.trace.v2alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { SocketAddress } from "../../../api/v2/core/address_pb.js";
import type { DataSource } from "../../../api/v2/core/base_pb.js";

/**
 * @generated from message envoy.config.trace.v2alpha.XRayConfig
 */
export declare class XRayConfig extends Message<XRayConfig> {
  /**
   * The UDP endpoint of the X-Ray Daemon where the spans will be sent.
   * If this value is not set, the default value of 127.0.0.1:2000 will be used.
   *
   * @generated from field: envoy.api.v2.core.SocketAddress daemon_endpoint = 1;
   */
  daemonEndpoint?: SocketAddress;

  /**
   * The name of the X-Ray segment.
   *
   * @generated from field: string segment_name = 2;
   */
  segmentName: string;

  /**
   * The location of a local custom sampling rules JSON file.
   * For an example of the sampling rules see:
   * `X-Ray SDK documentation
   * <https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-go-configuration.html#xray-sdk-go-configuration-sampling>`_
   *
   * @generated from field: envoy.api.v2.core.DataSource sampling_rule_manifest = 3;
   */
  samplingRuleManifest?: DataSource;

  constructor(data?: PartialMessage<XRayConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.config.trace.v2alpha.XRayConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): XRayConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): XRayConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): XRayConfig;

  static equals(a: XRayConfig | PlainMessage<XRayConfig> | undefined, b: XRayConfig | PlainMessage<XRayConfig> | undefined): boolean;
}

