// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/http/stateful_session/header/v3/header.proto (package envoy.extensions.http.stateful_session.header.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * This extension allows the session state to be tracked via request headers.
 *
 * This extension encodes the address of the upstream host selected by the load balancer
 * into a response header with the :ref:`header configuration
 * <envoy_v3_api_msg_extensions.http.stateful_session.header.v3.HeaderBasedSessionState>`.
 * When new requests are incoming, this extension will try to parse the specific upstream host
 * address by header name. If the address parsed from the header corresponds to a valid
 * upstream host, this upstream host will be selected first. See :ref:`stateful session filter
 * <envoy_v3_api_msg_extensions.filters.http.stateful_session.v3.StatefulSession>`.
 *
 * For example, if the header name is set to ``session-header``, envoy will prefer ``1.2.3.4:80``
 * as the upstream host when the request contains the following header:
 *
 * .. code-block:: none
 *
 *     session-header: "MS4yLjMuNDo4MA=="
 *
 * When processing the upstream response, if ``1.2.3.4:80`` is indeed the final choice the extension
 * does nothing. If ``1.2.3.4:80`` is not the final choice, the new selected host will be set to
 * response headers (via the ``session-header`` response header).
 *
 * [#extension: envoy.http.stateful_session.header]
 *
 * @generated from message envoy.extensions.http.stateful_session.header.v3.HeaderBasedSessionState
 */
export declare class HeaderBasedSessionState extends Message<HeaderBasedSessionState> {
  /**
   * The name that will be used to obtain header value from downstream HTTP request or generate
   * new header for downstream.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<HeaderBasedSessionState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.http.stateful_session.header.v3.HeaderBasedSessionState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HeaderBasedSessionState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HeaderBasedSessionState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HeaderBasedSessionState;

  static equals(a: HeaderBasedSessionState | PlainMessage<HeaderBasedSessionState> | undefined, b: HeaderBasedSessionState | PlainMessage<HeaderBasedSessionState> | undefined): boolean;
}

