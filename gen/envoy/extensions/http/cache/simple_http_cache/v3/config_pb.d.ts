// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/http/cache/simple_http_cache/v3/config.proto (package envoy.extensions.http.cache.simple_http_cache.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * [#extension: envoy.extensions.http.cache.simple]
 *
 * @generated from message envoy.extensions.http.cache.simple_http_cache.v3.SimpleHttpCacheConfig
 */
export declare class SimpleHttpCacheConfig extends Message<SimpleHttpCacheConfig> {
  constructor(data?: PartialMessage<SimpleHttpCacheConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.http.cache.simple_http_cache.v3.SimpleHttpCacheConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SimpleHttpCacheConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SimpleHttpCacheConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SimpleHttpCacheConfig;

  static equals(a: SimpleHttpCacheConfig | PlainMessage<SimpleHttpCacheConfig> | undefined, b: SimpleHttpCacheConfig | PlainMessage<SimpleHttpCacheConfig> | undefined): boolean;
}

