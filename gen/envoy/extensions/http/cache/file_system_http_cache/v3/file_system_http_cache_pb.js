// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/http/cache/file_system_http_cache/v3/file_system_http_cache.proto (package envoy.extensions.http.cache.file_system_http_cache.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3, UInt64Value } from "@bufbuild/protobuf";
import { AsyncFileManagerConfig } from "../../../../common/async_files/v3/async_file_manager_pb.js";

/**
 * Configuration for a cache implementation that caches in the local file system.
 *
 * By default this cache uses a least-recently-used eviction strategy.
 *
 * For implementation details, see `DESIGN.md <https://github.com/envoyproxy/envoy/blob/main/source/extensions/http/cache/file_system_http_cache/DESIGN.md>`_.
 * [#next-free-field: 11]
 *
 * @generated from message envoy.extensions.http.cache.file_system_http_cache.v3.FileSystemHttpCacheConfig
 */
export const FileSystemHttpCacheConfig = proto3.makeMessageType(
  "envoy.extensions.http.cache.file_system_http_cache.v3.FileSystemHttpCacheConfig",
  () => [
    { no: 1, name: "manager_config", kind: "message", T: AsyncFileManagerConfig },
    { no: 2, name: "cache_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "max_cache_size_bytes", kind: "message", T: UInt64Value },
    { no: 4, name: "max_individual_cache_entry_size_bytes", kind: "message", T: UInt64Value },
    { no: 5, name: "max_cache_entry_count", kind: "message", T: UInt64Value },
    { no: 6, name: "cache_subdivisions", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "evict_fraction", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 8, name: "max_eviction_period", kind: "message", T: Duration },
    { no: 9, name: "min_eviction_period", kind: "message", T: Duration },
    { no: 10, name: "create_cache_path", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

