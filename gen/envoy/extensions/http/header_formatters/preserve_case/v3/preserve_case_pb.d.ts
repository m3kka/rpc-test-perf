// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/http/header_formatters/preserve_case/v3/preserve_case.proto (package envoy.extensions.http.header_formatters.preserve_case.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Configuration for the preserve case header formatter.
 * See the :ref:`header casing <config_http_conn_man_header_casing>` configuration guide for more
 * information.
 *
 * @generated from message envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig
 */
export declare class PreserveCaseFormatterConfig extends Message<PreserveCaseFormatterConfig> {
  /**
   * Allows forwarding reason phrase text.
   * This is off by default, and a standard reason phrase is used for a corresponding HTTP response code.
   *
   * @generated from field: bool forward_reason_phrase = 1;
   */
  forwardReasonPhrase: boolean;

  /**
   * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
   * The default type is DEFAULT, use LowerCase on Envoy headers.
   *
   * @generated from field: envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2;
   */
  formatterTypeOnEnvoyHeaders: PreserveCaseFormatterConfig_FormatterTypeOnEnvoyHeaders;

  constructor(data?: PartialMessage<PreserveCaseFormatterConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreserveCaseFormatterConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreserveCaseFormatterConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreserveCaseFormatterConfig;

  static equals(a: PreserveCaseFormatterConfig | PlainMessage<PreserveCaseFormatterConfig> | undefined, b: PreserveCaseFormatterConfig | PlainMessage<PreserveCaseFormatterConfig> | undefined): boolean;
}

/**
 * @generated from enum envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders
 */
export declare enum PreserveCaseFormatterConfig_FormatterTypeOnEnvoyHeaders {
  /**
   * Use LowerCase on Envoy added headers.
   *
   * @generated from enum value: DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * Use ProperCaseHeaderKeyFormatter on Envoy added headers that upper cases the first character
   * in each word. The first character as well as any alpha character following a special
   * character is upper cased.
   *
   * @generated from enum value: PROPER_CASE = 1;
   */
  PROPER_CASE = 1,
}

