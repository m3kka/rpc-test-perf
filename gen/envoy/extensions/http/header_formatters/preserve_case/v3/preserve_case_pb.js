// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/http/header_formatters/preserve_case/v3/preserve_case.proto (package envoy.extensions.http.header_formatters.preserve_case.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * Configuration for the preserve case header formatter.
 * See the :ref:`header casing <config_http_conn_man_header_casing>` configuration guide for more
 * information.
 *
 * @generated from message envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig
 */
export const PreserveCaseFormatterConfig = proto3.makeMessageType(
  "envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig",
  () => [
    { no: 1, name: "forward_reason_phrase", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "formatter_type_on_envoy_headers", kind: "enum", T: proto3.getEnumType(PreserveCaseFormatterConfig_FormatterTypeOnEnvoyHeaders) },
  ],
);

/**
 * @generated from enum envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders
 */
export const PreserveCaseFormatterConfig_FormatterTypeOnEnvoyHeaders = proto3.makeEnum(
  "envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders",
  [
    {no: 0, name: "DEFAULT"},
    {no: 1, name: "PROPER_CASE"},
  ],
);

