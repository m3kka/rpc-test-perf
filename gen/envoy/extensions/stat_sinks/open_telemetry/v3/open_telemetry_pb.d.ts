// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/stat_sinks/open_telemetry/v3/open_telemetry.proto (package envoy.extensions.stat_sinks.open_telemetry.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { GrpcService } from "../../../../config/core/v3/grpc_service_pb.js";

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.stat_sinks.open_telemetry.v3.SinkConfig
 */
export declare class SinkConfig extends Message<SinkConfig> {
  /**
   * @generated from oneof envoy.extensions.stat_sinks.open_telemetry.v3.SinkConfig.protocol_specifier
   */
  protocolSpecifier: {
    /**
     * The upstream gRPC cluster that implements the OTLP/gRPC collector.
     *
     * @generated from field: envoy.config.core.v3.GrpcService grpc_service = 1;
     */
    value: GrpcService;
    case: "grpcService";
  } | { case: undefined; value?: undefined };

  /**
   * If set to true, counters will be emitted as deltas, and the OTLP message will have
   * ``AGGREGATION_TEMPORALITY_DELTA`` set as AggregationTemporality.
   *
   * @generated from field: bool report_counters_as_deltas = 2;
   */
  reportCountersAsDeltas: boolean;

  /**
   * If set to true, histograms will be emitted as deltas, and the OTLP message will have
   * ``AGGREGATION_TEMPORALITY_DELTA`` set as AggregationTemporality.
   *
   * @generated from field: bool report_histograms_as_deltas = 3;
   */
  reportHistogramsAsDeltas: boolean;

  /**
   * If set to true, metrics will have their tags emitted as OTLP attributes, which may
   * contain values used by the tag extractor or additional tags added during stats creation.
   * Otherwise, no attributes will be associated with the export message. Default value is true.
   *
   * @generated from field: google.protobuf.BoolValue emit_tags_as_attributes = 4;
   */
  emitTagsAsAttributes?: boolean;

  /**
   * If set to true, metric names will be represented as the tag extracted name instead
   * of the full metric name. Default value is true.
   *
   * @generated from field: google.protobuf.BoolValue use_tag_extracted_name = 5;
   */
  useTagExtractedName?: boolean;

  constructor(data?: PartialMessage<SinkConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.stat_sinks.open_telemetry.v3.SinkConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SinkConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SinkConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SinkConfig;

  static equals(a: SinkConfig | PlainMessage<SinkConfig> | undefined, b: SinkConfig | PlainMessage<SinkConfig> | undefined): boolean;
}

