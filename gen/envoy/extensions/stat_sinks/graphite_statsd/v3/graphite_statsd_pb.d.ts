// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/stat_sinks/graphite_statsd/v3/graphite_statsd.proto (package envoy.extensions.stat_sinks.graphite_statsd.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Address } from "../../../../config/core/v3/address_pb.js";

/**
 * @generated from message envoy.extensions.stat_sinks.graphite_statsd.v3.GraphiteStatsdSink
 */
export declare class GraphiteStatsdSink extends Message<GraphiteStatsdSink> {
  /**
   * @generated from oneof envoy.extensions.stat_sinks.graphite_statsd.v3.GraphiteStatsdSink.statsd_specifier
   */
  statsdSpecifier: {
    /**
     * The UDP address of a running Graphite-compliant listener. If specified,
     * statistics will be flushed to this address.
     *
     * @generated from field: envoy.config.core.v3.Address address = 1;
     */
    value: Address;
    case: "address";
  } | { case: undefined; value?: undefined };

  /**
   * Optional custom metric name prefix. See :ref:`StatsdSink's prefix field
   * <envoy_v3_api_field_config.metrics.v3.StatsdSink.prefix>` for more details.
   *
   * @generated from field: string prefix = 3;
   */
  prefix: string;

  /**
   * Optional max datagram size to use when sending UDP messages. By default Envoy
   * will emit one metric per datagram. By specifying a max-size larger than a single
   * metric, Envoy will emit multiple, new-line separated metrics. The max datagram
   * size should not exceed your network's MTU.
   *
   * Note that this value may not be respected if smaller than a single metric.
   *
   * @generated from field: google.protobuf.UInt64Value max_bytes_per_datagram = 4;
   */
  maxBytesPerDatagram?: bigint;

  constructor(data?: PartialMessage<GraphiteStatsdSink>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.stat_sinks.graphite_statsd.v3.GraphiteStatsdSink";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GraphiteStatsdSink;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GraphiteStatsdSink;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GraphiteStatsdSink;

  static equals(a: GraphiteStatsdSink | PlainMessage<GraphiteStatsdSink> | undefined, b: GraphiteStatsdSink | PlainMessage<GraphiteStatsdSink> | undefined): boolean;
}

