// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/common/async_files/v3/async_file_manager.proto (package envoy.extensions.common.async_files.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Configuration to instantiate or select a singleton ``AsyncFileManager``.
 *
 * @generated from message envoy.extensions.common.async_files.v3.AsyncFileManagerConfig
 */
export declare class AsyncFileManagerConfig extends Message<AsyncFileManagerConfig> {
  /**
   * An optional identifier for the manager. An empty string is a valid identifier
   * for a common, default ``AsyncFileManager``.
   *
   * Reusing the same id with different configurations in the same envoy instance
   * is an error.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from oneof envoy.extensions.common.async_files.v3.AsyncFileManagerConfig.manager_type
   */
  managerType: {
    /**
     * Configuration for a thread-pool based async file manager.
     *
     * @generated from field: envoy.extensions.common.async_files.v3.AsyncFileManagerConfig.ThreadPool thread_pool = 2;
     */
    value: AsyncFileManagerConfig_ThreadPool;
    case: "threadPool";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<AsyncFileManagerConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.common.async_files.v3.AsyncFileManagerConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AsyncFileManagerConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AsyncFileManagerConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AsyncFileManagerConfig;

  static equals(a: AsyncFileManagerConfig | PlainMessage<AsyncFileManagerConfig> | undefined, b: AsyncFileManagerConfig | PlainMessage<AsyncFileManagerConfig> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.common.async_files.v3.AsyncFileManagerConfig.ThreadPool
 */
export declare class AsyncFileManagerConfig_ThreadPool extends Message<AsyncFileManagerConfig_ThreadPool> {
  /**
   * The number of threads to use. If unset or zero, will default to the number
   * of concurrent threads the hardware supports. This default is subject to
   * change if performance analysis suggests it.
   *
   * @generated from field: uint32 thread_count = 1;
   */
  threadCount: number;

  constructor(data?: PartialMessage<AsyncFileManagerConfig_ThreadPool>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.common.async_files.v3.AsyncFileManagerConfig.ThreadPool";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AsyncFileManagerConfig_ThreadPool;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AsyncFileManagerConfig_ThreadPool;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AsyncFileManagerConfig_ThreadPool;

  static equals(a: AsyncFileManagerConfig_ThreadPool | PlainMessage<AsyncFileManagerConfig_ThreadPool> | undefined, b: AsyncFileManagerConfig_ThreadPool | PlainMessage<AsyncFileManagerConfig_ThreadPool> | undefined): boolean;
}

