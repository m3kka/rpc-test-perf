// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/access_loggers/open_telemetry/v3/logs_service.proto (package envoy.extensions.access_loggers.open_telemetry.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { CommonGrpcAccessLogConfig } from "../../grpc/v3/als_pb.js";
import type { AnyValue, KeyValueList } from "../../../../../opentelemetry/proto/common/v1/common_pb.js";

/**
 * Configuration for the built-in ``envoy.access_loggers.open_telemetry``
 * :ref:`AccessLog <envoy_v3_api_msg_config.accesslog.v3.AccessLog>`. This configuration will
 * populate `opentelemetry.proto.collector.v1.logs.ExportLogsServiceRequest.resource_logs <https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/collector/logs/v1/logs_service.proto>`_.
 * In addition, the request start time is set in the dedicated field.
 * [#extension: envoy.access_loggers.open_telemetry]
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.access_loggers.open_telemetry.v3.OpenTelemetryAccessLogConfig
 */
export declare class OpenTelemetryAccessLogConfig extends Message<OpenTelemetryAccessLogConfig> {
  /**
   * [#comment:TODO(itamarkam): add 'filter_state_objects_to_log' to logs.]
   *
   * @generated from field: envoy.extensions.access_loggers.grpc.v3.CommonGrpcAccessLogConfig common_config = 1;
   */
  commonConfig?: CommonGrpcAccessLogConfig;

  /**
   * If specified, Envoy will not generate built-in resource labels
   * like ``log_name``, ``zone_name``, ``cluster_name``, ``node_name``.
   *
   * @generated from field: bool disable_builtin_labels = 5;
   */
  disableBuiltinLabels: boolean;

  /**
   * OpenTelemetry `Resource <https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/logs/v1/logs.proto#L51>`_
   * attributes are filled with Envoy node info.
   * Example: ``resource_attributes { values { key: "region" value { string_value: "cn-north-7" } } }``.
   *
   * @generated from field: opentelemetry.proto.common.v1.KeyValueList resource_attributes = 4;
   */
  resourceAttributes?: KeyValueList;

  /**
   * OpenTelemetry `LogResource <https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/logs/v1/logs.proto>`_
   * fields, following `Envoy access logging formatting <https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage>`_.
   *
   * See 'body' in the LogResource proto for more details.
   * Example: ``body { string_value: "%PROTOCOL%" }``.
   *
   * @generated from field: opentelemetry.proto.common.v1.AnyValue body = 2;
   */
  body?: AnyValue;

  /**
   * See 'attributes' in the LogResource proto for more details.
   * Example: ``attributes { values { key: "user_agent" value { string_value: "%REQ(USER-AGENT)%" } } }``.
   *
   * @generated from field: opentelemetry.proto.common.v1.KeyValueList attributes = 3;
   */
  attributes?: KeyValueList;

  constructor(data?: PartialMessage<OpenTelemetryAccessLogConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.access_loggers.open_telemetry.v3.OpenTelemetryAccessLogConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OpenTelemetryAccessLogConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OpenTelemetryAccessLogConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OpenTelemetryAccessLogConfig;

  static equals(a: OpenTelemetryAccessLogConfig | PlainMessage<OpenTelemetryAccessLogConfig> | undefined, b: OpenTelemetryAccessLogConfig | PlainMessage<OpenTelemetryAccessLogConfig> | undefined): boolean;
}

