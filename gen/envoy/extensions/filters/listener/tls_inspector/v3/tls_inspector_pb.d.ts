// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/listener/tls_inspector/v3/tls_inspector.proto (package envoy.extensions.filters.listener.tls_inspector.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
 */
export declare class TlsInspector extends Message<TlsInspector> {
  /**
   * Populate ``JA3`` fingerprint hash using data from the TLS Client Hello packet. Default is false.
   *
   * @generated from field: google.protobuf.BoolValue enable_ja3_fingerprinting = 1;
   */
  enableJa3Fingerprinting?: boolean;

  /**
   * The size in bytes of the initial buffer requested by the tls_inspector.
   * If the filter needs to read additional bytes from the socket, the
   * filter will double the buffer up to it's default maximum of 64KiB.
   * If this size is not defined, defaults to maximum 64KiB that the
   * tls inspector will consume.
   *
   * @generated from field: google.protobuf.UInt32Value initial_read_buffer_size = 2;
   */
  initialReadBufferSize?: number;

  constructor(data?: PartialMessage<TlsInspector>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TlsInspector;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TlsInspector;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TlsInspector;

  static equals(a: TlsInspector | PlainMessage<TlsInspector> | undefined, b: TlsInspector | PlainMessage<TlsInspector> | undefined): boolean;
}

