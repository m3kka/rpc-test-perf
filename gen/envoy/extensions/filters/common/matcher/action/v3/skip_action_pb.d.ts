// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/common/matcher/action/v3/skip_action.proto (package envoy.extensions.filters.common.matcher.action.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Configuration for the SkipFilter match action. When matching results in this action, the
 * associated filter will be ignored for all filter callbacks (e.g. ``encodeHeaders``, ``encodeData``,
 * etc. for HTTP filters) after the matcher arrives at the match, including the callback that
 * caused the match result. For example, when used with a HTTP filter and the match result was
 * resolved after receiving the HTTP response headers, the HTTP filter will *not* receive the
 * response header callback.
 *
 * As a result, if this match action is resolved before the first filter callback (e.g. HTTP request
 * headers), the filter will be completely skipped.
 *
 * @generated from message envoy.extensions.filters.common.matcher.action.v3.SkipFilter
 */
export declare class SkipFilter extends Message<SkipFilter> {
  constructor(data?: PartialMessage<SkipFilter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.common.matcher.action.v3.SkipFilter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkipFilter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkipFilter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkipFilter;

  static equals(a: SkipFilter | PlainMessage<SkipFilter> | undefined, b: SkipFilter | PlainMessage<SkipFilter> | undefined): boolean;
}

