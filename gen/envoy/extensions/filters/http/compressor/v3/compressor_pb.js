// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/compressor/v3/compressor.proto (package envoy.extensions.filters.http.compressor.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, UInt32Value } from "@bufbuild/protobuf";
import { RuntimeFeatureFlag } from "../../../../../config/core/v3/base_pb.js";
import { TypedExtensionConfig } from "../../../../../config/core/v3/extension_pb.js";

/**
 * [#next-free-field: 10]
 *
 * @generated from message envoy.extensions.filters.http.compressor.v3.Compressor
 */
export const Compressor = proto3.makeMessageType(
  "envoy.extensions.filters.http.compressor.v3.Compressor",
  () => [
    { no: 1, name: "content_length", kind: "message", T: UInt32Value },
    { no: 2, name: "content_type", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "disable_on_etag_header", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "remove_accept_encoding_header", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "runtime_enabled", kind: "message", T: RuntimeFeatureFlag },
    { no: 6, name: "compressor_library", kind: "message", T: TypedExtensionConfig },
    { no: 7, name: "request_direction_config", kind: "message", T: Compressor_RequestDirectionConfig },
    { no: 8, name: "response_direction_config", kind: "message", T: Compressor_ResponseDirectionConfig },
    { no: 9, name: "choose_first", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message envoy.extensions.filters.http.compressor.v3.Compressor.CommonDirectionConfig
 */
export const Compressor_CommonDirectionConfig = proto3.makeMessageType(
  "envoy.extensions.filters.http.compressor.v3.Compressor.CommonDirectionConfig",
  () => [
    { no: 1, name: "enabled", kind: "message", T: RuntimeFeatureFlag },
    { no: 2, name: "min_content_length", kind: "message", T: UInt32Value },
    { no: 3, name: "content_type", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
  {localName: "Compressor_CommonDirectionConfig"},
);

/**
 * Configuration for filter behavior on the request direction.
 *
 * @generated from message envoy.extensions.filters.http.compressor.v3.Compressor.RequestDirectionConfig
 */
export const Compressor_RequestDirectionConfig = proto3.makeMessageType(
  "envoy.extensions.filters.http.compressor.v3.Compressor.RequestDirectionConfig",
  () => [
    { no: 1, name: "common_config", kind: "message", T: Compressor_CommonDirectionConfig },
  ],
  {localName: "Compressor_RequestDirectionConfig"},
);

/**
 * Configuration for filter behavior on the response direction.
 *
 * @generated from message envoy.extensions.filters.http.compressor.v3.Compressor.ResponseDirectionConfig
 */
export const Compressor_ResponseDirectionConfig = proto3.makeMessageType(
  "envoy.extensions.filters.http.compressor.v3.Compressor.ResponseDirectionConfig",
  () => [
    { no: 1, name: "common_config", kind: "message", T: Compressor_CommonDirectionConfig },
    { no: 2, name: "disable_on_etag_header", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "remove_accept_encoding_header", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "Compressor_ResponseDirectionConfig"},
);

/**
 * Per-route overrides of `ResponseDirectionConfig`. Anything added here should be optional,
 * to allow overriding arbitrary subsets of configuration. Omitted fields must have no affect.
 *
 * @generated from message envoy.extensions.filters.http.compressor.v3.ResponseDirectionOverrides
 */
export const ResponseDirectionOverrides = proto3.makeMessageType(
  "envoy.extensions.filters.http.compressor.v3.ResponseDirectionOverrides",
  [],
);

/**
 * Per-route overrides. As per-route overrides are needed, they should be
 * added here, mirroring the structure of `Compressor`. All fields should be
 * optional, to allow overriding arbitrary subsets of configuration.
 *
 * @generated from message envoy.extensions.filters.http.compressor.v3.CompressorOverrides
 */
export const CompressorOverrides = proto3.makeMessageType(
  "envoy.extensions.filters.http.compressor.v3.CompressorOverrides",
  () => [
    { no: 1, name: "response_direction_config", kind: "message", T: ResponseDirectionOverrides },
  ],
);

/**
 * @generated from message envoy.extensions.filters.http.compressor.v3.CompressorPerRoute
 */
export const CompressorPerRoute = proto3.makeMessageType(
  "envoy.extensions.filters.http.compressor.v3.CompressorPerRoute",
  () => [
    { no: 1, name: "disabled", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "override" },
    { no: 2, name: "overrides", kind: "message", T: CompressorOverrides, oneof: "override" },
  ],
);

