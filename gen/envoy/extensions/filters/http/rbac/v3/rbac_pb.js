// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/rbac/v3/rbac.proto (package envoy.extensions.filters.http.rbac.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { RBAC as RBAC$1 } from "../../../../../config/rbac/v3/rbac_pb.js";
import { Matcher } from "../../../../../../xds/type/matcher/v3/matcher_pb.js";

/**
 * RBAC filter config.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.http.rbac.v3.RBAC
 */
export const RBAC = proto3.makeMessageType(
  "envoy.extensions.filters.http.rbac.v3.RBAC",
  () => [
    { no: 1, name: "rules", kind: "message", T: RBAC$1 },
    { no: 4, name: "matcher", kind: "message", T: Matcher },
    { no: 2, name: "shadow_rules", kind: "message", T: RBAC$1 },
    { no: 5, name: "shadow_matcher", kind: "message", T: Matcher },
    { no: 3, name: "shadow_rules_stat_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message envoy.extensions.filters.http.rbac.v3.RBACPerRoute
 */
export const RBACPerRoute = proto3.makeMessageType(
  "envoy.extensions.filters.http.rbac.v3.RBACPerRoute",
  () => [
    { no: 2, name: "rbac", kind: "message", T: RBAC },
  ],
);

