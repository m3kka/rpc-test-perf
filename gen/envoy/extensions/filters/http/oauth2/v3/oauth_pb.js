// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/oauth2/v3/oauth.proto (package envoy.extensions.filters.http.oauth2.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { SdsSecretConfig } from "../../../../transport_sockets/tls/v3/secret_pb.js";
import { HttpUri } from "../../../../../config/core/v3/http_uri_pb.js";
import { PathMatcher } from "../../../../../type/matcher/v3/path_pb.js";
import { HeaderMatcher } from "../../../../../config/route/v3/route_components_pb.js";

/**
 * @generated from message envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials
 */
export const OAuth2Credentials = proto3.makeMessageType(
  "envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_secret", kind: "message", T: SdsSecretConfig },
    { no: 3, name: "hmac_secret", kind: "message", T: SdsSecretConfig, oneof: "token_formation" },
    { no: 4, name: "cookie_names", kind: "message", T: OAuth2Credentials_CookieNames },
  ],
);

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames
 */
export const OAuth2Credentials_CookieNames = proto3.makeMessageType(
  "envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames",
  () => [
    { no: 1, name: "bearer_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "oauth_hmac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "oauth_expires", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "id_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "OAuth2Credentials_CookieNames"},
);

/**
 * OAuth config
 *
 * [#next-free-field: 12]
 *
 * @generated from message envoy.extensions.filters.http.oauth2.v3.OAuth2Config
 */
export const OAuth2Config = proto3.makeMessageType(
  "envoy.extensions.filters.http.oauth2.v3.OAuth2Config",
  () => [
    { no: 1, name: "token_endpoint", kind: "message", T: HttpUri },
    { no: 2, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "credentials", kind: "message", T: OAuth2Credentials },
    { no: 4, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "redirect_path_matcher", kind: "message", T: PathMatcher },
    { no: 6, name: "signout_path", kind: "message", T: PathMatcher },
    { no: 7, name: "forward_bearer_token", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "pass_through_matcher", kind: "message", T: HeaderMatcher, repeated: true },
    { no: 9, name: "auth_scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "resources", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 11, name: "auth_type", kind: "enum", T: proto3.getEnumType(OAuth2Config_AuthType) },
  ],
);

/**
 * @generated from enum envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType
 */
export const OAuth2Config_AuthType = proto3.makeEnum(
  "envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType",
  [
    {no: 0, name: "URL_ENCODED_BODY"},
    {no: 1, name: "BASIC_AUTH"},
  ],
);

/**
 * Filter config.
 *
 * @generated from message envoy.extensions.filters.http.oauth2.v3.OAuth2
 */
export const OAuth2 = proto3.makeMessageType(
  "envoy.extensions.filters.http.oauth2.v3.OAuth2",
  () => [
    { no: 1, name: "config", kind: "message", T: OAuth2Config },
  ],
);

