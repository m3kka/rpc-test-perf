// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/on_demand/v3/on_demand.proto (package envoy.extensions.filters.http.on_demand.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ConfigSource } from "../../../../../config/core/v3/config_source_pb.js";

/**
 * Configuration of on-demand CDS.
 *
 * @generated from message envoy.extensions.filters.http.on_demand.v3.OnDemandCds
 */
export declare class OnDemandCds extends Message<OnDemandCds> {
  /**
   * A configuration source for the service that will be used for
   * on-demand cluster discovery.
   *
   * @generated from field: envoy.config.core.v3.ConfigSource source = 1;
   */
  source?: ConfigSource;

  /**
   * xdstp:// resource locator for on-demand cluster collection.
   *
   * @generated from field: string resources_locator = 2;
   */
  resourcesLocator: string;

  /**
   * The timeout for on demand cluster lookup. If not set, defaults to 5 seconds.
   *
   * @generated from field: google.protobuf.Duration timeout = 3;
   */
  timeout?: Duration;

  constructor(data?: PartialMessage<OnDemandCds>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.on_demand.v3.OnDemandCds";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OnDemandCds;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OnDemandCds;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OnDemandCds;

  static equals(a: OnDemandCds | PlainMessage<OnDemandCds> | undefined, b: OnDemandCds | PlainMessage<OnDemandCds> | undefined): boolean;
}

/**
 * On Demand Discovery filter config.
 *
 * @generated from message envoy.extensions.filters.http.on_demand.v3.OnDemand
 */
export declare class OnDemand extends Message<OnDemand> {
  /**
   * An optional configuration for on-demand cluster discovery
   * service. If not specified, the on-demand cluster discovery will
   * be disabled. When it's specified, the filter will pause the
   * request to an unknown cluster and will begin a cluster discovery
   * process. When the discovery is finished (successfully or not), the
   * request will be resumed for further processing.
   *
   * @generated from field: envoy.extensions.filters.http.on_demand.v3.OnDemandCds odcds = 1;
   */
  odcds?: OnDemandCds;

  constructor(data?: PartialMessage<OnDemand>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.on_demand.v3.OnDemand";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OnDemand;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OnDemand;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OnDemand;

  static equals(a: OnDemand | PlainMessage<OnDemand> | undefined, b: OnDemand | PlainMessage<OnDemand> | undefined): boolean;
}

/**
 * Per-route configuration for On Demand Discovery.
 *
 * @generated from message envoy.extensions.filters.http.on_demand.v3.PerRouteConfig
 */
export declare class PerRouteConfig extends Message<PerRouteConfig> {
  /**
   * An optional configuration for on-demand cluster discovery
   * service. If not specified, the on-demand cluster discovery will
   * be disabled. When it's specified, the filter will pause the
   * request to an unknown cluster and will begin a cluster discovery
   * process. When the discovery is finished (successfully or not), the
   * request will be resumed for further processing.
   *
   * @generated from field: envoy.extensions.filters.http.on_demand.v3.OnDemandCds odcds = 1;
   */
  odcds?: OnDemandCds;

  constructor(data?: PartialMessage<PerRouteConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.on_demand.v3.PerRouteConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PerRouteConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PerRouteConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PerRouteConfig;

  static equals(a: PerRouteConfig | PlainMessage<PerRouteConfig> | undefined, b: PerRouteConfig | PlainMessage<PerRouteConfig> | undefined): boolean;
}

