// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/tap/v3/tap.proto (package envoy.extensions.filters.http.tap.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { CommonExtensionConfig } from "../../../../common/tap/v3/common_pb.js";

/**
 * Top level configuration for the tap filter.
 *
 * @generated from message envoy.extensions.filters.http.tap.v3.Tap
 */
export declare class Tap extends Message<Tap> {
  /**
   * Common configuration for the HTTP tap filter.
   *
   * @generated from field: envoy.extensions.common.tap.v3.CommonExtensionConfig common_config = 1;
   */
  commonConfig?: CommonExtensionConfig;

  constructor(data?: PartialMessage<Tap>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.tap.v3.Tap";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Tap;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Tap;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Tap;

  static equals(a: Tap | PlainMessage<Tap> | undefined, b: Tap | PlainMessage<Tap> | undefined): boolean;
}

