// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/admission_control/v3/admission_control.proto (package envoy.extensions.filters.http.admission_control.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { RuntimeDouble, RuntimeFeatureFlag, RuntimePercent, RuntimeUInt32 } from "../../../../../config/core/v3/base_pb.js";
import type { Int32Range } from "../../../../../type/v3/range_pb.js";

/**
 * [#next-free-field: 8]
 *
 * @generated from message envoy.extensions.filters.http.admission_control.v3.AdmissionControl
 */
export declare class AdmissionControl extends Message<AdmissionControl> {
  /**
   * If set to false, the admission control filter will operate as a pass-through filter. If the
   * message is unspecified, the filter will be enabled.
   *
   * @generated from field: envoy.config.core.v3.RuntimeFeatureFlag enabled = 1;
   */
  enabled?: RuntimeFeatureFlag;

  /**
   * Defines how a request is considered a success/failure.
   *
   * @generated from oneof envoy.extensions.filters.http.admission_control.v3.AdmissionControl.evaluation_criteria
   */
  evaluationCriteria: {
    /**
     * @generated from field: envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria success_criteria = 2;
     */
    value: AdmissionControl_SuccessCriteria;
    case: "successCriteria";
  } | { case: undefined; value?: undefined };

  /**
   * The sliding time window over which the success rate is calculated. The window is rounded to the
   * nearest second. Defaults to 30s.
   *
   * @generated from field: google.protobuf.Duration sampling_window = 3;
   */
  samplingWindow?: Duration;

  /**
   * Rejection probability is defined by the formula::
   *
   *     max(0, (rq_count -  rq_success_count / sr_threshold) / (rq_count + 1)) ^ (1 / aggression)
   *
   * The aggression dictates how heavily the admission controller will throttle requests upon SR
   * dropping at or below the threshold. A value of 1 will result in a linear increase in
   * rejection probability as SR drops. Any values less than 1.0, will be set to 1.0. If the
   * message is unspecified, the aggression is 1.0. See `the admission control documentation
   * <https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/admission_control_filter.html>`_
   * for a diagram illustrating this.
   *
   * @generated from field: envoy.config.core.v3.RuntimeDouble aggression = 4;
   */
  aggression?: RuntimeDouble;

  /**
   * Dictates the success rate at which the rejection probability is non-zero. As success rate drops
   * below this threshold, rejection probability will increase. Any success rate above the threshold
   * results in a rejection probability of 0. Defaults to 95%.
   *
   * @generated from field: envoy.config.core.v3.RuntimePercent sr_threshold = 5;
   */
  srThreshold?: RuntimePercent;

  /**
   * If the average RPS of the sampling window is below this threshold, the request
   * will not be rejected, even if the success rate is lower than sr_threshold.
   * Defaults to 0.
   *
   * @generated from field: envoy.config.core.v3.RuntimeUInt32 rps_threshold = 6;
   */
  rpsThreshold?: RuntimeUInt32;

  /**
   * The probability of rejection will never exceed this value, even if the failure rate is rising.
   * Defaults to 80%.
   *
   * @generated from field: envoy.config.core.v3.RuntimePercent max_rejection_probability = 7;
   */
  maxRejectionProbability?: RuntimePercent;

  constructor(data?: PartialMessage<AdmissionControl>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.admission_control.v3.AdmissionControl";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdmissionControl;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdmissionControl;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdmissionControl;

  static equals(a: AdmissionControl | PlainMessage<AdmissionControl> | undefined, b: AdmissionControl | PlainMessage<AdmissionControl> | undefined): boolean;
}

/**
 * Default method of specifying what constitutes a successful request. All status codes that
 * indicate a successful request must be explicitly specified if not relying on the default
 * values.
 *
 * @generated from message envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria
 */
export declare class AdmissionControl_SuccessCriteria extends Message<AdmissionControl_SuccessCriteria> {
  /**
   * If HTTP criteria are unspecified, all HTTP status codes below 500 are treated as successful
   * responses.
   *
   * .. note::
   *
   *    The default HTTP codes considered successful by the admission controller are done so due
   *    to the unlikelihood that sending fewer requests would change their behavior (for example:
   *    redirects, unauthorized access, or bad requests won't be alleviated by sending less
   *    traffic).
   *
   * @generated from field: envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria.HttpCriteria http_criteria = 1;
   */
  httpCriteria?: AdmissionControl_SuccessCriteria_HttpCriteria;

  /**
   * GRPC status codes to consider as request successes. If unspecified, defaults to: Ok,
   * Cancelled, Unknown, InvalidArgument, NotFound, AlreadyExists, Unauthenticated,
   * FailedPrecondition, OutOfRange, PermissionDenied, and Unimplemented.
   *
   * .. note::
   *
   *    The default gRPC codes that are considered successful by the admission controller are
   *    chosen because of the unlikelihood that sending fewer requests will change the behavior.
   *
   * @generated from field: envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria.GrpcCriteria grpc_criteria = 2;
   */
  grpcCriteria?: AdmissionControl_SuccessCriteria_GrpcCriteria;

  constructor(data?: PartialMessage<AdmissionControl_SuccessCriteria>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdmissionControl_SuccessCriteria;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdmissionControl_SuccessCriteria;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdmissionControl_SuccessCriteria;

  static equals(a: AdmissionControl_SuccessCriteria | PlainMessage<AdmissionControl_SuccessCriteria> | undefined, b: AdmissionControl_SuccessCriteria | PlainMessage<AdmissionControl_SuccessCriteria> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria.HttpCriteria
 */
export declare class AdmissionControl_SuccessCriteria_HttpCriteria extends Message<AdmissionControl_SuccessCriteria_HttpCriteria> {
  /**
   * Status code ranges that constitute a successful request. Configurable codes are in the
   * range [100, 600).
   *
   * @generated from field: repeated envoy.type.v3.Int32Range http_success_status = 1;
   */
  httpSuccessStatus: Int32Range[];

  constructor(data?: PartialMessage<AdmissionControl_SuccessCriteria_HttpCriteria>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria.HttpCriteria";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdmissionControl_SuccessCriteria_HttpCriteria;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdmissionControl_SuccessCriteria_HttpCriteria;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdmissionControl_SuccessCriteria_HttpCriteria;

  static equals(a: AdmissionControl_SuccessCriteria_HttpCriteria | PlainMessage<AdmissionControl_SuccessCriteria_HttpCriteria> | undefined, b: AdmissionControl_SuccessCriteria_HttpCriteria | PlainMessage<AdmissionControl_SuccessCriteria_HttpCriteria> | undefined): boolean;
}

/**
 * @generated from message envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria.GrpcCriteria
 */
export declare class AdmissionControl_SuccessCriteria_GrpcCriteria extends Message<AdmissionControl_SuccessCriteria_GrpcCriteria> {
  /**
   * Status codes that constitute a successful request.
   * Mappings can be found at: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md.
   *
   * @generated from field: repeated uint32 grpc_success_status = 1;
   */
  grpcSuccessStatus: number[];

  constructor(data?: PartialMessage<AdmissionControl_SuccessCriteria_GrpcCriteria>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria.GrpcCriteria";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdmissionControl_SuccessCriteria_GrpcCriteria;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdmissionControl_SuccessCriteria_GrpcCriteria;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdmissionControl_SuccessCriteria_GrpcCriteria;

  static equals(a: AdmissionControl_SuccessCriteria_GrpcCriteria | PlainMessage<AdmissionControl_SuccessCriteria_GrpcCriteria> | undefined, b: AdmissionControl_SuccessCriteria_GrpcCriteria | PlainMessage<AdmissionControl_SuccessCriteria_GrpcCriteria> | undefined): boolean;
}

