// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/rate_limit_quota/v3/rate_limit_quota.proto (package envoy.extensions.filters.http.rate_limit_quota.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BytesValue, Duration, proto3 } from "@bufbuild/protobuf";
import { GrpcService } from "../../../../../config/core/v3/grpc_service_pb.js";
import { Matcher } from "../../../../../../xds/type/matcher/v3/matcher_pb.js";
import { HeaderValueOption, RuntimeFractionalPercent } from "../../../../../config/core/v3/base_pb.js";
import { RateLimitStrategy } from "../../../../../type/v3/ratelimit_strategy_pb.js";
import { HttpStatus } from "../../../../../type/v3/http_status_pb.js";
import { Status } from "../../../../../../google/rpc/status_pb.js";
import { TypedExtensionConfig } from "../../../../../config/core/v3/extension_pb.js";

/**
 * Configures the Rate Limit Quota filter.
 *
 * Can be overridden in the per-route and per-host configurations.
 * The more specific definition completely overrides the less specific definition.
 * [#next-free-field: 7]
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaFilterConfig
 */
export const RateLimitQuotaFilterConfig = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaFilterConfig",
  () => [
    { no: 1, name: "rlqs_server", kind: "message", T: GrpcService },
    { no: 2, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bucket_matchers", kind: "message", T: Matcher },
    { no: 4, name: "filter_enabled", kind: "message", T: RuntimeFractionalPercent },
    { no: 5, name: "filter_enforced", kind: "message", T: RuntimeFractionalPercent },
    { no: 6, name: "request_headers_to_add_when_not_enforced", kind: "message", T: HeaderValueOption, repeated: true },
  ],
);

/**
 * Per-route and per-host configuration overrides. The more specific definition completely
 * overrides the less specific definition.
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaOverride
 */
export const RateLimitQuotaOverride = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaOverride",
  () => [
    { no: 1, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bucket_matchers", kind: "message", T: Matcher },
  ],
);

/**
 * Rate Limit Quota Bucket Settings to apply on the successful ``bucket_matchers`` match.
 *
 * Specify this message in the :ref:`Matcher.OnMatch.action
 * <envoy_v3_api_field_.xds.type.matcher.v3.Matcher.OnMatch.action>` field of the
 * ``bucket_matchers`` matcher tree to assign the matched requests to the Quota Bucket.
 * Usage example: :ref:`RateLimitQuotaFilterConfig.bucket_matchers
 * <envoy_v3_api_field_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaFilterConfig.bucket_matchers>`.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings
 */
export const RateLimitQuotaBucketSettings = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings",
  () => [
    { no: 1, name: "bucket_id_builder", kind: "message", T: RateLimitQuotaBucketSettings_BucketIdBuilder },
    { no: 2, name: "reporting_interval", kind: "message", T: Duration },
    { no: 3, name: "deny_response_settings", kind: "message", T: RateLimitQuotaBucketSettings_DenyResponseSettings },
    { no: 4, name: "no_assignment_behavior", kind: "message", T: RateLimitQuotaBucketSettings_NoAssignmentBehavior },
    { no: 5, name: "expired_assignment_behavior", kind: "message", T: RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior },
  ],
);

/**
 * Configures the behavior after the first request has been matched to the bucket, and before the
 * the RLQS server returns the first quota assignment.
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehavior
 */
export const RateLimitQuotaBucketSettings_NoAssignmentBehavior = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehavior",
  () => [
    { no: 1, name: "fallback_rate_limit", kind: "message", T: RateLimitStrategy, oneof: "no_assignment_behavior" },
  ],
  {localName: "RateLimitQuotaBucketSettings_NoAssignmentBehavior"},
);

/**
 * Specifies the behavior when the bucket's assignment has expired, and cannot be refreshed for
 * any reason.
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior
 */
export const RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior",
  () => [
    { no: 1, name: "expired_assignment_behavior_timeout", kind: "message", T: Duration },
    { no: 2, name: "fallback_rate_limit", kind: "message", T: RateLimitStrategy, oneof: "expired_assignment_behavior" },
    { no: 3, name: "reuse_last_assignment", kind: "message", T: RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment, oneof: "expired_assignment_behavior" },
  ],
  {localName: "RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior"},
);

/**
 * Reuse the last known quota assignment, effectively extending it for the duration
 * specified in the :ref:`expired_assignment_behavior_timeout
 * <envoy_v3_api_field_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior.expired_assignment_behavior_timeout>`
 * field.
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior.ReuseLastAssignment
 */
export const RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior.ReuseLastAssignment",
  [],
  {localName: "RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment"},
);

/**
 * Customize the deny response to the requests over the rate limit.
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings
 */
export const RateLimitQuotaBucketSettings_DenyResponseSettings = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings",
  () => [
    { no: 1, name: "http_status", kind: "message", T: HttpStatus },
    { no: 2, name: "http_body", kind: "message", T: BytesValue },
    { no: 3, name: "grpc_status", kind: "message", T: Status },
    { no: 4, name: "response_headers_to_add", kind: "message", T: HeaderValueOption, repeated: true },
  ],
  {localName: "RateLimitQuotaBucketSettings_DenyResponseSettings"},
);

/**
 * ``BucketIdBuilder`` makes it possible to build :ref:`BucketId
 * <envoy_v3_api_msg_service.rate_limit_quota.v3.BucketId>` with values substituted
 * from the dynamic properties associated with each individual request. See usage examples in
 * the docs to :ref:`bucket_id_builder
 * <envoy_v3_api_field_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.bucket_id_builder>`
 * field.
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder
 */
export const RateLimitQuotaBucketSettings_BucketIdBuilder = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder",
  () => [
    { no: 1, name: "bucket_id_builder", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder} },
  ],
  {localName: "RateLimitQuotaBucketSettings_BucketIdBuilder"},
);

/**
 * Produces the value of the :ref:`BucketId
 * <envoy_v3_api_msg_service.rate_limit_quota.v3.BucketId>` map.
 *
 * @generated from message envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder.ValueBuilder
 */
export const RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder = proto3.makeMessageType(
  "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder.ValueBuilder",
  () => [
    { no: 1, name: "string_value", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "value_specifier" },
    { no: 2, name: "custom_value", kind: "message", T: TypedExtensionConfig, oneof: "value_specifier" },
  ],
  {localName: "RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder"},
);

