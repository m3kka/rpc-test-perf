// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/local_ratelimit/v3/local_rate_limit.proto (package envoy.extensions.filters.http.local_ratelimit.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { HttpStatus } from "../../../../../type/v3/http_status_pb.js";
import { TokenBucket } from "../../../../../type/v3/token_bucket_pb.js";
import { HeaderValueOption, RuntimeFractionalPercent } from "../../../../../config/core/v3/base_pb.js";
import { LocalRateLimitDescriptor, VhRateLimitsOptions, XRateLimitHeadersRFCVersion } from "../../../../common/ratelimit/v3/ratelimit_pb.js";

/**
 * [#next-free-field: 14]
 *
 * @generated from message envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
 */
export const LocalRateLimit = proto3.makeMessageType(
  "envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit",
  () => [
    { no: 1, name: "stat_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "message", T: HttpStatus },
    { no: 3, name: "token_bucket", kind: "message", T: TokenBucket },
    { no: 4, name: "filter_enabled", kind: "message", T: RuntimeFractionalPercent },
    { no: 5, name: "filter_enforced", kind: "message", T: RuntimeFractionalPercent },
    { no: 10, name: "request_headers_to_add_when_not_enforced", kind: "message", T: HeaderValueOption, repeated: true },
    { no: 6, name: "response_headers_to_add", kind: "message", T: HeaderValueOption, repeated: true },
    { no: 8, name: "descriptors", kind: "message", T: LocalRateLimitDescriptor, repeated: true },
    { no: 9, name: "stage", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 11, name: "local_rate_limit_per_downstream_connection", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "enable_x_ratelimit_headers", kind: "enum", T: proto3.getEnumType(XRateLimitHeadersRFCVersion) },
    { no: 13, name: "vh_rate_limits", kind: "enum", T: proto3.getEnumType(VhRateLimitsOptions) },
  ],
);

