// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/aws_lambda/v3/aws_lambda.proto (package envoy.extensions.filters.http.aws_lambda.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * AWS Lambda filter config
 *
 * @generated from message envoy.extensions.filters.http.aws_lambda.v3.Config
 */
export const Config = proto3.makeMessageType(
  "envoy.extensions.filters.http.aws_lambda.v3.Config",
  () => [
    { no: 1, name: "arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "payload_passthrough", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "invocation_mode", kind: "enum", T: proto3.getEnumType(Config_InvocationMode) },
  ],
);

/**
 * @generated from enum envoy.extensions.filters.http.aws_lambda.v3.Config.InvocationMode
 */
export const Config_InvocationMode = proto3.makeEnum(
  "envoy.extensions.filters.http.aws_lambda.v3.Config.InvocationMode",
  [
    {no: 0, name: "SYNCHRONOUS"},
    {no: 1, name: "ASYNCHRONOUS"},
  ],
);

/**
 * Per-route configuration for AWS Lambda. This can be useful when invoking a different Lambda function or a different
 * version of the same Lambda depending on the route.
 *
 * @generated from message envoy.extensions.filters.http.aws_lambda.v3.PerRouteConfig
 */
export const PerRouteConfig = proto3.makeMessageType(
  "envoy.extensions.filters.http.aws_lambda.v3.PerRouteConfig",
  () => [
    { no: 1, name: "invoke_config", kind: "message", T: Config },
  ],
);

