// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/grpc_http1_bridge/v3/config.proto (package envoy.extensions.filters.http.grpc_http1_bridge.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * gRPC HTTP/1.1 Bridge filter config.
 *
 * @generated from message envoy.extensions.filters.http.grpc_http1_bridge.v3.Config
 */
export declare class Config extends Message<Config> {
  /**
   * If true then requests with content type set to ``application/x-protobuf`` will be automatically converted to gRPC.
   * This works by prepending the payload data with the gRPC header frame, as defined by the wiring format, and
   * Content-Type will be updated accordingly before sending the request.
   * For the requests that went through this upgrade the filter will also strip the frame before forwarding the
   * response to the client.
   *
   * @generated from field: bool upgrade_protobuf_to_grpc = 1;
   */
  upgradeProtobufToGrpc: boolean;

  constructor(data?: PartialMessage<Config>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.filters.http.grpc_http1_bridge.v3.Config";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Config;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Config;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Config;

  static equals(a: Config | PlainMessage<Config> | undefined, b: Config | PlainMessage<Config> | undefined): boolean;
}

