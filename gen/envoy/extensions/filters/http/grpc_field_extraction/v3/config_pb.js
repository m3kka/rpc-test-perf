// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/grpc_field_extraction/v3/config.proto (package envoy.extensions.filters.http.grpc_field_extraction.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { DataSource } from "../../../../../config/core/v3/base_pb.js";

/**
 * @generated from message envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig
 */
export const GrpcFieldExtractionConfig = proto3.makeMessageType(
  "envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig",
  () => [
    { no: 1, name: "descriptor_set", kind: "message", T: DataSource },
    { no: 2, name: "extractions_by_method", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: FieldExtractions} },
  ],
);

/**
 * This message can be used to support per route config approach later even
 * though the Istio doesn't support that so far.
 *
 * @generated from message envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions
 */
export const FieldExtractions = proto3.makeMessageType(
  "envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions",
  () => [
    { no: 1, name: "request_field_extractions", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: RequestFieldValueDisposition} },
  ],
);

/**
 * @generated from message envoy.extensions.filters.http.grpc_field_extraction.v3.RequestFieldValueDisposition
 */
export const RequestFieldValueDisposition = proto3.makeMessageType(
  "envoy.extensions.filters.http.grpc_field_extraction.v3.RequestFieldValueDisposition",
  () => [
    { no: 1, name: "dynamic_metadata", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "disposition" },
  ],
);

