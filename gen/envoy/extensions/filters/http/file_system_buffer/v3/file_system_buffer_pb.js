// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/http/file_system_buffer/v3/file_system_buffer.proto (package envoy.extensions.filters.http.file_system_buffer.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, StringValue, UInt64Value } from "@bufbuild/protobuf";
import { AsyncFileManagerConfig } from "../../../../common/async_files/v3/async_file_manager_pb.js";

/**
 * The behavior of the filter for a stream.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior
 */
export const BufferBehavior = proto3.makeMessageType(
  "envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior",
  () => [
    { no: 1, name: "stream_when_possible", kind: "message", T: BufferBehavior_StreamWhenPossible, oneof: "behavior" },
    { no: 2, name: "bypass", kind: "message", T: BufferBehavior_Bypass, oneof: "behavior" },
    { no: 3, name: "inject_content_length_if_necessary", kind: "message", T: BufferBehavior_InjectContentLengthIfNecessary, oneof: "behavior" },
    { no: 4, name: "fully_buffer_and_always_inject_content_length", kind: "message", T: BufferBehavior_FullyBufferAndAlwaysInjectContentLength, oneof: "behavior" },
    { no: 5, name: "fully_buffer", kind: "message", T: BufferBehavior_FullyBuffer, oneof: "behavior" },
  ],
);

/**
 * @generated from message envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.StreamWhenPossible
 */
export const BufferBehavior_StreamWhenPossible = proto3.makeMessageType(
  "envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.StreamWhenPossible",
  [],
  {localName: "BufferBehavior_StreamWhenPossible"},
);

/**
 * @generated from message envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.Bypass
 */
export const BufferBehavior_Bypass = proto3.makeMessageType(
  "envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.Bypass",
  [],
  {localName: "BufferBehavior_Bypass"},
);

/**
 * @generated from message envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.InjectContentLengthIfNecessary
 */
export const BufferBehavior_InjectContentLengthIfNecessary = proto3.makeMessageType(
  "envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.InjectContentLengthIfNecessary",
  [],
  {localName: "BufferBehavior_InjectContentLengthIfNecessary"},
);

/**
 * @generated from message envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferAndAlwaysInjectContentLength
 */
export const BufferBehavior_FullyBufferAndAlwaysInjectContentLength = proto3.makeMessageType(
  "envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferAndAlwaysInjectContentLength",
  [],
  {localName: "BufferBehavior_FullyBufferAndAlwaysInjectContentLength"},
);

/**
 * @generated from message envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBuffer
 */
export const BufferBehavior_FullyBuffer = proto3.makeMessageType(
  "envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBuffer",
  [],
  {localName: "BufferBehavior_FullyBuffer"},
);

/**
 * The configuration for one direction of the filter behavior.
 *
 * @generated from message envoy.extensions.filters.http.file_system_buffer.v3.StreamConfig
 */
export const StreamConfig = proto3.makeMessageType(
  "envoy.extensions.filters.http.file_system_buffer.v3.StreamConfig",
  () => [
    { no: 1, name: "behavior", kind: "message", T: BufferBehavior },
    { no: 2, name: "memory_buffer_bytes_limit", kind: "message", T: UInt64Value },
    { no: 3, name: "storage_buffer_bytes_limit", kind: "message", T: UInt64Value },
    { no: 4, name: "storage_buffer_queue_high_watermark_bytes", kind: "message", T: UInt64Value },
  ],
);

/**
 * A :ref:`file system buffer <config_http_filters_file_system_buffer>` filter configuration.
 *
 * Route-specific configs override only the fields they explicitly include; unset
 * fields inherit from the vhost or listener-level config, or, if never set,
 * and not required, use a default value.
 *
 * @generated from message envoy.extensions.filters.http.file_system_buffer.v3.FileSystemBufferFilterConfig
 */
export const FileSystemBufferFilterConfig = proto3.makeMessageType(
  "envoy.extensions.filters.http.file_system_buffer.v3.FileSystemBufferFilterConfig",
  () => [
    { no: 1, name: "manager_config", kind: "message", T: AsyncFileManagerConfig },
    { no: 2, name: "storage_buffer_path", kind: "message", T: StringValue },
    { no: 3, name: "request", kind: "message", T: StreamConfig },
    { no: 4, name: "response", kind: "message", T: StreamConfig },
  ],
);

