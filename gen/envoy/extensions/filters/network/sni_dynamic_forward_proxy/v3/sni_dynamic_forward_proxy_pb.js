// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/network/sni_dynamic_forward_proxy/v3/sni_dynamic_forward_proxy.proto (package envoy.extensions.filters.network.sni_dynamic_forward_proxy.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { DnsCacheConfig } from "../../../../common/dynamic_forward_proxy/v3/dns_cache_pb.js";

/**
 * Configuration for the SNI-based dynamic forward proxy filter. See the
 * :ref:`architecture overview <arch_overview_http_dynamic_forward_proxy>` for
 * more information. Note this filter must be configured along with
 * :ref:`TLS inspector listener filter <config_listener_filters_tls_inspector>`
 * to work.
 * [#extension: envoy.filters.network.sni_dynamic_forward_proxy]
 *
 * @generated from message envoy.extensions.filters.network.sni_dynamic_forward_proxy.v3.FilterConfig
 */
export const FilterConfig = proto3.makeMessageType(
  "envoy.extensions.filters.network.sni_dynamic_forward_proxy.v3.FilterConfig",
  () => [
    { no: 1, name: "dns_cache_config", kind: "message", T: DnsCacheConfig },
    { no: 2, name: "port_value", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "port_specifier" },
  ],
);

