// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/network/ext_authz/v3/ext_authz.proto (package envoy.extensions.filters.network.ext_authz.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { GrpcService } from "../../../../../config/core/v3/grpc_service_pb.js";
import { ApiVersion } from "../../../../../config/core/v3/config_source_pb.js";
import { MetadataMatcher } from "../../../../../type/matcher/v3/metadata_pb.js";

/**
 * External Authorization filter calls out to an external service over the
 * gRPC Authorization API defined by
 * :ref:`CheckRequest <envoy_v3_api_msg_service.auth.v3.CheckRequest>`.
 * A failed check will cause this filter to close the TCP connection.
 * [#next-free-field: 8]
 *
 * @generated from message envoy.extensions.filters.network.ext_authz.v3.ExtAuthz
 */
export const ExtAuthz = proto3.makeMessageType(
  "envoy.extensions.filters.network.ext_authz.v3.ExtAuthz",
  () => [
    { no: 1, name: "stat_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "grpc_service", kind: "message", T: GrpcService },
    { no: 3, name: "failure_mode_allow", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "include_peer_certificate", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "transport_api_version", kind: "enum", T: proto3.getEnumType(ApiVersion) },
    { no: 6, name: "filter_enabled_metadata", kind: "message", T: MetadataMatcher },
    { no: 7, name: "bootstrap_metadata_labels_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

