// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/filters/network/dubbo_proxy/v3/route.proto (package envoy.extensions.filters.network.dubbo_proxy.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { HeaderMatcher, WeightedCluster } from "../../../../../config/route/v3/route_components_pb.js";
import { Metadata } from "../../../../../config/core/v3/base_pb.js";
import { StringMatcher } from "../../../../../type/matcher/v3/string_pb.js";
import { Int64Range } from "../../../../../type/v3/range_pb.js";

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration
 */
export const RouteConfiguration = proto3.makeMessageType(
  "envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "interface", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "group", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "routes", kind: "message", T: Route, repeated: true },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.dubbo_proxy.v3.Route
 */
export const Route = proto3.makeMessageType(
  "envoy.extensions.filters.network.dubbo_proxy.v3.Route",
  () => [
    { no: 1, name: "match", kind: "message", T: RouteMatch },
    { no: 2, name: "route", kind: "message", T: RouteAction },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch
 */
export const RouteMatch = proto3.makeMessageType(
  "envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch",
  () => [
    { no: 1, name: "method", kind: "message", T: MethodMatch },
    { no: 2, name: "headers", kind: "message", T: HeaderMatcher, repeated: true },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.dubbo_proxy.v3.RouteAction
 */
export const RouteAction = proto3.makeMessageType(
  "envoy.extensions.filters.network.dubbo_proxy.v3.RouteAction",
  () => [
    { no: 1, name: "cluster", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "cluster_specifier" },
    { no: 2, name: "weighted_clusters", kind: "message", T: WeightedCluster, oneof: "cluster_specifier" },
    { no: 3, name: "metadata_match", kind: "message", T: Metadata },
  ],
);

/**
 * @generated from message envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch
 */
export const MethodMatch = proto3.makeMessageType(
  "envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch",
  () => [
    { no: 1, name: "name", kind: "message", T: StringMatcher },
    { no: 2, name: "params_match", kind: "map", K: 13 /* ScalarType.UINT32 */, V: {kind: "message", T: MethodMatch_ParameterMatchSpecifier} },
  ],
);

/**
 * The parameter matching type.
 *
 * @generated from message envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier
 */
export const MethodMatch_ParameterMatchSpecifier = proto3.makeMessageType(
  "envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier",
  () => [
    { no: 3, name: "exact_match", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "parameter_match_specifier" },
    { no: 4, name: "range_match", kind: "message", T: Int64Range, oneof: "parameter_match_specifier" },
  ],
  {localName: "MethodMatch_ParameterMatchSpecifier"},
);

/**
 * @generated from message envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration
 */
export const MultipleRouteConfiguration = proto3.makeMessageType(
  "envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "route_config", kind: "message", T: RouteConfiguration, repeated: true },
  ],
);

