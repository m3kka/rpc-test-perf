// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/key_value/file_based/v3/config.proto (package envoy.extensions.key_value.file_based.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * [#extension: envoy.key_value.file_based]
 * This is configuration to flush a key value store out to disk.
 *
 * @generated from message envoy.extensions.key_value.file_based.v3.FileBasedKeyValueStoreConfig
 */
export declare class FileBasedKeyValueStoreConfig extends Message<FileBasedKeyValueStoreConfig> {
  /**
   * The filename to read the keys and values from, and write the keys and
   * values to.
   *
   * @generated from field: string filename = 1;
   */
  filename: string;

  /**
   * The interval at which the key value store should be flushed to the file.
   *
   * @generated from field: google.protobuf.Duration flush_interval = 2;
   */
  flushInterval?: Duration;

  /**
   * The maximum number of entries to cache, or 0 to allow for unlimited entries.
   * Defaults to 1000 if not present.
   *
   * @generated from field: google.protobuf.UInt32Value max_entries = 3;
   */
  maxEntries?: number;

  constructor(data?: PartialMessage<FileBasedKeyValueStoreConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.key_value.file_based.v3.FileBasedKeyValueStoreConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileBasedKeyValueStoreConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileBasedKeyValueStoreConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileBasedKeyValueStoreConfig;

  static equals(a: FileBasedKeyValueStoreConfig | PlainMessage<FileBasedKeyValueStoreConfig> | undefined, b: FileBasedKeyValueStoreConfig | PlainMessage<FileBasedKeyValueStoreConfig> | undefined): boolean;
}

