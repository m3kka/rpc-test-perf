// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/health_checkers/thrift/v3/thrift.proto (package envoy.extensions.health_checkers.thrift.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ProtocolType, TransportType } from "../../../filters/network/thrift_proxy/v3/thrift_proxy_pb.js";

/**
 * @generated from message envoy.extensions.health_checkers.thrift.v3.Thrift
 */
export declare class Thrift extends Message<Thrift> {
  /**
   * Specifies the method name that will be set on each health check request dispatched to an upstream host.
   * Note that method name is case sensitive.
   *
   * @generated from field: string method_name = 1;
   */
  methodName: string;

  /**
   * Configures the transport type to be used with the health checks. Note that
   * :ref:`AUTO_TRANSPORT<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT>`
   * is not supported, and we don't honor :ref:`ThriftProtocolOptions<envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions>`
   * since it's possible to set to :ref:`AUTO_TRANSPORT<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT>`.
   * [#extension-category: envoy.filters.network]
   *
   * @generated from field: envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2;
   */
  transport: TransportType;

  /**
   * Configures the protocol type to be used with the health checks. Note that
   * :ref:`AUTO_PROTOCOL<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL>`
   * and :ref:`TWITTER<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER>`
   * are not supported, and we don't honor :ref:`ThriftProtocolOptions<envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions>`
   * since it's possible to set to :ref:`AUTO_PROTOCOL<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL>`
   * or :ref:`TWITTER<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER>`.
   *
   * @generated from field: envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3;
   */
  protocol: ProtocolType;

  constructor(data?: PartialMessage<Thrift>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.health_checkers.thrift.v3.Thrift";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Thrift;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Thrift;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Thrift;

  static equals(a: Thrift | PlainMessage<Thrift> | undefined, b: Thrift | PlainMessage<Thrift> | undefined): boolean;
}

