// @generated by protobuf-ts 2.9.2
// @generated from protobuf file "envoy/extensions/regex_engines/v3/google_re2.proto" (package "envoy.extensions.regex_engines.v3", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// [#protodoc-title: Google RE2]
// [#extension: envoy.regex_engines.google_re2]

/**
 * Google's `RE2 <https://github.com/google/re2>`_ regex engine. The regex string must adhere to
 * the documented `syntax <https://github.com/google/re2/wiki/Syntax>`_. The engine is designed
 * to complete execution in linear time as well as limit the amount of memory used.
 *
 * Envoy emits two stats for tracking the program size of regexes: the histogram ``re2.program_size``,
 * which records the program size, and the counter ``re2.exceeded_warn_level``, which is incremented
 * each time the program size exceeds the warn level threshold.
 *
 * @generated from protobuf message envoy.extensions.regex_engines.v3.GoogleRE2
 */
export interface GoogleRE2 {
}
// @generated message type with reflection information, may provide speed optimized methods
class GoogleRE2$Type extends MessageType<GoogleRE2> {
    constructor() {
        super("envoy.extensions.regex_engines.v3.GoogleRE2", []);
    }
    create(value?: PartialMessage<GoogleRE2>): GoogleRE2 {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GoogleRE2>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GoogleRE2): GoogleRE2 {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GoogleRE2, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.extensions.regex_engines.v3.GoogleRE2
 */
export const GoogleRE2 = new GoogleRE2$Type();
