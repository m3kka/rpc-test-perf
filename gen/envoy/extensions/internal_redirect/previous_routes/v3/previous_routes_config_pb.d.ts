// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/internal_redirect/previous_routes/v3/previous_routes_config.proto (package envoy.extensions.internal_redirect.previous_routes.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * An internal redirect predicate that rejects redirect targets that are pointing
 * to a route that has been followed by a previous redirect from the current route.
 * [#extension: envoy.internal_redirect_predicates.previous_routes]
 *
 * @generated from message envoy.extensions.internal_redirect.previous_routes.v3.PreviousRoutesConfig
 */
export declare class PreviousRoutesConfig extends Message<PreviousRoutesConfig> {
  constructor(data?: PartialMessage<PreviousRoutesConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.internal_redirect.previous_routes.v3.PreviousRoutesConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreviousRoutesConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreviousRoutesConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreviousRoutesConfig;

  static equals(a: PreviousRoutesConfig | PlainMessage<PreviousRoutesConfig> | undefined, b: PreviousRoutesConfig | PlainMessage<PreviousRoutesConfig> | undefined): boolean;
}

