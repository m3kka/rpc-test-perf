// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/upstreams/http/http/v3/http_connection_pool.proto (package envoy.extensions.upstreams.http.http.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * A connection pool which forwards downstream HTTP as HTTP to upstream.
 * [#extension: envoy.upstreams.http.http]
 *
 * @generated from message envoy.extensions.upstreams.http.http.v3.HttpConnectionPoolProto
 */
export declare class HttpConnectionPoolProto extends Message<HttpConnectionPoolProto> {
  constructor(data?: PartialMessage<HttpConnectionPoolProto>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.upstreams.http.http.v3.HttpConnectionPoolProto";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HttpConnectionPoolProto;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HttpConnectionPoolProto;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HttpConnectionPoolProto;

  static equals(a: HttpConnectionPoolProto | PlainMessage<HttpConnectionPoolProto> | undefined, b: HttpConnectionPoolProto | PlainMessage<HttpConnectionPoolProto> | undefined): boolean;
}

