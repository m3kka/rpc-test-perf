// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/upstreams/http/tcp/v3/tcp_connection_pool.proto (package envoy.extensions.upstreams.http.tcp.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * A connection pool which forwards downstream HTTP as TCP to upstream,
 * [#extension: envoy.upstreams.http.tcp]
 *
 * @generated from message envoy.extensions.upstreams.http.tcp.v3.TcpConnectionPoolProto
 */
export declare class TcpConnectionPoolProto extends Message<TcpConnectionPoolProto> {
  constructor(data?: PartialMessage<TcpConnectionPoolProto>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.upstreams.http.tcp.v3.TcpConnectionPoolProto";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TcpConnectionPoolProto;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TcpConnectionPoolProto;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TcpConnectionPoolProto;

  static equals(a: TcpConnectionPoolProto | PlainMessage<TcpConnectionPoolProto> | undefined, b: TcpConnectionPoolProto | PlainMessage<TcpConnectionPoolProto> | undefined): boolean;
}

