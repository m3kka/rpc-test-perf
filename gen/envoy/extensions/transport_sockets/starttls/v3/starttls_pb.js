// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/transport_sockets/starttls/v3/starttls.proto (package envoy.extensions.transport_sockets.starttls.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { RawBuffer } from "../../raw_buffer/v3/raw_buffer_pb.js";
import { DownstreamTlsContext, UpstreamTlsContext } from "../../tls/v3/tls_pb.js";

/**
 * Configuration for a downstream StartTls transport socket.
 * StartTls transport socket wraps two sockets:
 * * raw_buffer socket which is used at the beginning of the session
 * * TLS socket used when a protocol negotiates a switch to encrypted traffic.
 *
 * @generated from message envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig
 */
export const StartTlsConfig = proto3.makeMessageType(
  "envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig",
  () => [
    { no: 1, name: "cleartext_socket_config", kind: "message", T: RawBuffer },
    { no: 2, name: "tls_socket_config", kind: "message", T: DownstreamTlsContext },
  ],
);

/**
 * Configuration for an upstream StartTls transport socket.
 * StartTls transport socket wraps two sockets:
 * * raw_buffer socket which is used at the beginning of the session
 * * TLS socket used when a protocol negotiates a switch to encrypted traffic.
 *
 * @generated from message envoy.extensions.transport_sockets.starttls.v3.UpstreamStartTlsConfig
 */
export const UpstreamStartTlsConfig = proto3.makeMessageType(
  "envoy.extensions.transport_sockets.starttls.v3.UpstreamStartTlsConfig",
  () => [
    { no: 1, name: "cleartext_socket_config", kind: "message", T: RawBuffer },
    { no: 2, name: "tls_socket_config", kind: "message", T: UpstreamTlsContext },
  ],
);

