// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/transport_sockets/starttls/v3/starttls.proto (package envoy.extensions.transport_sockets.starttls.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { RawBuffer } from "../../raw_buffer/v3/raw_buffer_pb.js";
import type { DownstreamTlsContext, UpstreamTlsContext } from "../../tls/v3/tls_pb.js";

/**
 * Configuration for a downstream StartTls transport socket.
 * StartTls transport socket wraps two sockets:
 * * raw_buffer socket which is used at the beginning of the session
 * * TLS socket used when a protocol negotiates a switch to encrypted traffic.
 *
 * @generated from message envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig
 */
export declare class StartTlsConfig extends Message<StartTlsConfig> {
  /**
   * (optional) Configuration for clear-text socket used at the beginning of the session.
   *
   * @generated from field: envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer cleartext_socket_config = 1;
   */
  cleartextSocketConfig?: RawBuffer;

  /**
   * Configuration for a downstream TLS socket.
   *
   * @generated from field: envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext tls_socket_config = 2;
   */
  tlsSocketConfig?: DownstreamTlsContext;

  constructor(data?: PartialMessage<StartTlsConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartTlsConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartTlsConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartTlsConfig;

  static equals(a: StartTlsConfig | PlainMessage<StartTlsConfig> | undefined, b: StartTlsConfig | PlainMessage<StartTlsConfig> | undefined): boolean;
}

/**
 * Configuration for an upstream StartTls transport socket.
 * StartTls transport socket wraps two sockets:
 * * raw_buffer socket which is used at the beginning of the session
 * * TLS socket used when a protocol negotiates a switch to encrypted traffic.
 *
 * @generated from message envoy.extensions.transport_sockets.starttls.v3.UpstreamStartTlsConfig
 */
export declare class UpstreamStartTlsConfig extends Message<UpstreamStartTlsConfig> {
  /**
   * (optional) Configuration for clear-text socket used at the beginning of the session.
   *
   * @generated from field: envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer cleartext_socket_config = 1;
   */
  cleartextSocketConfig?: RawBuffer;

  /**
   * Configuration for an upstream TLS socket.
   *
   * @generated from field: envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext tls_socket_config = 2;
   */
  tlsSocketConfig?: UpstreamTlsContext;

  constructor(data?: PartialMessage<UpstreamStartTlsConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.transport_sockets.starttls.v3.UpstreamStartTlsConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpstreamStartTlsConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpstreamStartTlsConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpstreamStartTlsConfig;

  static equals(a: UpstreamStartTlsConfig | PlainMessage<UpstreamStartTlsConfig> | undefined, b: UpstreamStartTlsConfig | PlainMessage<UpstreamStartTlsConfig> | undefined): boolean;
}

