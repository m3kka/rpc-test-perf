// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/transport_sockets/http_11_proxy/v3/upstream_http_11_connect.proto (package envoy.extensions.transport_sockets.http_11_proxy.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { TransportSocket } from "../../../../config/core/v3/base_pb.js";

/**
 * Configuration for HTTP/1.1 proxy transport sockets.
 * This is intended for use in Envoy Mobile, though may eventually be extended
 * for upstream Envoy use.
 * If this transport socket is configured, and an intermediate filter adds the
 * stream info necessary for proxying to the stream info (as the test filter
 * does :repo:`here <test/integration/filters/header_to_proxy_filter.cc>`) then
 *
 * * Upstream connections will be directed to the specified proxy address rather
 *   than the host's address
 * * Upstream TLS connections will have a raw HTTP/1.1 CONNECT header prefaced
 *   to the payload, and 200 response stripped (if less than 200 bytes)
 * * Plaintext HTTP/1.1 connections will be sent with a fully qualified URL.
 *
 * This transport socket is not compatible with HTTP/3, plaintext HTTP/2, or raw TCP.
 *
 * @generated from message envoy.extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport
 */
export const Http11ProxyUpstreamTransport = proto3.makeMessageType(
  "envoy.extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport",
  () => [
    { no: 1, name: "transport_socket", kind: "message", T: TransportSocket },
  ],
);

