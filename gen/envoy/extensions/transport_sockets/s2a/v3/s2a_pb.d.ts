// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/transport_sockets/s2a/v3/s2a.proto (package envoy.extensions.transport_sockets.s2a.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * [#not-implemented-hide:]
 * Configuration for S2A transport socket. This allows Envoy clients to
 * configure how to offload mTLS handshakes to the S2A service.
 * https://github.com/google/s2a-go#readme
 *
 * @generated from message envoy.extensions.transport_sockets.s2a.v3.S2AConfiguration
 */
export declare class S2AConfiguration extends Message<S2AConfiguration> {
  /**
   * The address of the S2A. This can be an IP address or a hostname,
   * followed by a port number.
   *
   * @generated from field: string s2a_address = 1;
   */
  s2aAddress: string;

  constructor(data?: PartialMessage<S2AConfiguration>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.transport_sockets.s2a.v3.S2AConfiguration";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): S2AConfiguration;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): S2AConfiguration;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): S2AConfiguration;

  static equals(a: S2AConfiguration | PlainMessage<S2AConfiguration> | undefined, b: S2AConfiguration | PlainMessage<S2AConfiguration> | undefined): boolean;
}

