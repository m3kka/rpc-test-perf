// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/transport_sockets/quic/v3/quic_transport.proto (package envoy.extensions.transport_sockets.quic.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { DownstreamTlsContext, UpstreamTlsContext } from "../../tls/v3/tls_pb.js";

/**
 * Configuration for Downstream QUIC transport socket. This provides Google's implementation of Google QUIC and IETF QUIC to Envoy.
 *
 * @generated from message envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport
 */
export declare class QuicDownstreamTransport extends Message<QuicDownstreamTransport> {
  /**
   * @generated from field: envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext downstream_tls_context = 1;
   */
  downstreamTlsContext?: DownstreamTlsContext;

  /**
   * If false, QUIC will tell TLS to reject any early data and to stop issuing 0-RTT credentials with resumption session tickets. This will prevent clients from sending 0-RTT requests.
   * Default to true.
   *
   * @generated from field: google.protobuf.BoolValue enable_early_data = 2;
   */
  enableEarlyData?: boolean;

  constructor(data?: PartialMessage<QuicDownstreamTransport>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuicDownstreamTransport;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuicDownstreamTransport;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuicDownstreamTransport;

  static equals(a: QuicDownstreamTransport | PlainMessage<QuicDownstreamTransport> | undefined, b: QuicDownstreamTransport | PlainMessage<QuicDownstreamTransport> | undefined): boolean;
}

/**
 * Configuration for Upstream QUIC transport socket. This provides Google's implementation of Google QUIC and IETF QUIC to Envoy.
 *
 * @generated from message envoy.extensions.transport_sockets.quic.v3.QuicUpstreamTransport
 */
export declare class QuicUpstreamTransport extends Message<QuicUpstreamTransport> {
  /**
   * @generated from field: envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext upstream_tls_context = 1;
   */
  upstreamTlsContext?: UpstreamTlsContext;

  constructor(data?: PartialMessage<QuicUpstreamTransport>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.transport_sockets.quic.v3.QuicUpstreamTransport";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuicUpstreamTransport;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuicUpstreamTransport;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuicUpstreamTransport;

  static equals(a: QuicUpstreamTransport | PlainMessage<QuicUpstreamTransport> | undefined, b: QuicUpstreamTransport | PlainMessage<QuicUpstreamTransport> | undefined): boolean;
}

