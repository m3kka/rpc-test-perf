// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/transport_sockets/internal_upstream/v3/internal_upstream.proto (package envoy.extensions.transport_sockets.internal_upstream.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { TransportSocket } from "../../../../config/core/v3/base_pb.js";
import { MetadataKind } from "../../../../type/metadata/v3/metadata_pb.js";

/**
 * Configuration for the internal upstream address. An internal address defines
 * a loopback user space socket residing in the same proxy instance. This
 * extension allows passing additional structured state across the user space
 * socket in addition to the regular byte stream. The purpose is to facilitate
 * communication between filters on the downstream and the upstream internal
 * connections. All filter state objects that are shared with the upstream
 * connection are also shared with the downstream internal connection using
 * this transport socket.
 *
 * @generated from message envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport
 */
export const InternalUpstreamTransport = proto3.makeMessageType(
  "envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport",
  () => [
    { no: 1, name: "passthrough_metadata", kind: "message", T: InternalUpstreamTransport_MetadataValueSource, repeated: true },
    { no: 3, name: "transport_socket", kind: "message", T: TransportSocket },
  ],
);

/**
 * Describes the location of the imported metadata value.
 * If the metadata with the given name is not present at the source location,
 * then no metadata is passed through for this particular instance.
 *
 * @generated from message envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport.MetadataValueSource
 */
export const InternalUpstreamTransport_MetadataValueSource = proto3.makeMessageType(
  "envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport.MetadataValueSource",
  () => [
    { no: 1, name: "kind", kind: "message", T: MetadataKind },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "InternalUpstreamTransport_MetadataValueSource"},
);

