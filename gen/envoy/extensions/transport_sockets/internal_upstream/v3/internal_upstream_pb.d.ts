// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/transport_sockets/internal_upstream/v3/internal_upstream.proto (package envoy.extensions.transport_sockets.internal_upstream.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { TransportSocket } from "../../../../config/core/v3/base_pb.js";
import type { MetadataKind } from "../../../../type/metadata/v3/metadata_pb.js";

/**
 * Configuration for the internal upstream address. An internal address defines
 * a loopback user space socket residing in the same proxy instance. This
 * extension allows passing additional structured state across the user space
 * socket in addition to the regular byte stream. The purpose is to facilitate
 * communication between filters on the downstream and the upstream internal
 * connections. All filter state objects that are shared with the upstream
 * connection are also shared with the downstream internal connection using
 * this transport socket.
 *
 * @generated from message envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport
 */
export declare class InternalUpstreamTransport extends Message<InternalUpstreamTransport> {
  /**
   * Specifies the metadata namespaces and values to insert into the downstream
   * internal connection dynamic metadata when an internal address is used as a
   * host. If the destination name is repeated across two metadata source
   * locations, and both locations contain the metadata with the given name,
   * then the latter in the list overrides the former.
   *
   * @generated from field: repeated envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport.MetadataValueSource passthrough_metadata = 1;
   */
  passthroughMetadata: InternalUpstreamTransport_MetadataValueSource[];

  /**
   * The underlying transport socket being wrapped.
   *
   * @generated from field: envoy.config.core.v3.TransportSocket transport_socket = 3;
   */
  transportSocket?: TransportSocket;

  constructor(data?: PartialMessage<InternalUpstreamTransport>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InternalUpstreamTransport;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InternalUpstreamTransport;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InternalUpstreamTransport;

  static equals(a: InternalUpstreamTransport | PlainMessage<InternalUpstreamTransport> | undefined, b: InternalUpstreamTransport | PlainMessage<InternalUpstreamTransport> | undefined): boolean;
}

/**
 * Describes the location of the imported metadata value.
 * If the metadata with the given name is not present at the source location,
 * then no metadata is passed through for this particular instance.
 *
 * @generated from message envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport.MetadataValueSource
 */
export declare class InternalUpstreamTransport_MetadataValueSource extends Message<InternalUpstreamTransport_MetadataValueSource> {
  /**
   * Specifies what kind of metadata.
   *
   * @generated from field: envoy.type.metadata.v3.MetadataKind kind = 1;
   */
  kind?: MetadataKind;

  /**
   * Name is the filter namespace used in the dynamic metadata.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<InternalUpstreamTransport_MetadataValueSource>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport.MetadataValueSource";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InternalUpstreamTransport_MetadataValueSource;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InternalUpstreamTransport_MetadataValueSource;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InternalUpstreamTransport_MetadataValueSource;

  static equals(a: InternalUpstreamTransport_MetadataValueSource | PlainMessage<InternalUpstreamTransport_MetadataValueSource> | undefined, b: InternalUpstreamTransport_MetadataValueSource | PlainMessage<InternalUpstreamTransport_MetadataValueSource> | undefined): boolean;
}

