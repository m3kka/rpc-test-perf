// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/clusters/dynamic_forward_proxy/v3/cluster.proto (package envoy.extensions.clusters.dynamic_forward_proxy.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3, UInt32Value } from "@bufbuild/protobuf";
import { DnsCacheConfig } from "../../../common/dynamic_forward_proxy/v3/dns_cache_pb.js";
import { Cluster_LbPolicy } from "../../../../config/cluster/v3/cluster_pb.js";
import { SocketAddress } from "../../../../config/core/v3/address_pb.js";

/**
 * Configuration for the dynamic forward proxy cluster. See the :ref:`architecture overview
 * <arch_overview_http_dynamic_forward_proxy>` for more information.
 * [#extension: envoy.clusters.dynamic_forward_proxy]
 *
 * @generated from message envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
 */
export const ClusterConfig = proto3.makeMessageType(
  "envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig",
  () => [
    { no: 1, name: "dns_cache_config", kind: "message", T: DnsCacheConfig, oneof: "cluster_implementation_specifier" },
    { no: 4, name: "sub_clusters_config", kind: "message", T: SubClustersConfig, oneof: "cluster_implementation_specifier" },
    { no: 2, name: "allow_insecure_cluster_options", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "allow_coalesced_connections", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Configuration for sub clusters. Hard code STRICT_DNS cluster type now.
 *
 * @generated from message envoy.extensions.clusters.dynamic_forward_proxy.v3.SubClustersConfig
 */
export const SubClustersConfig = proto3.makeMessageType(
  "envoy.extensions.clusters.dynamic_forward_proxy.v3.SubClustersConfig",
  () => [
    { no: 1, name: "lb_policy", kind: "enum", T: proto3.getEnumType(Cluster_LbPolicy) },
    { no: 2, name: "max_sub_clusters", kind: "message", T: UInt32Value },
    { no: 3, name: "sub_cluster_ttl", kind: "message", T: Duration },
    { no: 4, name: "preresolve_clusters", kind: "message", T: SocketAddress, repeated: true },
  ],
);

