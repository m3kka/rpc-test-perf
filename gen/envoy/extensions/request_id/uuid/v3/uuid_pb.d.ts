// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/request_id/uuid/v3/uuid.proto (package envoy.extensions.request_id.uuid.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Configuration for the default UUID request ID extension which has the following behavior:
 *
 * 1. Request ID is propagated using the :ref:`x-request-id
 *    <config_http_conn_man_headers_x-request-id>` header.
 *
 * 2. Request ID is a universally unique identifier `(UUID4)
 *    <https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)>`_.
 *
 * 3. Tracing decision (sampled, forced, etc) is set in 14th nibble of the UUID. By default this will
 *    overwrite existing UUIDs received in the ``x-request-id`` header if the trace sampling decision
 *    is changed. The 14th nibble of the UUID4 has been chosen because it is fixed to '4' by the
 *    standard. Thus, '4' indicates a default UUID and no trace status. This nibble is swapped to:
 *
 *      a. '9': Sampled.
 *      b. 'a': Force traced due to server-side override.
 *      c. 'b': Force traced due to client-side request ID joining.
 *
 *    See the :ref:`x-request-id <config_http_conn_man_headers_x-request-id>` documentation for
 *    more information.
 *
 * @generated from message envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig
 */
export declare class UuidRequestIdConfig extends Message<UuidRequestIdConfig> {
  /**
   * Whether the implementation alters the UUID to contain the trace sampling decision as per the
   * ``UuidRequestIdConfig`` message documentation. This defaults to true. If disabled no
   * modification to the UUID will be performed. It is important to note that if disabled,
   * stable sampling of traces, access logs, etc. will no longer work and only random sampling will
   * be possible.
   *
   * @generated from field: google.protobuf.BoolValue pack_trace_reason = 1;
   */
  packTraceReason?: boolean;

  /**
   * Set whether to use :ref:`x-request-id<config_http_conn_man_headers_x-request-id>` for sampling or not.
   * This defaults to true. See the :ref:`context propagation <arch_overview_tracing_context_propagation>`
   * overview for more information.
   *
   * @generated from field: google.protobuf.BoolValue use_request_id_for_trace_sampling = 2;
   */
  useRequestIdForTraceSampling?: boolean;

  constructor(data?: PartialMessage<UuidRequestIdConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UuidRequestIdConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UuidRequestIdConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UuidRequestIdConfig;

  static equals(a: UuidRequestIdConfig | PlainMessage<UuidRequestIdConfig> | undefined, b: UuidRequestIdConfig | PlainMessage<UuidRequestIdConfig> | undefined): boolean;
}

