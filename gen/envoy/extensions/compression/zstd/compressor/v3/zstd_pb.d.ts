// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/compression/zstd/compressor/v3/zstd.proto (package envoy.extensions.compression.zstd.compressor.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { DataSource } from "../../../../../config/core/v3/base_pb.js";

/**
 * [#next-free-field: 6]
 *
 * @generated from message envoy.extensions.compression.zstd.compressor.v3.Zstd
 */
export declare class Zstd extends Message<Zstd> {
  /**
   * Set compression parameters according to pre-defined compression level table.
   * Note that exact compression parameters are dynamically determined,
   * depending on both compression level and source content size (when known).
   * Value 0 means default, and default level is 3.
   * Setting a level does not automatically set all other compression parameters
   * to default. Setting this will however eventually dynamically impact the compression
   * parameters which have not been manually set. The manually set
   * ones will 'stick'.
   *
   * @generated from field: google.protobuf.UInt32Value compression_level = 1;
   */
  compressionLevel?: number;

  /**
   * A 32-bits checksum of content is written at end of frame. If not set, defaults to false.
   *
   * @generated from field: bool enable_checksum = 2;
   */
  enableChecksum: boolean;

  /**
   * The higher the value of selected strategy, the more complex it is,
   * resulting in stronger and slower compression.
   * Special: value 0 means "use default strategy".
   *
   * @generated from field: envoy.extensions.compression.zstd.compressor.v3.Zstd.Strategy strategy = 3;
   */
  strategy: Zstd_Strategy;

  /**
   * A dictionary for compression. Zstd offers dictionary compression, which greatly improves
   * efficiency on small files and messages. Each dictionary will be generated with a dictionary ID
   * that can be used to search the same dictionary during decompression.
   * Please refer to `zstd manual <https://github.com/facebook/zstd/blob/dev/programs/zstd.1.md#dictionary-builder>`_
   * to train a specific dictionary for compression.
   *
   * @generated from field: envoy.config.core.v3.DataSource dictionary = 4;
   */
  dictionary?: DataSource;

  /**
   * Value for compressor's next output buffer. If not set, defaults to 4096.
   *
   * @generated from field: google.protobuf.UInt32Value chunk_size = 5;
   */
  chunkSize?: number;

  constructor(data?: PartialMessage<Zstd>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.compression.zstd.compressor.v3.Zstd";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Zstd;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Zstd;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Zstd;

  static equals(a: Zstd | PlainMessage<Zstd> | undefined, b: Zstd | PlainMessage<Zstd> | undefined): boolean;
}

/**
 * Reference to http://facebook.github.io/zstd/zstd_manual.html
 *
 * @generated from enum envoy.extensions.compression.zstd.compressor.v3.Zstd.Strategy
 */
export declare enum Zstd_Strategy {
  /**
   * @generated from enum value: DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * @generated from enum value: FAST = 1;
   */
  FAST = 1,

  /**
   * @generated from enum value: DFAST = 2;
   */
  DFAST = 2,

  /**
   * @generated from enum value: GREEDY = 3;
   */
  GREEDY = 3,

  /**
   * @generated from enum value: LAZY = 4;
   */
  LAZY = 4,

  /**
   * @generated from enum value: LAZY2 = 5;
   */
  LAZY2 = 5,

  /**
   * @generated from enum value: BTLAZY2 = 6;
   */
  BTLAZY2 = 6,

  /**
   * @generated from enum value: BTOPT = 7;
   */
  BTOPT = 7,

  /**
   * @generated from enum value: BTULTRA = 8;
   */
  BTULTRA = 8,

  /**
   * @generated from enum value: BTULTRA2 = 9;
   */
  BTULTRA2 = 9,
}

