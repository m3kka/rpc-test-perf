// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/matching/input_matchers/runtime_fraction/v3/runtime_fraction.proto (package envoy.extensions.matching.input_matchers.runtime_fraction.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { RuntimeFractionalPercent } from "../../../../../config/core/v3/base_pb.js";

/**
 * The runtime fraction matchers computes a hash from the input and matches if runtime feature is enabled
 * for the the resulting hash. Every time the input is considered for a match, its hash must fall within
 * the percentage of matches indicated by this field. For a fraction N/D, a number is computed as a hash
 * of the input on a field in the range [0,D). If the number is less than or equal to the value of the
 * numerator N, the matcher evaluates to true. A runtime_fraction input matcher can be used to gradually
 * roll out matcher changes without requiring full code or configuration deployments.
 * Note that distribution of matching results is only as good as one of the input.
 *
 * @generated from message envoy.extensions.matching.input_matchers.runtime_fraction.v3.RuntimeFraction
 */
export const RuntimeFraction = proto3.makeMessageType(
  "envoy.extensions.matching.input_matchers.runtime_fraction.v3.RuntimeFraction",
  () => [
    { no: 1, name: "runtime_fraction", kind: "message", T: RuntimeFractionalPercent },
    { no: 2, name: "seed", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

