// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/quic/crypto_stream/v3/crypto_stream.proto (package envoy.extensions.quic.crypto_stream.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Configuration for the default QUIC server crypto stream provided by QUICHE.
 *
 * @generated from message envoy.extensions.quic.crypto_stream.v3.CryptoServerStreamConfig
 */
export declare class CryptoServerStreamConfig extends Message<CryptoServerStreamConfig> {
  constructor(data?: PartialMessage<CryptoServerStreamConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.quic.crypto_stream.v3.CryptoServerStreamConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CryptoServerStreamConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CryptoServerStreamConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CryptoServerStreamConfig;

  static equals(a: CryptoServerStreamConfig | PlainMessage<CryptoServerStreamConfig> | undefined, b: CryptoServerStreamConfig | PlainMessage<CryptoServerStreamConfig> | undefined): boolean;
}

