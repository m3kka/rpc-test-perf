// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/load_balancing_policies/subset/v3/subset.proto (package envoy.extensions.load_balancing_policies.subset.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Struct } from "@bufbuild/protobuf";
import { LoadBalancingPolicy } from "../../../../config/cluster/v3/cluster_pb.js";

/**
 * Optionally divide the endpoints in this cluster into subsets defined by
 * endpoint metadata and selected by route and weighted cluster metadata.
 * [#next-free-field: 10]
 *
 * @generated from message envoy.extensions.load_balancing_policies.subset.v3.Subset
 */
export const Subset = proto3.makeMessageType(
  "envoy.extensions.load_balancing_policies.subset.v3.Subset",
  () => [
    { no: 1, name: "fallback_policy", kind: "enum", T: proto3.getEnumType(Subset_LbSubsetFallbackPolicy) },
    { no: 2, name: "default_subset", kind: "message", T: Struct },
    { no: 3, name: "subset_selectors", kind: "message", T: Subset_LbSubsetSelector, repeated: true },
    { no: 4, name: "locality_weight_aware", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "scale_locality_weight", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "panic_mode_any", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "list_as_any", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "metadata_fallback_policy", kind: "enum", T: proto3.getEnumType(Subset_LbSubsetMetadataFallbackPolicy) },
    { no: 9, name: "subset_lb_policy", kind: "message", T: LoadBalancingPolicy },
  ],
);

/**
 * If NO_FALLBACK is selected, a result
 * equivalent to no healthy hosts is reported. If ANY_ENDPOINT is selected,
 * any cluster endpoint may be returned (subject to policy, health checks,
 * etc). If DEFAULT_SUBSET is selected, load balancing is performed over the
 * endpoints matching the values from the default_subset field.
 *
 * @generated from enum envoy.extensions.load_balancing_policies.subset.v3.Subset.LbSubsetFallbackPolicy
 */
export const Subset_LbSubsetFallbackPolicy = proto3.makeEnum(
  "envoy.extensions.load_balancing_policies.subset.v3.Subset.LbSubsetFallbackPolicy",
  [
    {no: 0, name: "NO_FALLBACK"},
    {no: 1, name: "ANY_ENDPOINT"},
    {no: 2, name: "DEFAULT_SUBSET"},
  ],
);

/**
 * @generated from enum envoy.extensions.load_balancing_policies.subset.v3.Subset.LbSubsetMetadataFallbackPolicy
 */
export const Subset_LbSubsetMetadataFallbackPolicy = proto3.makeEnum(
  "envoy.extensions.load_balancing_policies.subset.v3.Subset.LbSubsetMetadataFallbackPolicy",
  [
    {no: 0, name: "METADATA_NO_FALLBACK"},
    {no: 1, name: "FALLBACK_LIST"},
  ],
);

/**
 * Specifications for subsets.
 *
 * @generated from message envoy.extensions.load_balancing_policies.subset.v3.Subset.LbSubsetSelector
 */
export const Subset_LbSubsetSelector = proto3.makeMessageType(
  "envoy.extensions.load_balancing_policies.subset.v3.Subset.LbSubsetSelector",
  () => [
    { no: 1, name: "keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "single_host_per_subset", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "fallback_policy", kind: "enum", T: proto3.getEnumType(Subset_LbSubsetSelector_LbSubsetSelectorFallbackPolicy) },
    { no: 3, name: "fallback_keys_subset", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
  {localName: "Subset_LbSubsetSelector"},
);

/**
 * Allows to override top level fallback policy per selector.
 *
 * @generated from enum envoy.extensions.load_balancing_policies.subset.v3.Subset.LbSubsetSelector.LbSubsetSelectorFallbackPolicy
 */
export const Subset_LbSubsetSelector_LbSubsetSelectorFallbackPolicy = proto3.makeEnum(
  "envoy.extensions.load_balancing_policies.subset.v3.Subset.LbSubsetSelector.LbSubsetSelectorFallbackPolicy",
  [
    {no: 0, name: "NOT_DEFINED"},
    {no: 1, name: "NO_FALLBACK"},
    {no: 2, name: "ANY_ENDPOINT"},
    {no: 3, name: "DEFAULT_SUBSET"},
    {no: 4, name: "KEYS_SUBSET"},
  ],
);

