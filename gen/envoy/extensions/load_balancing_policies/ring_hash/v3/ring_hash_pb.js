// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/load_balancing_policies/ring_hash/v3/ring_hash.proto (package envoy.extensions.load_balancing_policies.ring_hash.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, UInt32Value, UInt64Value } from "@bufbuild/protobuf";
import { ConsistentHashingLbConfig, LocalityLbConfig_LocalityWeightedLbConfig } from "../../common/v3/common_pb.js";

/**
 * This configuration allows the built-in RING_HASH LB policy to be configured via the LB policy
 * extension point. See the :ref:`load balancing architecture overview
 * <arch_overview_load_balancing_types>` for more information.
 * [#next-free-field: 8]
 *
 * @generated from message envoy.extensions.load_balancing_policies.ring_hash.v3.RingHash
 */
export const RingHash = proto3.makeMessageType(
  "envoy.extensions.load_balancing_policies.ring_hash.v3.RingHash",
  () => [
    { no: 1, name: "hash_function", kind: "enum", T: proto3.getEnumType(RingHash_HashFunction) },
    { no: 2, name: "minimum_ring_size", kind: "message", T: UInt64Value },
    { no: 3, name: "maximum_ring_size", kind: "message", T: UInt64Value },
    { no: 4, name: "use_hostname_for_hashing", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "hash_balance_factor", kind: "message", T: UInt32Value },
    { no: 6, name: "consistent_hashing_lb_config", kind: "message", T: ConsistentHashingLbConfig },
    { no: 7, name: "locality_weighted_lb_config", kind: "message", T: LocalityLbConfig_LocalityWeightedLbConfig },
  ],
);

/**
 * The hash function used to hash hosts onto the ketama ring.
 *
 * @generated from enum envoy.extensions.load_balancing_policies.ring_hash.v3.RingHash.HashFunction
 */
export const RingHash_HashFunction = proto3.makeEnum(
  "envoy.extensions.load_balancing_policies.ring_hash.v3.RingHash.HashFunction",
  [
    {no: 0, name: "DEFAULT_HASH"},
    {no: 1, name: "XX_HASH"},
    {no: 2, name: "MURMUR_HASH_2"},
  ],
);

