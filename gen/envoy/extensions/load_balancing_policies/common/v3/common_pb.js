// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/load_balancing_policies/common/v3/common.proto (package envoy.extensions.load_balancing_policies.common.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3, UInt32Value, UInt64Value } from "@bufbuild/protobuf";
import { Percent } from "../../../../type/v3/percent_pb.js";
import { RuntimeDouble } from "../../../../config/core/v3/base_pb.js";

/**
 * @generated from message envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig
 */
export const LocalityLbConfig = proto3.makeMessageType(
  "envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig",
  () => [
    { no: 1, name: "zone_aware_lb_config", kind: "message", T: LocalityLbConfig_ZoneAwareLbConfig, oneof: "locality_config_specifier" },
    { no: 2, name: "locality_weighted_lb_config", kind: "message", T: LocalityLbConfig_LocalityWeightedLbConfig, oneof: "locality_config_specifier" },
  ],
);

/**
 * Configuration for :ref:`zone aware routing
 * <arch_overview_load_balancing_zone_aware_routing>`.
 *
 * @generated from message envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig.ZoneAwareLbConfig
 */
export const LocalityLbConfig_ZoneAwareLbConfig = proto3.makeMessageType(
  "envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig.ZoneAwareLbConfig",
  () => [
    { no: 1, name: "routing_enabled", kind: "message", T: Percent },
    { no: 2, name: "min_cluster_size", kind: "message", T: UInt64Value },
    { no: 3, name: "fail_traffic_on_panic", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "LocalityLbConfig_ZoneAwareLbConfig"},
);

/**
 * Configuration for :ref:`locality weighted load balancing
 * <arch_overview_load_balancing_locality_weighted_lb>`
 *
 * @generated from message envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig.LocalityWeightedLbConfig
 */
export const LocalityLbConfig_LocalityWeightedLbConfig = proto3.makeMessageType(
  "envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig.LocalityWeightedLbConfig",
  [],
  {localName: "LocalityLbConfig_LocalityWeightedLbConfig"},
);

/**
 * Configuration for :ref:`slow start mode <arch_overview_load_balancing_slow_start>`.
 *
 * @generated from message envoy.extensions.load_balancing_policies.common.v3.SlowStartConfig
 */
export const SlowStartConfig = proto3.makeMessageType(
  "envoy.extensions.load_balancing_policies.common.v3.SlowStartConfig",
  () => [
    { no: 1, name: "slow_start_window", kind: "message", T: Duration },
    { no: 2, name: "aggression", kind: "message", T: RuntimeDouble },
    { no: 3, name: "min_weight_percent", kind: "message", T: Percent },
  ],
);

/**
 * Common Configuration for all consistent hashing load balancers (MaglevLb, RingHashLb, etc.)
 *
 * @generated from message envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig
 */
export const ConsistentHashingLbConfig = proto3.makeMessageType(
  "envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig",
  () => [
    { no: 1, name: "use_hostname_for_hashing", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "hash_balance_factor", kind: "message", T: UInt32Value },
  ],
);

