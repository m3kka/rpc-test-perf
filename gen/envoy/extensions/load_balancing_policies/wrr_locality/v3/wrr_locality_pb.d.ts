// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/load_balancing_policies/wrr_locality/v3/wrr_locality.proto (package envoy.extensions.load_balancing_policies.wrr_locality.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { LoadBalancingPolicy } from "../../../../config/cluster/v3/cluster_pb.js";

/**
 * Configuration for the wrr_locality LB policy. See the :ref:`load balancing architecture overview
 * <arch_overview_load_balancing_types>` for more information.
 *
 * @generated from message envoy.extensions.load_balancing_policies.wrr_locality.v3.WrrLocality
 */
export declare class WrrLocality extends Message<WrrLocality> {
  /**
   * The child LB policy to create for endpoint-picking within the chosen locality.
   *
   * @generated from field: envoy.config.cluster.v3.LoadBalancingPolicy endpoint_picking_policy = 1;
   */
  endpointPickingPolicy?: LoadBalancingPolicy;

  constructor(data?: PartialMessage<WrrLocality>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.load_balancing_policies.wrr_locality.v3.WrrLocality";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WrrLocality;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WrrLocality;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WrrLocality;

  static equals(a: WrrLocality | PlainMessage<WrrLocality> | undefined, b: WrrLocality | PlainMessage<WrrLocality> | undefined): boolean;
}

