// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/load_balancing_policies/round_robin/v3/round_robin.proto (package envoy.extensions.load_balancing_policies.round_robin.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { LocalityLbConfig, SlowStartConfig } from "../../common/v3/common_pb.js";

/**
 * This configuration allows the built-in ROUND_ROBIN LB policy to be configured via the LB policy
 * extension point. See the :ref:`load balancing architecture overview
 * <arch_overview_load_balancing_types>` for more information.
 *
 * @generated from message envoy.extensions.load_balancing_policies.round_robin.v3.RoundRobin
 */
export declare class RoundRobin extends Message<RoundRobin> {
  /**
   * Configuration for slow start mode.
   * If this configuration is not set, slow start will not be not enabled.
   *
   * @generated from field: envoy.extensions.load_balancing_policies.common.v3.SlowStartConfig slow_start_config = 1;
   */
  slowStartConfig?: SlowStartConfig;

  /**
   * Configuration for local zone aware load balancing or locality weighted load balancing.
   *
   * @generated from field: envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig locality_lb_config = 2;
   */
  localityLbConfig?: LocalityLbConfig;

  constructor(data?: PartialMessage<RoundRobin>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.load_balancing_policies.round_robin.v3.RoundRobin";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoundRobin;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoundRobin;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoundRobin;

  static equals(a: RoundRobin | PlainMessage<RoundRobin> | undefined, b: RoundRobin | PlainMessage<RoundRobin> | undefined): boolean;
}

