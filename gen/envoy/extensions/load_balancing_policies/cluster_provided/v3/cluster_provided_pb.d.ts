// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/load_balancing_policies/cluster_provided/v3/cluster_provided.proto (package envoy.extensions.load_balancing_policies.cluster_provided.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * The cluster provided load balancing policy allows cluster to specify its own load balancing.
 * If this extension is configured, the target cluster must provide load balancer when the cluster
 * is created.
 *
 * ..note::
 *   Cluster provided load balancing policy could not be used as sub-policy of other hierarchical
 *   load balancing policies, such as subset load balancing policy.
 *
 * @generated from message envoy.extensions.load_balancing_policies.cluster_provided.v3.ClusterProvided
 */
export declare class ClusterProvided extends Message<ClusterProvided> {
  constructor(data?: PartialMessage<ClusterProvided>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.load_balancing_policies.cluster_provided.v3.ClusterProvided";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterProvided;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterProvided;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterProvided;

  static equals(a: ClusterProvided | PlainMessage<ClusterProvided> | undefined, b: ClusterProvided | PlainMessage<ClusterProvided> | undefined): boolean;
}

