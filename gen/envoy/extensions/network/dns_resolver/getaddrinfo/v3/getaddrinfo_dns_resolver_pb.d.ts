// @generated by protoc-gen-es v1.5.1
// @generated from file envoy/extensions/network/dns_resolver/getaddrinfo/v3/getaddrinfo_dns_resolver.proto (package envoy.extensions.network.dns_resolver.getaddrinfo.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Configuration for getaddrinfo DNS resolver. This resolver will use the system's getaddrinfo()
 * function to resolve hosts.
 *
 * .. attention::
 *
 *   This resolver uses a single background thread to do resolutions. As such, it is not currently
 *   advised for use in situations requiring a high resolution rate. A thread pool can be added
 *   in the future if needed.
 *
 * .. attention::
 *
 *   Resolutions currently use a hard coded TTL of 60s because the getaddrinfo() API does not
 *   provide the actual TTL. Configuration for this can be added in the future if needed.
 *
 * @generated from message envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig
 */
export declare class GetAddrInfoDnsResolverConfig extends Message<GetAddrInfoDnsResolverConfig> {
  constructor(data?: PartialMessage<GetAddrInfoDnsResolverConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAddrInfoDnsResolverConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAddrInfoDnsResolverConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAddrInfoDnsResolverConfig;

  static equals(a: GetAddrInfoDnsResolverConfig | PlainMessage<GetAddrInfoDnsResolverConfig> | undefined, b: GetAddrInfoDnsResolverConfig | PlainMessage<GetAddrInfoDnsResolverConfig> | undefined): boolean;
}

