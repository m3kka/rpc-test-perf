// @generated by protobuf-ts 2.9.2
// @generated from protobuf file "envoy/extensions/network/dns_resolver/getaddrinfo/v3/getaddrinfo_dns_resolver.proto" (package "envoy.extensions.network.dns_resolver.getaddrinfo.v3", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// [#protodoc-title: getaddrinfo DNS resolver]
// [#extension: envoy.network.dns_resolver.getaddrinfo]

/**
 * Configuration for getaddrinfo DNS resolver. This resolver will use the system's getaddrinfo()
 * function to resolve hosts.
 *
 * .. attention::
 *
 *   This resolver uses a single background thread to do resolutions. As such, it is not currently
 *   advised for use in situations requiring a high resolution rate. A thread pool can be added
 *   in the future if needed.
 *
 * .. attention::
 *
 *   Resolutions currently use a hard coded TTL of 60s because the getaddrinfo() API does not
 *   provide the actual TTL. Configuration for this can be added in the future if needed.
 *
 * @generated from protobuf message envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig
 */
export interface GetAddrInfoDnsResolverConfig {
}
// @generated message type with reflection information, may provide speed optimized methods
class GetAddrInfoDnsResolverConfig$Type extends MessageType<GetAddrInfoDnsResolverConfig> {
    constructor() {
        super("envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig", []);
    }
    create(value?: PartialMessage<GetAddrInfoDnsResolverConfig>): GetAddrInfoDnsResolverConfig {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetAddrInfoDnsResolverConfig>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAddrInfoDnsResolverConfig): GetAddrInfoDnsResolverConfig {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetAddrInfoDnsResolverConfig, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig
 */
export const GetAddrInfoDnsResolverConfig = new GetAddrInfoDnsResolverConfig$Type();
