// source: envoy/config/core/v3/protocol.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.core.v3.AlternateProtocolsCacheOptions');
goog.provide('proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.core.v3.TypedExtensionConfig');
goog.require('proto.google.protobuf.UInt32Value');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.core.v3.AlternateProtocolsCacheOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.displayName = 'proto.envoy.config.core.v3.AlternateProtocolsCacheOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.displayName = 'proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxEntries: (f = msg.getMaxEntries()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    keyValueStoreConfig: (f = msg.getKeyValueStoreConfig()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    prepopulatedEntriesList: jspb.Message.toObjectList(msg.getPrepopulatedEntriesList(),
    proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.toObject, includeInstance),
    canonicalSuffixesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.core.v3.AlternateProtocolsCacheOptions;
  return proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxEntries(value);
      break;
    case 3:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setKeyValueStoreConfig(value);
      break;
    case 4:
      var value = new proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry;
      reader.readMessage(value,proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.deserializeBinaryFromReader);
      msg.addPrepopulatedEntries(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCanonicalSuffixes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxEntries();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getKeyValueStoreConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getPrepopulatedEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.serializeBinaryToWriter
    );
  }
  f = message.getCanonicalSuffixesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry;
  return proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string hostname = 1;
 * @return {string}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.prototype.setHostname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.UInt32Value max_entries = 2;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.getMaxEntries = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 2));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
*/
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.setMaxEntries = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.clearMaxEntries = function() {
  return this.setMaxEntries(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.hasMaxEntries = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypedExtensionConfig key_value_store_config = 3;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.getKeyValueStoreConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 3));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
*/
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.setKeyValueStoreConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.clearKeyValueStoreConfig = function() {
  return this.setKeyValueStoreConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.hasKeyValueStoreConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated AlternateProtocolsCacheEntry prepopulated_entries = 4;
 * @return {!Array<!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry>}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.getPrepopulatedEntriesList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry, 4));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry>} value
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
*/
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.setPrepopulatedEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.addPrepopulatedEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.clearPrepopulatedEntriesList = function() {
  return this.setPrepopulatedEntriesList([]);
};


/**
 * repeated string canonical_suffixes = 5;
 * @return {!Array<string>}
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.getCanonicalSuffixesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.setCanonicalSuffixesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.addCanonicalSuffixes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.core.v3.AlternateProtocolsCacheOptions} returns this
 */
proto.envoy.config.core.v3.AlternateProtocolsCacheOptions.prototype.clearCanonicalSuffixesList = function() {
  return this.setCanonicalSuffixesList([]);
};


