// source: envoy/extensions/filters/http/oauth2/v3/oauth.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config');
goog.provide('proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.core.v3.HttpUri');
goog.require('proto.envoy.config.route.v3.HeaderMatcher');
goog.require('proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials');
goog.require('proto.envoy.type.matcher.v3.PathMatcher');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.displayName = 'proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.repeatedFields_ = [8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokenEndpoint: (f = msg.getTokenEndpoint()) && proto.envoy.config.core.v3.HttpUri.toObject(includeInstance, f),
    authorizationEndpoint: jspb.Message.getFieldWithDefault(msg, 2, ""),
    credentials: (f = msg.getCredentials()) && proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.toObject(includeInstance, f),
    redirectUri: jspb.Message.getFieldWithDefault(msg, 4, ""),
    redirectPathMatcher: (f = msg.getRedirectPathMatcher()) && proto.envoy.type.matcher.v3.PathMatcher.toObject(includeInstance, f),
    signoutPath: (f = msg.getSignoutPath()) && proto.envoy.type.matcher.v3.PathMatcher.toObject(includeInstance, f),
    forwardBearerToken: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    passThroughMatcherList: jspb.Message.toObjectList(msg.getPassThroughMatcherList(),
    proto.envoy.config.route.v3.HeaderMatcher.toObject, includeInstance),
    authScopesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    resourcesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    authType: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config;
  return proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.core.v3.HttpUri;
      reader.readMessage(value,proto.envoy.config.core.v3.HttpUri.deserializeBinaryFromReader);
      msg.setTokenEndpoint(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorizationEndpoint(value);
      break;
    case 3:
      var value = new proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials;
      reader.readMessage(value,proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.deserializeBinaryFromReader);
      msg.setCredentials(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectUri(value);
      break;
    case 5:
      var value = new proto.envoy.type.matcher.v3.PathMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.PathMatcher.deserializeBinaryFromReader);
      msg.setRedirectPathMatcher(value);
      break;
    case 6:
      var value = new proto.envoy.type.matcher.v3.PathMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.PathMatcher.deserializeBinaryFromReader);
      msg.setSignoutPath(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForwardBearerToken(value);
      break;
    case 8:
      var value = new proto.envoy.config.route.v3.HeaderMatcher;
      reader.readMessage(value,proto.envoy.config.route.v3.HeaderMatcher.deserializeBinaryFromReader);
      msg.addPassThroughMatcher(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addAuthScopes(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addResources(value);
      break;
    case 11:
      var value = /** @type {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType} */ (reader.readEnum());
      msg.setAuthType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokenEndpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.core.v3.HttpUri.serializeBinaryToWriter
    );
  }
  f = message.getAuthorizationEndpoint();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCredentials();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.serializeBinaryToWriter
    );
  }
  f = message.getRedirectUri();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRedirectPathMatcher();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.type.matcher.v3.PathMatcher.serializeBinaryToWriter
    );
  }
  f = message.getSignoutPath();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.type.matcher.v3.PathMatcher.serializeBinaryToWriter
    );
  }
  f = message.getForwardBearerToken();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getPassThroughMatcherList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.envoy.config.route.v3.HeaderMatcher.serializeBinaryToWriter
    );
  }
  f = message.getAuthScopesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getAuthType();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType = {
  URL_ENCODED_BODY: 0,
  BASIC_AUTH: 1
};

/**
 * optional envoy.config.core.v3.HttpUri token_endpoint = 1;
 * @return {?proto.envoy.config.core.v3.HttpUri}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getTokenEndpoint = function() {
  return /** @type{?proto.envoy.config.core.v3.HttpUri} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.HttpUri, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.HttpUri|undefined} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
*/
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setTokenEndpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.clearTokenEndpoint = function() {
  return this.setTokenEndpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.hasTokenEndpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string authorization_endpoint = 2;
 * @return {string}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getAuthorizationEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setAuthorizationEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OAuth2Credentials credentials = 3;
 * @return {?proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getCredentials = function() {
  return /** @type{?proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials, 3));
};


/**
 * @param {?proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials|undefined} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
*/
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setCredentials = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.clearCredentials = function() {
  return this.setCredentials(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.hasCredentials = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string redirect_uri = 4;
 * @return {string}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getRedirectUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setRedirectUri = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5;
 * @return {?proto.envoy.type.matcher.v3.PathMatcher}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getRedirectPathMatcher = function() {
  return /** @type{?proto.envoy.type.matcher.v3.PathMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.PathMatcher, 5));
};


/**
 * @param {?proto.envoy.type.matcher.v3.PathMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
*/
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setRedirectPathMatcher = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.clearRedirectPathMatcher = function() {
  return this.setRedirectPathMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.hasRedirectPathMatcher = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional envoy.type.matcher.v3.PathMatcher signout_path = 6;
 * @return {?proto.envoy.type.matcher.v3.PathMatcher}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getSignoutPath = function() {
  return /** @type{?proto.envoy.type.matcher.v3.PathMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.PathMatcher, 6));
};


/**
 * @param {?proto.envoy.type.matcher.v3.PathMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
*/
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setSignoutPath = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.clearSignoutPath = function() {
  return this.setSignoutPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.hasSignoutPath = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool forward_bearer_token = 7;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getForwardBearerToken = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setForwardBearerToken = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * repeated envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;
 * @return {!Array<!proto.envoy.config.route.v3.HeaderMatcher>}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getPassThroughMatcherList = function() {
  return /** @type{!Array<!proto.envoy.config.route.v3.HeaderMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.route.v3.HeaderMatcher, 8));
};


/**
 * @param {!Array<!proto.envoy.config.route.v3.HeaderMatcher>} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
*/
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setPassThroughMatcherList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.envoy.config.route.v3.HeaderMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.route.v3.HeaderMatcher}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.addPassThroughMatcher = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.envoy.config.route.v3.HeaderMatcher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.clearPassThroughMatcherList = function() {
  return this.setPassThroughMatcherList([]);
};


/**
 * repeated string auth_scopes = 9;
 * @return {!Array<string>}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getAuthScopesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setAuthScopesList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.addAuthScopes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.clearAuthScopesList = function() {
  return this.setAuthScopesList([]);
};


/**
 * repeated string resources = 10;
 * @return {!Array<string>}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getResourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setResourcesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.addResources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};


/**
 * optional AuthType auth_type = 11;
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType}
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.getAuthType = function() {
  return /** @type {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType} value
 * @return {!proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config} returns this
 */
proto.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.prototype.setAuthType = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


