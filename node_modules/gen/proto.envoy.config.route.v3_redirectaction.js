// source: envoy/config/route/v3/route_components.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.route.v3.RedirectAction');
goog.provide('proto.envoy.config.route.v3.RedirectAction.PathRewriteSpecifierCase');
goog.provide('proto.envoy.config.route.v3.RedirectAction.RedirectResponseCode');
goog.provide('proto.envoy.config.route.v3.RedirectAction.SchemeRewriteSpecifierCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.type.matcher.v3.RegexMatchAndSubstitute');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.route.v3.RedirectAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.route.v3.RedirectAction.oneofGroups_);
};
goog.inherits(proto.envoy.config.route.v3.RedirectAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.route.v3.RedirectAction.displayName = 'proto.envoy.config.route.v3.RedirectAction';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.route.v3.RedirectAction.oneofGroups_ = [[4,7],[2,5,9]];

/**
 * @enum {number}
 */
proto.envoy.config.route.v3.RedirectAction.SchemeRewriteSpecifierCase = {
  SCHEME_REWRITE_SPECIFIER_NOT_SET: 0,
  HTTPS_REDIRECT: 4,
  SCHEME_REDIRECT: 7
};

/**
 * @return {proto.envoy.config.route.v3.RedirectAction.SchemeRewriteSpecifierCase}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getSchemeRewriteSpecifierCase = function() {
  return /** @type {proto.envoy.config.route.v3.RedirectAction.SchemeRewriteSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.envoy.config.route.v3.RedirectAction.PathRewriteSpecifierCase = {
  PATH_REWRITE_SPECIFIER_NOT_SET: 0,
  PATH_REDIRECT: 2,
  PREFIX_REWRITE: 5,
  REGEX_REWRITE: 9
};

/**
 * @return {proto.envoy.config.route.v3.RedirectAction.PathRewriteSpecifierCase}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getPathRewriteSpecifierCase = function() {
  return /** @type {proto.envoy.config.route.v3.RedirectAction.PathRewriteSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.route.v3.RedirectAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.route.v3.RedirectAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.route.v3.RedirectAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    httpsRedirect: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    schemeRedirect: jspb.Message.getFieldWithDefault(msg, 7, ""),
    hostRedirect: jspb.Message.getFieldWithDefault(msg, 1, ""),
    portRedirect: jspb.Message.getFieldWithDefault(msg, 8, 0),
    pathRedirect: jspb.Message.getFieldWithDefault(msg, 2, ""),
    prefixRewrite: jspb.Message.getFieldWithDefault(msg, 5, ""),
    regexRewrite: (f = msg.getRegexRewrite()) && proto.envoy.type.matcher.v3.RegexMatchAndSubstitute.toObject(includeInstance, f),
    responseCode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    stripQuery: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.route.v3.RedirectAction}
 */
proto.envoy.config.route.v3.RedirectAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.route.v3.RedirectAction;
  return proto.envoy.config.route.v3.RedirectAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.route.v3.RedirectAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.route.v3.RedirectAction}
 */
proto.envoy.config.route.v3.RedirectAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHttpsRedirect(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemeRedirect(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostRedirect(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPortRedirect(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathRedirect(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefixRewrite(value);
      break;
    case 9:
      var value = new proto.envoy.type.matcher.v3.RegexMatchAndSubstitute;
      reader.readMessage(value,proto.envoy.type.matcher.v3.RegexMatchAndSubstitute.deserializeBinaryFromReader);
      msg.setRegexRewrite(value);
      break;
    case 3:
      var value = /** @type {!proto.envoy.config.route.v3.RedirectAction.RedirectResponseCode} */ (reader.readEnum());
      msg.setResponseCode(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStripQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.route.v3.RedirectAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.route.v3.RedirectAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.route.v3.RedirectAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHostRedirect();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPortRedirect();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRegexRewrite();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.type.matcher.v3.RegexMatchAndSubstitute.serializeBinaryToWriter
    );
  }
  f = message.getResponseCode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStripQuery();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.config.route.v3.RedirectAction.RedirectResponseCode = {
  MOVED_PERMANENTLY: 0,
  FOUND: 1,
  SEE_OTHER: 2,
  TEMPORARY_REDIRECT: 3,
  PERMANENT_REDIRECT: 4
};

/**
 * optional bool https_redirect = 4;
 * @return {boolean}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getHttpsRedirect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.setHttpsRedirect = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.clearHttpsRedirect = function() {
  return jspb.Message.setOneofField(this, 4, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.hasHttpsRedirect = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string scheme_redirect = 7;
 * @return {string}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getSchemeRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.setSchemeRedirect = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.clearSchemeRedirect = function() {
  return jspb.Message.setOneofField(this, 7, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.hasSchemeRedirect = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string host_redirect = 1;
 * @return {string}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getHostRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.setHostRedirect = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 port_redirect = 8;
 * @return {number}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getPortRedirect = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.setPortRedirect = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string path_redirect = 2;
 * @return {string}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getPathRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.setPathRedirect = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.clearPathRedirect = function() {
  return jspb.Message.setOneofField(this, 2, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.hasPathRedirect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string prefix_rewrite = 5;
 * @return {string}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getPrefixRewrite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.setPrefixRewrite = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.clearPrefixRewrite = function() {
  return jspb.Message.setOneofField(this, 5, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.hasPrefixRewrite = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 9;
 * @return {?proto.envoy.type.matcher.v3.RegexMatchAndSubstitute}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getRegexRewrite = function() {
  return /** @type{?proto.envoy.type.matcher.v3.RegexMatchAndSubstitute} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.RegexMatchAndSubstitute, 9));
};


/**
 * @param {?proto.envoy.type.matcher.v3.RegexMatchAndSubstitute|undefined} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
*/
proto.envoy.config.route.v3.RedirectAction.prototype.setRegexRewrite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.envoy.config.route.v3.RedirectAction.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.clearRegexRewrite = function() {
  return this.setRegexRewrite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.hasRegexRewrite = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional RedirectResponseCode response_code = 3;
 * @return {!proto.envoy.config.route.v3.RedirectAction.RedirectResponseCode}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getResponseCode = function() {
  return /** @type {!proto.envoy.config.route.v3.RedirectAction.RedirectResponseCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.envoy.config.route.v3.RedirectAction.RedirectResponseCode} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.setResponseCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool strip_query = 6;
 * @return {boolean}
 */
proto.envoy.config.route.v3.RedirectAction.prototype.getStripQuery = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.route.v3.RedirectAction} returns this
 */
proto.envoy.config.route.v3.RedirectAction.prototype.setStripQuery = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


