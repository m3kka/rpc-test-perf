// source: envoy/extensions/common/dynamic_forward_proxy/v3/dns_cache.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.cluster.v3.Cluster.RefreshRate');
goog.require('proto.envoy.config.common.key_value.v3.KeyValueStoreConfig');
goog.require('proto.envoy.config.core.v3.DnsResolutionConfig');
goog.require('proto.envoy.config.core.v3.SocketAddress');
goog.require('proto.envoy.config.core.v3.TypedExtensionConfig');
goog.require('proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers');
goog.require('proto.google.protobuf.Duration');
goog.require('proto.google.protobuf.UInt32Value');

goog.forwardDeclare('proto.envoy.config.cluster.v3.Cluster.DnsLookupFamily');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.displayName = 'proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dnsLookupFamily: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dnsRefreshRate: (f = msg.getDnsRefreshRate()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    dnsMinRefreshRate: (f = msg.getDnsMinRefreshRate()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    hostTtl: (f = msg.getHostTtl()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    maxHosts: (f = msg.getMaxHosts()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    dnsFailureRefreshRate: (f = msg.getDnsFailureRefreshRate()) && proto.envoy.config.cluster.v3.Cluster.RefreshRate.toObject(includeInstance, f),
    dnsCacheCircuitBreaker: (f = msg.getDnsCacheCircuitBreaker()) && proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers.toObject(includeInstance, f),
    useTcpForDnsLookups: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    dnsResolutionConfig: (f = msg.getDnsResolutionConfig()) && proto.envoy.config.core.v3.DnsResolutionConfig.toObject(includeInstance, f),
    typedDnsResolverConfig: (f = msg.getTypedDnsResolverConfig()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    preresolveHostnamesList: jspb.Message.toObjectList(msg.getPreresolveHostnamesList(),
    proto.envoy.config.core.v3.SocketAddress.toObject, includeInstance),
    dnsQueryTimeout: (f = msg.getDnsQueryTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    keyValueConfig: (f = msg.getKeyValueConfig()) && proto.envoy.config.common.key_value.v3.KeyValueStoreConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig;
  return proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.envoy.config.cluster.v3.Cluster.DnsLookupFamily} */ (reader.readEnum());
      msg.setDnsLookupFamily(value);
      break;
    case 3:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setDnsRefreshRate(value);
      break;
    case 14:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setDnsMinRefreshRate(value);
      break;
    case 4:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setHostTtl(value);
      break;
    case 5:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxHosts(value);
      break;
    case 6:
      var value = new proto.envoy.config.cluster.v3.Cluster.RefreshRate;
      reader.readMessage(value,proto.envoy.config.cluster.v3.Cluster.RefreshRate.deserializeBinaryFromReader);
      msg.setDnsFailureRefreshRate(value);
      break;
    case 7:
      var value = new proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers;
      reader.readMessage(value,proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers.deserializeBinaryFromReader);
      msg.setDnsCacheCircuitBreaker(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseTcpForDnsLookups(value);
      break;
    case 9:
      var value = new proto.envoy.config.core.v3.DnsResolutionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.DnsResolutionConfig.deserializeBinaryFromReader);
      msg.setDnsResolutionConfig(value);
      break;
    case 12:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setTypedDnsResolverConfig(value);
      break;
    case 10:
      var value = new proto.envoy.config.core.v3.SocketAddress;
      reader.readMessage(value,proto.envoy.config.core.v3.SocketAddress.deserializeBinaryFromReader);
      msg.addPreresolveHostnames(value);
      break;
    case 11:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setDnsQueryTimeout(value);
      break;
    case 13:
      var value = new proto.envoy.config.common.key_value.v3.KeyValueStoreConfig;
      reader.readMessage(value,proto.envoy.config.common.key_value.v3.KeyValueStoreConfig.deserializeBinaryFromReader);
      msg.setKeyValueConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDnsLookupFamily();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getDnsRefreshRate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getDnsMinRefreshRate();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getHostTtl();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMaxHosts();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getDnsFailureRefreshRate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.config.cluster.v3.Cluster.RefreshRate.serializeBinaryToWriter
    );
  }
  f = message.getDnsCacheCircuitBreaker();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers.serializeBinaryToWriter
    );
  }
  f = message.getUseTcpForDnsLookups();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDnsResolutionConfig();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.config.core.v3.DnsResolutionConfig.serializeBinaryToWriter
    );
  }
  f = message.getTypedDnsResolverConfig();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getPreresolveHostnamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.envoy.config.core.v3.SocketAddress.serializeBinaryToWriter
    );
  }
  f = message.getDnsQueryTimeout();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getKeyValueConfig();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.envoy.config.common.key_value.v3.KeyValueStoreConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional envoy.config.cluster.v3.Cluster.DnsLookupFamily dns_lookup_family = 2;
 * @return {!proto.envoy.config.cluster.v3.Cluster.DnsLookupFamily}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getDnsLookupFamily = function() {
  return /** @type {!proto.envoy.config.cluster.v3.Cluster.DnsLookupFamily} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.envoy.config.cluster.v3.Cluster.DnsLookupFamily} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setDnsLookupFamily = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Duration dns_refresh_rate = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getDnsRefreshRate = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setDnsRefreshRate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearDnsRefreshRate = function() {
  return this.setDnsRefreshRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasDnsRefreshRate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Duration dns_min_refresh_rate = 14;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getDnsMinRefreshRate = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 14));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setDnsMinRefreshRate = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearDnsMinRefreshRate = function() {
  return this.setDnsMinRefreshRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasDnsMinRefreshRate = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional google.protobuf.Duration host_ttl = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getHostTtl = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setHostTtl = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearHostTtl = function() {
  return this.setHostTtl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasHostTtl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.UInt32Value max_hosts = 5;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getMaxHosts = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 5));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setMaxHosts = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearMaxHosts = function() {
  return this.setMaxHosts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasMaxHosts = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional envoy.config.cluster.v3.Cluster.RefreshRate dns_failure_refresh_rate = 6;
 * @return {?proto.envoy.config.cluster.v3.Cluster.RefreshRate}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getDnsFailureRefreshRate = function() {
  return /** @type{?proto.envoy.config.cluster.v3.Cluster.RefreshRate} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.cluster.v3.Cluster.RefreshRate, 6));
};


/**
 * @param {?proto.envoy.config.cluster.v3.Cluster.RefreshRate|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setDnsFailureRefreshRate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearDnsFailureRefreshRate = function() {
  return this.setDnsFailureRefreshRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasDnsFailureRefreshRate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DnsCacheCircuitBreakers dns_cache_circuit_breaker = 7;
 * @return {?proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getDnsCacheCircuitBreaker = function() {
  return /** @type{?proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers, 7));
};


/**
 * @param {?proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setDnsCacheCircuitBreaker = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearDnsCacheCircuitBreaker = function() {
  return this.setDnsCacheCircuitBreaker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasDnsCacheCircuitBreaker = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool use_tcp_for_dns_lookups = 8;
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getUseTcpForDnsLookups = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setUseTcpForDnsLookups = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional envoy.config.core.v3.DnsResolutionConfig dns_resolution_config = 9;
 * @return {?proto.envoy.config.core.v3.DnsResolutionConfig}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getDnsResolutionConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.DnsResolutionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.DnsResolutionConfig, 9));
};


/**
 * @param {?proto.envoy.config.core.v3.DnsResolutionConfig|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setDnsResolutionConfig = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearDnsResolutionConfig = function() {
  return this.setDnsResolutionConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasDnsResolutionConfig = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig typed_dns_resolver_config = 12;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getTypedDnsResolverConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 12));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setTypedDnsResolverConfig = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearTypedDnsResolverConfig = function() {
  return this.setTypedDnsResolverConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasTypedDnsResolverConfig = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated envoy.config.core.v3.SocketAddress preresolve_hostnames = 10;
 * @return {!Array<!proto.envoy.config.core.v3.SocketAddress>}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getPreresolveHostnamesList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.SocketAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.SocketAddress, 10));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.SocketAddress>} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setPreresolveHostnamesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.envoy.config.core.v3.SocketAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.SocketAddress}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.addPreresolveHostnames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.envoy.config.core.v3.SocketAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearPreresolveHostnamesList = function() {
  return this.setPreresolveHostnamesList([]);
};


/**
 * optional google.protobuf.Duration dns_query_timeout = 11;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getDnsQueryTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 11));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setDnsQueryTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearDnsQueryTimeout = function() {
  return this.setDnsQueryTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasDnsQueryTimeout = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional envoy.config.common.key_value.v3.KeyValueStoreConfig key_value_config = 13;
 * @return {?proto.envoy.config.common.key_value.v3.KeyValueStoreConfig}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.getKeyValueConfig = function() {
  return /** @type{?proto.envoy.config.common.key_value.v3.KeyValueStoreConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.common.key_value.v3.KeyValueStoreConfig, 13));
};


/**
 * @param {?proto.envoy.config.common.key_value.v3.KeyValueStoreConfig|undefined} value
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
*/
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.setKeyValueConfig = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig} returns this
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.clearKeyValueConfig = function() {
  return this.setKeyValueConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.prototype.hasKeyValueConfig = function() {
  return jspb.Message.getField(this, 13) != null;
};


