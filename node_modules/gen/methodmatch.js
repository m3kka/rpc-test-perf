// source: envoy/extensions/filters/network/dubbo_proxy/v3/route.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch');
goog.provide('proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier');
goog.provide('proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.ParameterMatchSpecifierCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.envoy.type.matcher.v3.StringMatcher');
goog.require('proto.envoy.type.v3.Int64Range');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.displayName = 'proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.displayName = 'proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.envoy.type.matcher.v3.StringMatcher.toObject(includeInstance, f),
    paramsMatchMap: (f = msg.getParamsMatchMap()) ? f.toObject(includeInstance, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch;
  return proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.type.matcher.v3.StringMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.StringMatcher.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = msg.getParamsMatchMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.deserializeBinaryFromReader, 0, new proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.type.matcher.v3.StringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getParamsMatchMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.serializeBinaryToWriter);
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.ParameterMatchSpecifierCase = {
  PARAMETER_MATCH_SPECIFIER_NOT_SET: 0,
  EXACT_MATCH: 3,
  RANGE_MATCH: 4
};

/**
 * @return {proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.ParameterMatchSpecifierCase}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.getParameterMatchSpecifierCase = function() {
  return /** @type {proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.ParameterMatchSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    exactMatch: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rangeMatch: (f = msg.getRangeMatch()) && proto.envoy.type.v3.Int64Range.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier;
  return proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExactMatch(value);
      break;
    case 4:
      var value = new proto.envoy.type.v3.Int64Range;
      reader.readMessage(value,proto.envoy.type.v3.Int64Range.deserializeBinaryFromReader);
      msg.setRangeMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRangeMatch();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.type.v3.Int64Range.serializeBinaryToWriter
    );
  }
};


/**
 * optional string exact_match = 3;
 * @return {string}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.getExactMatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.setExactMatch = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.clearExactMatch = function() {
  return jspb.Message.setOneofField(this, 3, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.hasExactMatch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.type.v3.Int64Range range_match = 4;
 * @return {?proto.envoy.type.v3.Int64Range}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.getRangeMatch = function() {
  return /** @type{?proto.envoy.type.v3.Int64Range} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.v3.Int64Range, 4));
};


/**
 * @param {?proto.envoy.type.v3.Int64Range|undefined} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier} returns this
*/
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.setRangeMatch = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.clearRangeMatch = function() {
  return this.setRangeMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.prototype.hasRangeMatch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional envoy.type.matcher.v3.StringMatcher name = 1;
 * @return {?proto.envoy.type.matcher.v3.StringMatcher}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.prototype.getName = function() {
  return /** @type{?proto.envoy.type.matcher.v3.StringMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.StringMatcher, 1));
};


/**
 * @param {?proto.envoy.type.matcher.v3.StringMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch} returns this
*/
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<uint32, ParameterMatchSpecifier> params_match = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.prototype.getParamsMatchMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.prototype.clearParamsMatchMap = function() {
  this.getParamsMatchMap().clear();
  return this;
};


