// source: envoy/config/route/v3/scoped_route.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.route.v3.ScopedRouteConfiguration');
goog.provide('proto.envoy.config.route.v3.ScopedRouteConfiguration.Key');
goog.provide('proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment');
goog.provide('proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.TypeCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.route.v3.RouteConfiguration');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.route.v3.ScopedRouteConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.route.v3.ScopedRouteConfiguration.displayName = 'proto.envoy.config.route.v3.ScopedRouteConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.route.v3.ScopedRouteConfiguration.Key, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.displayName = 'proto.envoy.config.route.v3.ScopedRouteConfiguration.Key';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.oneofGroups_);
};
goog.inherits(proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.displayName = 'proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.route.v3.ScopedRouteConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    onDemand: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    routeConfigurationName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    routeConfiguration: (f = msg.getRouteConfiguration()) && proto.envoy.config.route.v3.RouteConfiguration.toObject(includeInstance, f),
    key: (f = msg.getKey()) && proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.route.v3.ScopedRouteConfiguration;
  return proto.envoy.config.route.v3.ScopedRouteConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnDemand(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRouteConfigurationName(value);
      break;
    case 5:
      var value = new proto.envoy.config.route.v3.RouteConfiguration;
      reader.readMessage(value,proto.envoy.config.route.v3.RouteConfiguration.deserializeBinaryFromReader);
      msg.setRouteConfiguration(value);
      break;
    case 3:
      var value = new proto.envoy.config.route.v3.ScopedRouteConfiguration.Key;
      reader.readMessage(value,proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.route.v3.ScopedRouteConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnDemand();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRouteConfigurationName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRouteConfiguration();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.config.route.v3.RouteConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.toObject = function(includeInstance, msg) {
  var f, obj = {
    fragmentsList: jspb.Message.toObjectList(msg.getFragmentsList(),
    proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.route.v3.ScopedRouteConfiguration.Key;
  return proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment;
      reader.readMessage(value,proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.deserializeBinaryFromReader);
      msg.addFragments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFragmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.TypeCase = {
  TYPE_NOT_SET: 0,
  STRING_KEY: 1
};

/**
 * @return {proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.TypeCase}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.prototype.getTypeCase = function() {
  return /** @type {proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.TypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.toObject = function(includeInstance, msg) {
  var f, obj = {
    stringKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment;
  return proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string string_key = 1;
 * @return {string}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.prototype.getStringKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment} returns this
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.prototype.setStringKey = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment} returns this
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.prototype.clearStringKey = function() {
  return jspb.Message.setOneofField(this, 1, proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment.prototype.hasStringKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Fragment fragments = 1;
 * @return {!Array<!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment>}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.prototype.getFragmentsList = function() {
  return /** @type{!Array<!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment, 1));
};


/**
 * @param {!Array<!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment>} value
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key} returns this
*/
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.prototype.setFragmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.prototype.addFragments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration.Key} returns this
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.Key.prototype.clearFragmentsList = function() {
  return this.setFragmentsList([]);
};


/**
 * optional bool on_demand = 4;
 * @return {boolean}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.getOnDemand = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration} returns this
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.setOnDemand = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration} returns this
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string route_configuration_name = 2;
 * @return {string}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.getRouteConfigurationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration} returns this
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.setRouteConfigurationName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RouteConfiguration route_configuration = 5;
 * @return {?proto.envoy.config.route.v3.RouteConfiguration}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.getRouteConfiguration = function() {
  return /** @type{?proto.envoy.config.route.v3.RouteConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.route.v3.RouteConfiguration, 5));
};


/**
 * @param {?proto.envoy.config.route.v3.RouteConfiguration|undefined} value
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration} returns this
*/
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.setRouteConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration} returns this
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.clearRouteConfiguration = function() {
  return this.setRouteConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.hasRouteConfiguration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Key key = 3;
 * @return {?proto.envoy.config.route.v3.ScopedRouteConfiguration.Key}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.getKey = function() {
  return /** @type{?proto.envoy.config.route.v3.ScopedRouteConfiguration.Key} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.route.v3.ScopedRouteConfiguration.Key, 3));
};


/**
 * @param {?proto.envoy.config.route.v3.ScopedRouteConfiguration.Key|undefined} value
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration} returns this
*/
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.route.v3.ScopedRouteConfiguration} returns this
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.route.v3.ScopedRouteConfiguration.prototype.hasKey = function() {
  return jspb.Message.getField(this, 3) != null;
};


