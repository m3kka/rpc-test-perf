// source: envoy/config/core/v3/protocol.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.core.v3.Http2ProtocolOptions');
goog.provide('proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.core.v3.KeepaliveSettings');
goog.require('proto.google.protobuf.BoolValue');
goog.require('proto.google.protobuf.UInt32Value');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.core.v3.Http2ProtocolOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.core.v3.Http2ProtocolOptions.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.core.v3.Http2ProtocolOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.core.v3.Http2ProtocolOptions.displayName = 'proto.envoy.config.core.v3.Http2ProtocolOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.displayName = 'proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.core.v3.Http2ProtocolOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.core.v3.Http2ProtocolOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    hpackTableSize: (f = msg.getHpackTableSize()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    maxConcurrentStreams: (f = msg.getMaxConcurrentStreams()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    initialStreamWindowSize: (f = msg.getInitialStreamWindowSize()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    initialConnectionWindowSize: (f = msg.getInitialConnectionWindowSize()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    allowConnect: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    allowMetadata: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    maxOutboundFrames: (f = msg.getMaxOutboundFrames()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    maxOutboundControlFrames: (f = msg.getMaxOutboundControlFrames()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    maxConsecutiveInboundFramesWithEmptyPayload: (f = msg.getMaxConsecutiveInboundFramesWithEmptyPayload()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    maxInboundPriorityFramesPerStream: (f = msg.getMaxInboundPriorityFramesPerStream()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    maxInboundWindowUpdateFramesPerDataFrameSent: (f = msg.getMaxInboundWindowUpdateFramesPerDataFrameSent()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    streamErrorOnInvalidHttpMessaging: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    overrideStreamErrorOnInvalidHttpMessage: (f = msg.getOverrideStreamErrorOnInvalidHttpMessage()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    customSettingsParametersList: jspb.Message.toObjectList(msg.getCustomSettingsParametersList(),
    proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.toObject, includeInstance),
    connectionKeepalive: (f = msg.getConnectionKeepalive()) && proto.envoy.config.core.v3.KeepaliveSettings.toObject(includeInstance, f),
    useOghttp2Codec: (f = msg.getUseOghttp2Codec()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.core.v3.Http2ProtocolOptions;
  return proto.envoy.config.core.v3.Http2ProtocolOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.core.v3.Http2ProtocolOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setHpackTableSize(value);
      break;
    case 2:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxConcurrentStreams(value);
      break;
    case 3:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setInitialStreamWindowSize(value);
      break;
    case 4:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setInitialConnectionWindowSize(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowConnect(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowMetadata(value);
      break;
    case 7:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxOutboundFrames(value);
      break;
    case 8:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxOutboundControlFrames(value);
      break;
    case 9:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxConsecutiveInboundFramesWithEmptyPayload(value);
      break;
    case 10:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxInboundPriorityFramesPerStream(value);
      break;
    case 11:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxInboundWindowUpdateFramesPerDataFrameSent(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStreamErrorOnInvalidHttpMessaging(value);
      break;
    case 14:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setOverrideStreamErrorOnInvalidHttpMessage(value);
      break;
    case 13:
      var value = new proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter;
      reader.readMessage(value,proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.deserializeBinaryFromReader);
      msg.addCustomSettingsParameters(value);
      break;
    case 15:
      var value = new proto.envoy.config.core.v3.KeepaliveSettings;
      reader.readMessage(value,proto.envoy.config.core.v3.KeepaliveSettings.deserializeBinaryFromReader);
      msg.setConnectionKeepalive(value);
      break;
    case 16:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setUseOghttp2Codec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.core.v3.Http2ProtocolOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.core.v3.Http2ProtocolOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHpackTableSize();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxConcurrentStreams();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getInitialStreamWindowSize();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getInitialConnectionWindowSize();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getAllowConnect();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getAllowMetadata();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getMaxOutboundFrames();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxOutboundControlFrames();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxConsecutiveInboundFramesWithEmptyPayload();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxInboundPriorityFramesPerStream();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxInboundWindowUpdateFramesPerDataFrameSent();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getStreamErrorOnInvalidHttpMessaging();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getOverrideStreamErrorOnInvalidHttpMessage();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getCustomSettingsParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.serializeBinaryToWriter
    );
  }
  f = message.getConnectionKeepalive();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.envoy.config.core.v3.KeepaliveSettings.serializeBinaryToWriter
    );
  }
  f = message.getUseOghttp2Codec();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter;
  return proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.UInt32Value identifier = 1;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.getIdentifier = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 1));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.UInt32Value value = 2;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 2));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.UInt32Value hpack_table_size = 1;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getHpackTableSize = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 1));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setHpackTableSize = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearHpackTableSize = function() {
  return this.setHpackTableSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasHpackTableSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.UInt32Value max_concurrent_streams = 2;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getMaxConcurrentStreams = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 2));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setMaxConcurrentStreams = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearMaxConcurrentStreams = function() {
  return this.setMaxConcurrentStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasMaxConcurrentStreams = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.UInt32Value initial_stream_window_size = 3;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getInitialStreamWindowSize = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 3));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setInitialStreamWindowSize = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearInitialStreamWindowSize = function() {
  return this.setInitialStreamWindowSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasInitialStreamWindowSize = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.UInt32Value initial_connection_window_size = 4;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getInitialConnectionWindowSize = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 4));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setInitialConnectionWindowSize = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearInitialConnectionWindowSize = function() {
  return this.setInitialConnectionWindowSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasInitialConnectionWindowSize = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool allow_connect = 5;
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getAllowConnect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setAllowConnect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool allow_metadata = 6;
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getAllowMetadata = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setAllowMetadata = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.UInt32Value max_outbound_frames = 7;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getMaxOutboundFrames = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 7));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setMaxOutboundFrames = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearMaxOutboundFrames = function() {
  return this.setMaxOutboundFrames(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasMaxOutboundFrames = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.UInt32Value max_outbound_control_frames = 8;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getMaxOutboundControlFrames = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 8));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setMaxOutboundControlFrames = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearMaxOutboundControlFrames = function() {
  return this.setMaxOutboundControlFrames(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasMaxOutboundControlFrames = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.UInt32Value max_consecutive_inbound_frames_with_empty_payload = 9;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getMaxConsecutiveInboundFramesWithEmptyPayload = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 9));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setMaxConsecutiveInboundFramesWithEmptyPayload = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearMaxConsecutiveInboundFramesWithEmptyPayload = function() {
  return this.setMaxConsecutiveInboundFramesWithEmptyPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasMaxConsecutiveInboundFramesWithEmptyPayload = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.UInt32Value max_inbound_priority_frames_per_stream = 10;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getMaxInboundPriorityFramesPerStream = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 10));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setMaxInboundPriorityFramesPerStream = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearMaxInboundPriorityFramesPerStream = function() {
  return this.setMaxInboundPriorityFramesPerStream(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasMaxInboundPriorityFramesPerStream = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.UInt32Value max_inbound_window_update_frames_per_data_frame_sent = 11;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getMaxInboundWindowUpdateFramesPerDataFrameSent = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 11));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setMaxInboundWindowUpdateFramesPerDataFrameSent = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearMaxInboundWindowUpdateFramesPerDataFrameSent = function() {
  return this.setMaxInboundWindowUpdateFramesPerDataFrameSent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasMaxInboundWindowUpdateFramesPerDataFrameSent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool stream_error_on_invalid_http_messaging = 12;
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getStreamErrorOnInvalidHttpMessaging = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setStreamErrorOnInvalidHttpMessaging = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional google.protobuf.BoolValue override_stream_error_on_invalid_http_message = 14;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getOverrideStreamErrorOnInvalidHttpMessage = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 14));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setOverrideStreamErrorOnInvalidHttpMessage = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearOverrideStreamErrorOnInvalidHttpMessage = function() {
  return this.setOverrideStreamErrorOnInvalidHttpMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasOverrideStreamErrorOnInvalidHttpMessage = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated SettingsParameter custom_settings_parameters = 13;
 * @return {!Array<!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter>}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getCustomSettingsParametersList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter, 13));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter>} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setCustomSettingsParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.addCustomSettingsParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearCustomSettingsParametersList = function() {
  return this.setCustomSettingsParametersList([]);
};


/**
 * optional KeepaliveSettings connection_keepalive = 15;
 * @return {?proto.envoy.config.core.v3.KeepaliveSettings}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getConnectionKeepalive = function() {
  return /** @type{?proto.envoy.config.core.v3.KeepaliveSettings} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.KeepaliveSettings, 15));
};


/**
 * @param {?proto.envoy.config.core.v3.KeepaliveSettings|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setConnectionKeepalive = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearConnectionKeepalive = function() {
  return this.setConnectionKeepalive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasConnectionKeepalive = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.BoolValue use_oghttp2_codec = 16;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.getUseOghttp2Codec = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 16));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
*/
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.setUseOghttp2Codec = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.core.v3.Http2ProtocolOptions} returns this
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.clearUseOghttp2Codec = function() {
  return this.setUseOghttp2Codec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.core.v3.Http2ProtocolOptions.prototype.hasUseOghttp2Codec = function() {
  return jspb.Message.getField(this, 16) != null;
};


