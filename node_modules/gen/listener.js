// source: envoy/config/listener/v3/listener.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.listener.v3.Listener');
goog.provide('proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig');
goog.provide('proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.BalanceTypeCase');
goog.provide('proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance');
goog.provide('proto.envoy.config.listener.v3.Listener.DeprecatedV1');
goog.provide('proto.envoy.config.listener.v3.Listener.DrainType');
goog.provide('proto.envoy.config.listener.v3.Listener.InternalListenerConfig');
goog.provide('proto.envoy.config.listener.v3.Listener.ListenerSpecifierCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.accesslog.v3.AccessLog');
goog.require('proto.envoy.config.core.v3.Address');
goog.require('proto.envoy.config.core.v3.Metadata');
goog.require('proto.envoy.config.core.v3.SocketOption');
goog.require('proto.envoy.config.core.v3.TypedExtensionConfig');
goog.require('proto.envoy.config.listener.v3.AdditionalAddress');
goog.require('proto.envoy.config.listener.v3.ApiListener');
goog.require('proto.envoy.config.listener.v3.FilterChain');
goog.require('proto.envoy.config.listener.v3.ListenerFilter');
goog.require('proto.envoy.config.listener.v3.UdpListenerConfig');
goog.require('proto.google.protobuf.BoolValue');
goog.require('proto.google.protobuf.Duration');
goog.require('proto.google.protobuf.UInt32Value');
goog.require('proto.xds.type.matcher.v3.Matcher');

goog.forwardDeclare('proto.envoy.config.core.v3.TrafficDirection');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.listener.v3.Listener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.listener.v3.Listener.repeatedFields_, proto.envoy.config.listener.v3.Listener.oneofGroups_);
};
goog.inherits(proto.envoy.config.listener.v3.Listener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.listener.v3.Listener.displayName = 'proto.envoy.config.listener.v3.Listener';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.listener.v3.Listener.DeprecatedV1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.listener.v3.Listener.DeprecatedV1.displayName = 'proto.envoy.config.listener.v3.Listener.DeprecatedV1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.oneofGroups_);
};
goog.inherits(proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.displayName = 'proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.displayName = 'proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.listener.v3.Listener.InternalListenerConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.listener.v3.Listener.InternalListenerConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.listener.v3.Listener.InternalListenerConfig.displayName = 'proto.envoy.config.listener.v3.Listener.InternalListenerConfig';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.listener.v3.Listener.repeatedFields_ = [33,3,9,13,22];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.listener.v3.Listener.oneofGroups_ = [[27]];

/**
 * @enum {number}
 */
proto.envoy.config.listener.v3.Listener.ListenerSpecifierCase = {
  LISTENER_SPECIFIER_NOT_SET: 0,
  INTERNAL_LISTENER: 27
};

/**
 * @return {proto.envoy.config.listener.v3.Listener.ListenerSpecifierCase}
 */
proto.envoy.config.listener.v3.Listener.prototype.getListenerSpecifierCase = function() {
  return /** @type {proto.envoy.config.listener.v3.Listener.ListenerSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.listener.v3.Listener.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.listener.v3.Listener.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.listener.v3.Listener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.listener.v3.Listener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: (f = msg.getAddress()) && proto.envoy.config.core.v3.Address.toObject(includeInstance, f),
    additionalAddressesList: jspb.Message.toObjectList(msg.getAdditionalAddressesList(),
    proto.envoy.config.listener.v3.AdditionalAddress.toObject, includeInstance),
    statPrefix: jspb.Message.getFieldWithDefault(msg, 28, ""),
    filterChainsList: jspb.Message.toObjectList(msg.getFilterChainsList(),
    proto.envoy.config.listener.v3.FilterChain.toObject, includeInstance),
    filterChainMatcher: (f = msg.getFilterChainMatcher()) && proto.xds.type.matcher.v3.Matcher.toObject(includeInstance, f),
    useOriginalDst: (f = msg.getUseOriginalDst()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    defaultFilterChain: (f = msg.getDefaultFilterChain()) && proto.envoy.config.listener.v3.FilterChain.toObject(includeInstance, f),
    perConnectionBufferLimitBytes: (f = msg.getPerConnectionBufferLimitBytes()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.envoy.config.core.v3.Metadata.toObject(includeInstance, f),
    deprecatedV1: (f = msg.getDeprecatedV1()) && proto.envoy.config.listener.v3.Listener.DeprecatedV1.toObject(includeInstance, f),
    drainType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    listenerFiltersList: jspb.Message.toObjectList(msg.getListenerFiltersList(),
    proto.envoy.config.listener.v3.ListenerFilter.toObject, includeInstance),
    listenerFiltersTimeout: (f = msg.getListenerFiltersTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    continueOnListenerFiltersTimeout: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    transparent: (f = msg.getTransparent()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    freebind: (f = msg.getFreebind()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    socketOptionsList: jspb.Message.toObjectList(msg.getSocketOptionsList(),
    proto.envoy.config.core.v3.SocketOption.toObject, includeInstance),
    tcpFastOpenQueueLength: (f = msg.getTcpFastOpenQueueLength()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    trafficDirection: jspb.Message.getFieldWithDefault(msg, 16, 0),
    udpListenerConfig: (f = msg.getUdpListenerConfig()) && proto.envoy.config.listener.v3.UdpListenerConfig.toObject(includeInstance, f),
    apiListener: (f = msg.getApiListener()) && proto.envoy.config.listener.v3.ApiListener.toObject(includeInstance, f),
    connectionBalanceConfig: (f = msg.getConnectionBalanceConfig()) && proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.toObject(includeInstance, f),
    reusePort: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    enableReusePort: (f = msg.getEnableReusePort()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    accessLogList: jspb.Message.toObjectList(msg.getAccessLogList(),
    proto.envoy.config.accesslog.v3.AccessLog.toObject, includeInstance),
    tcpBacklogSize: (f = msg.getTcpBacklogSize()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    maxConnectionsToAcceptPerSocketEvent: (f = msg.getMaxConnectionsToAcceptPerSocketEvent()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    bindToPort: (f = msg.getBindToPort()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    internalListener: (f = msg.getInternalListener()) && proto.envoy.config.listener.v3.Listener.InternalListenerConfig.toObject(includeInstance, f),
    enableMptcp: jspb.Message.getBooleanFieldWithDefault(msg, 30, false),
    ignoreGlobalConnLimit: jspb.Message.getBooleanFieldWithDefault(msg, 31, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.listener.v3.Listener}
 */
proto.envoy.config.listener.v3.Listener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.listener.v3.Listener;
  return proto.envoy.config.listener.v3.Listener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.listener.v3.Listener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.listener.v3.Listener}
 */
proto.envoy.config.listener.v3.Listener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.envoy.config.core.v3.Address;
      reader.readMessage(value,proto.envoy.config.core.v3.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 33:
      var value = new proto.envoy.config.listener.v3.AdditionalAddress;
      reader.readMessage(value,proto.envoy.config.listener.v3.AdditionalAddress.deserializeBinaryFromReader);
      msg.addAdditionalAddresses(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    case 3:
      var value = new proto.envoy.config.listener.v3.FilterChain;
      reader.readMessage(value,proto.envoy.config.listener.v3.FilterChain.deserializeBinaryFromReader);
      msg.addFilterChains(value);
      break;
    case 32:
      var value = new proto.xds.type.matcher.v3.Matcher;
      reader.readMessage(value,proto.xds.type.matcher.v3.Matcher.deserializeBinaryFromReader);
      msg.setFilterChainMatcher(value);
      break;
    case 4:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setUseOriginalDst(value);
      break;
    case 25:
      var value = new proto.envoy.config.listener.v3.FilterChain;
      reader.readMessage(value,proto.envoy.config.listener.v3.FilterChain.deserializeBinaryFromReader);
      msg.setDefaultFilterChain(value);
      break;
    case 5:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setPerConnectionBufferLimitBytes(value);
      break;
    case 6:
      var value = new proto.envoy.config.core.v3.Metadata;
      reader.readMessage(value,proto.envoy.config.core.v3.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 7:
      var value = new proto.envoy.config.listener.v3.Listener.DeprecatedV1;
      reader.readMessage(value,proto.envoy.config.listener.v3.Listener.DeprecatedV1.deserializeBinaryFromReader);
      msg.setDeprecatedV1(value);
      break;
    case 8:
      var value = /** @type {!proto.envoy.config.listener.v3.Listener.DrainType} */ (reader.readEnum());
      msg.setDrainType(value);
      break;
    case 9:
      var value = new proto.envoy.config.listener.v3.ListenerFilter;
      reader.readMessage(value,proto.envoy.config.listener.v3.ListenerFilter.deserializeBinaryFromReader);
      msg.addListenerFilters(value);
      break;
    case 15:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setListenerFiltersTimeout(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContinueOnListenerFiltersTimeout(value);
      break;
    case 10:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setTransparent(value);
      break;
    case 11:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setFreebind(value);
      break;
    case 13:
      var value = new proto.envoy.config.core.v3.SocketOption;
      reader.readMessage(value,proto.envoy.config.core.v3.SocketOption.deserializeBinaryFromReader);
      msg.addSocketOptions(value);
      break;
    case 12:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setTcpFastOpenQueueLength(value);
      break;
    case 16:
      var value = /** @type {!proto.envoy.config.core.v3.TrafficDirection} */ (reader.readEnum());
      msg.setTrafficDirection(value);
      break;
    case 18:
      var value = new proto.envoy.config.listener.v3.UdpListenerConfig;
      reader.readMessage(value,proto.envoy.config.listener.v3.UdpListenerConfig.deserializeBinaryFromReader);
      msg.setUdpListenerConfig(value);
      break;
    case 19:
      var value = new proto.envoy.config.listener.v3.ApiListener;
      reader.readMessage(value,proto.envoy.config.listener.v3.ApiListener.deserializeBinaryFromReader);
      msg.setApiListener(value);
      break;
    case 20:
      var value = new proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig;
      reader.readMessage(value,proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.deserializeBinaryFromReader);
      msg.setConnectionBalanceConfig(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReusePort(value);
      break;
    case 29:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setEnableReusePort(value);
      break;
    case 22:
      var value = new proto.envoy.config.accesslog.v3.AccessLog;
      reader.readMessage(value,proto.envoy.config.accesslog.v3.AccessLog.deserializeBinaryFromReader);
      msg.addAccessLog(value);
      break;
    case 24:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setTcpBacklogSize(value);
      break;
    case 34:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxConnectionsToAcceptPerSocketEvent(value);
      break;
    case 26:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setBindToPort(value);
      break;
    case 27:
      var value = new proto.envoy.config.listener.v3.Listener.InternalListenerConfig;
      reader.readMessage(value,proto.envoy.config.listener.v3.Listener.InternalListenerConfig.deserializeBinaryFromReader);
      msg.setInternalListener(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableMptcp(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreGlobalConnLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.listener.v3.Listener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.listener.v3.Listener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.listener.v3.Listener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.core.v3.Address.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      33,
      f,
      proto.envoy.config.listener.v3.AdditionalAddress.serializeBinaryToWriter
    );
  }
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getFilterChainsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.envoy.config.listener.v3.FilterChain.serializeBinaryToWriter
    );
  }
  f = message.getFilterChainMatcher();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.xds.type.matcher.v3.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getUseOriginalDst();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getDefaultFilterChain();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.envoy.config.listener.v3.FilterChain.serializeBinaryToWriter
    );
  }
  f = message.getPerConnectionBufferLimitBytes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.config.core.v3.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getDeprecatedV1();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.config.listener.v3.Listener.DeprecatedV1.serializeBinaryToWriter
    );
  }
  f = message.getDrainType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getListenerFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.envoy.config.listener.v3.ListenerFilter.serializeBinaryToWriter
    );
  }
  f = message.getListenerFiltersTimeout();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getContinueOnListenerFiltersTimeout();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getTransparent();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getFreebind();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getSocketOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.envoy.config.core.v3.SocketOption.serializeBinaryToWriter
    );
  }
  f = message.getTcpFastOpenQueueLength();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getTrafficDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getUdpListenerConfig();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.envoy.config.listener.v3.UdpListenerConfig.serializeBinaryToWriter
    );
  }
  f = message.getApiListener();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.envoy.config.listener.v3.ApiListener.serializeBinaryToWriter
    );
  }
  f = message.getConnectionBalanceConfig();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.serializeBinaryToWriter
    );
  }
  f = message.getReusePort();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getEnableReusePort();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getAccessLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.envoy.config.accesslog.v3.AccessLog.serializeBinaryToWriter
    );
  }
  f = message.getTcpBacklogSize();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxConnectionsToAcceptPerSocketEvent();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getBindToPort();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getInternalListener();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.envoy.config.listener.v3.Listener.InternalListenerConfig.serializeBinaryToWriter
    );
  }
  f = message.getEnableMptcp();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
  f = message.getIgnoreGlobalConnLimit();
  if (f) {
    writer.writeBool(
      31,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.config.listener.v3.Listener.DrainType = {
  DEFAULT: 0,
  MODIFY_ONLY: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.listener.v3.Listener.DeprecatedV1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.listener.v3.Listener.DeprecatedV1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.toObject = function(includeInstance, msg) {
  var f, obj = {
    bindToPort: (f = msg.getBindToPort()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.listener.v3.Listener.DeprecatedV1}
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.listener.v3.Listener.DeprecatedV1;
  return proto.envoy.config.listener.v3.Listener.DeprecatedV1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.listener.v3.Listener.DeprecatedV1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.listener.v3.Listener.DeprecatedV1}
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setBindToPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.listener.v3.Listener.DeprecatedV1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.listener.v3.Listener.DeprecatedV1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBindToPort();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.BoolValue bind_to_port = 1;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.prototype.getBindToPort = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 1));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener.DeprecatedV1} returns this
*/
proto.envoy.config.listener.v3.Listener.DeprecatedV1.prototype.setBindToPort = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener.DeprecatedV1} returns this
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.prototype.clearBindToPort = function() {
  return this.setBindToPort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.DeprecatedV1.prototype.hasBindToPort = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.BalanceTypeCase = {
  BALANCE_TYPE_NOT_SET: 0,
  EXACT_BALANCE: 1,
  EXTEND_BALANCE: 2
};

/**
 * @return {proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.BalanceTypeCase}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.getBalanceTypeCase = function() {
  return /** @type {proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.BalanceTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    exactBalance: (f = msg.getExactBalance()) && proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.toObject(includeInstance, f),
    extendBalance: (f = msg.getExtendBalance()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig;
  return proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance;
      reader.readMessage(value,proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.deserializeBinaryFromReader);
      msg.setExactBalance(value);
      break;
    case 2:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setExtendBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExactBalance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.serializeBinaryToWriter
    );
  }
  f = message.getExtendBalance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance;
  return proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional ExactBalance exact_balance = 1;
 * @return {?proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.getExactBalance = function() {
  return /** @type{?proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance, 1));
};


/**
 * @param {?proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig} returns this
*/
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.setExactBalance = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig} returns this
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.clearExactBalance = function() {
  return this.setExactBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.hasExactBalance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig extend_balance = 2;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.getExtendBalance = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 2));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig} returns this
*/
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.setExtendBalance = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig} returns this
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.clearExtendBalance = function() {
  return this.setExtendBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig.prototype.hasExtendBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.listener.v3.Listener.InternalListenerConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.listener.v3.Listener.InternalListenerConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.listener.v3.Listener.InternalListenerConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.InternalListenerConfig.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.listener.v3.Listener.InternalListenerConfig}
 */
proto.envoy.config.listener.v3.Listener.InternalListenerConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.listener.v3.Listener.InternalListenerConfig;
  return proto.envoy.config.listener.v3.Listener.InternalListenerConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.listener.v3.Listener.InternalListenerConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.listener.v3.Listener.InternalListenerConfig}
 */
proto.envoy.config.listener.v3.Listener.InternalListenerConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.listener.v3.Listener.InternalListenerConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.listener.v3.Listener.InternalListenerConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.listener.v3.Listener.InternalListenerConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.listener.v3.Listener.InternalListenerConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.config.listener.v3.Listener.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional envoy.config.core.v3.Address address = 2;
 * @return {?proto.envoy.config.core.v3.Address}
 */
proto.envoy.config.listener.v3.Listener.prototype.getAddress = function() {
  return /** @type{?proto.envoy.config.core.v3.Address} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.Address, 2));
};


/**
 * @param {?proto.envoy.config.core.v3.Address|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated AdditionalAddress additional_addresses = 33;
 * @return {!Array<!proto.envoy.config.listener.v3.AdditionalAddress>}
 */
proto.envoy.config.listener.v3.Listener.prototype.getAdditionalAddressesList = function() {
  return /** @type{!Array<!proto.envoy.config.listener.v3.AdditionalAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.listener.v3.AdditionalAddress, 33));
};


/**
 * @param {!Array<!proto.envoy.config.listener.v3.AdditionalAddress>} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setAdditionalAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 33, value);
};


/**
 * @param {!proto.envoy.config.listener.v3.AdditionalAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.listener.v3.AdditionalAddress}
 */
proto.envoy.config.listener.v3.Listener.prototype.addAdditionalAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 33, opt_value, proto.envoy.config.listener.v3.AdditionalAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearAdditionalAddressesList = function() {
  return this.setAdditionalAddressesList([]);
};


/**
 * optional string stat_prefix = 28;
 * @return {string}
 */
proto.envoy.config.listener.v3.Listener.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.setStatPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * repeated FilterChain filter_chains = 3;
 * @return {!Array<!proto.envoy.config.listener.v3.FilterChain>}
 */
proto.envoy.config.listener.v3.Listener.prototype.getFilterChainsList = function() {
  return /** @type{!Array<!proto.envoy.config.listener.v3.FilterChain>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.listener.v3.FilterChain, 3));
};


/**
 * @param {!Array<!proto.envoy.config.listener.v3.FilterChain>} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setFilterChainsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.envoy.config.listener.v3.FilterChain=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.listener.v3.FilterChain}
 */
proto.envoy.config.listener.v3.Listener.prototype.addFilterChains = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.envoy.config.listener.v3.FilterChain, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearFilterChainsList = function() {
  return this.setFilterChainsList([]);
};


/**
 * optional xds.type.matcher.v3.Matcher filter_chain_matcher = 32;
 * @return {?proto.xds.type.matcher.v3.Matcher}
 */
proto.envoy.config.listener.v3.Listener.prototype.getFilterChainMatcher = function() {
  return /** @type{?proto.xds.type.matcher.v3.Matcher} */ (
    jspb.Message.getWrapperField(this, proto.xds.type.matcher.v3.Matcher, 32));
};


/**
 * @param {?proto.xds.type.matcher.v3.Matcher|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setFilterChainMatcher = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearFilterChainMatcher = function() {
  return this.setFilterChainMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasFilterChainMatcher = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional google.protobuf.BoolValue use_original_dst = 4;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.listener.v3.Listener.prototype.getUseOriginalDst = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 4));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setUseOriginalDst = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearUseOriginalDst = function() {
  return this.setUseOriginalDst(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasUseOriginalDst = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FilterChain default_filter_chain = 25;
 * @return {?proto.envoy.config.listener.v3.FilterChain}
 */
proto.envoy.config.listener.v3.Listener.prototype.getDefaultFilterChain = function() {
  return /** @type{?proto.envoy.config.listener.v3.FilterChain} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.listener.v3.FilterChain, 25));
};


/**
 * @param {?proto.envoy.config.listener.v3.FilterChain|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setDefaultFilterChain = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearDefaultFilterChain = function() {
  return this.setDefaultFilterChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasDefaultFilterChain = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 5;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.listener.v3.Listener.prototype.getPerConnectionBufferLimitBytes = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 5));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setPerConnectionBufferLimitBytes = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearPerConnectionBufferLimitBytes = function() {
  return this.setPerConnectionBufferLimitBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasPerConnectionBufferLimitBytes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional envoy.config.core.v3.Metadata metadata = 6;
 * @return {?proto.envoy.config.core.v3.Metadata}
 */
proto.envoy.config.listener.v3.Listener.prototype.getMetadata = function() {
  return /** @type{?proto.envoy.config.core.v3.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.Metadata, 6));
};


/**
 * @param {?proto.envoy.config.core.v3.Metadata|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeprecatedV1 deprecated_v1 = 7;
 * @return {?proto.envoy.config.listener.v3.Listener.DeprecatedV1}
 */
proto.envoy.config.listener.v3.Listener.prototype.getDeprecatedV1 = function() {
  return /** @type{?proto.envoy.config.listener.v3.Listener.DeprecatedV1} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.listener.v3.Listener.DeprecatedV1, 7));
};


/**
 * @param {?proto.envoy.config.listener.v3.Listener.DeprecatedV1|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setDeprecatedV1 = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearDeprecatedV1 = function() {
  return this.setDeprecatedV1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasDeprecatedV1 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DrainType drain_type = 8;
 * @return {!proto.envoy.config.listener.v3.Listener.DrainType}
 */
proto.envoy.config.listener.v3.Listener.prototype.getDrainType = function() {
  return /** @type {!proto.envoy.config.listener.v3.Listener.DrainType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.envoy.config.listener.v3.Listener.DrainType} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.setDrainType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * repeated ListenerFilter listener_filters = 9;
 * @return {!Array<!proto.envoy.config.listener.v3.ListenerFilter>}
 */
proto.envoy.config.listener.v3.Listener.prototype.getListenerFiltersList = function() {
  return /** @type{!Array<!proto.envoy.config.listener.v3.ListenerFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.listener.v3.ListenerFilter, 9));
};


/**
 * @param {!Array<!proto.envoy.config.listener.v3.ListenerFilter>} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setListenerFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.envoy.config.listener.v3.ListenerFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.listener.v3.ListenerFilter}
 */
proto.envoy.config.listener.v3.Listener.prototype.addListenerFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.envoy.config.listener.v3.ListenerFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearListenerFiltersList = function() {
  return this.setListenerFiltersList([]);
};


/**
 * optional google.protobuf.Duration listener_filters_timeout = 15;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.config.listener.v3.Listener.prototype.getListenerFiltersTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 15));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setListenerFiltersTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearListenerFiltersTimeout = function() {
  return this.setListenerFiltersTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasListenerFiltersTimeout = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool continue_on_listener_filters_timeout = 17;
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.getContinueOnListenerFiltersTimeout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.setContinueOnListenerFiltersTimeout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional google.protobuf.BoolValue transparent = 10;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.listener.v3.Listener.prototype.getTransparent = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 10));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setTransparent = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearTransparent = function() {
  return this.setTransparent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasTransparent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.BoolValue freebind = 11;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.listener.v3.Listener.prototype.getFreebind = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 11));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setFreebind = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearFreebind = function() {
  return this.setFreebind(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasFreebind = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated envoy.config.core.v3.SocketOption socket_options = 13;
 * @return {!Array<!proto.envoy.config.core.v3.SocketOption>}
 */
proto.envoy.config.listener.v3.Listener.prototype.getSocketOptionsList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.SocketOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.SocketOption, 13));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.SocketOption>} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setSocketOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.envoy.config.core.v3.SocketOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.SocketOption}
 */
proto.envoy.config.listener.v3.Listener.prototype.addSocketOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.envoy.config.core.v3.SocketOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearSocketOptionsList = function() {
  return this.setSocketOptionsList([]);
};


/**
 * optional google.protobuf.UInt32Value tcp_fast_open_queue_length = 12;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.listener.v3.Listener.prototype.getTcpFastOpenQueueLength = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 12));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setTcpFastOpenQueueLength = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearTcpFastOpenQueueLength = function() {
  return this.setTcpFastOpenQueueLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasTcpFastOpenQueueLength = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional envoy.config.core.v3.TrafficDirection traffic_direction = 16;
 * @return {!proto.envoy.config.core.v3.TrafficDirection}
 */
proto.envoy.config.listener.v3.Listener.prototype.getTrafficDirection = function() {
  return /** @type {!proto.envoy.config.core.v3.TrafficDirection} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.envoy.config.core.v3.TrafficDirection} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.setTrafficDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional UdpListenerConfig udp_listener_config = 18;
 * @return {?proto.envoy.config.listener.v3.UdpListenerConfig}
 */
proto.envoy.config.listener.v3.Listener.prototype.getUdpListenerConfig = function() {
  return /** @type{?proto.envoy.config.listener.v3.UdpListenerConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.listener.v3.UdpListenerConfig, 18));
};


/**
 * @param {?proto.envoy.config.listener.v3.UdpListenerConfig|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setUdpListenerConfig = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearUdpListenerConfig = function() {
  return this.setUdpListenerConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasUdpListenerConfig = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ApiListener api_listener = 19;
 * @return {?proto.envoy.config.listener.v3.ApiListener}
 */
proto.envoy.config.listener.v3.Listener.prototype.getApiListener = function() {
  return /** @type{?proto.envoy.config.listener.v3.ApiListener} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.listener.v3.ApiListener, 19));
};


/**
 * @param {?proto.envoy.config.listener.v3.ApiListener|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setApiListener = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearApiListener = function() {
  return this.setApiListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasApiListener = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ConnectionBalanceConfig connection_balance_config = 20;
 * @return {?proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig}
 */
proto.envoy.config.listener.v3.Listener.prototype.getConnectionBalanceConfig = function() {
  return /** @type{?proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig, 20));
};


/**
 * @param {?proto.envoy.config.listener.v3.Listener.ConnectionBalanceConfig|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setConnectionBalanceConfig = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearConnectionBalanceConfig = function() {
  return this.setConnectionBalanceConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasConnectionBalanceConfig = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool reuse_port = 21;
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.getReusePort = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.setReusePort = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional google.protobuf.BoolValue enable_reuse_port = 29;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.listener.v3.Listener.prototype.getEnableReusePort = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 29));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setEnableReusePort = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearEnableReusePort = function() {
  return this.setEnableReusePort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasEnableReusePort = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * repeated envoy.config.accesslog.v3.AccessLog access_log = 22;
 * @return {!Array<!proto.envoy.config.accesslog.v3.AccessLog>}
 */
proto.envoy.config.listener.v3.Listener.prototype.getAccessLogList = function() {
  return /** @type{!Array<!proto.envoy.config.accesslog.v3.AccessLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.accesslog.v3.AccessLog, 22));
};


/**
 * @param {!Array<!proto.envoy.config.accesslog.v3.AccessLog>} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setAccessLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.envoy.config.accesslog.v3.AccessLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.accesslog.v3.AccessLog}
 */
proto.envoy.config.listener.v3.Listener.prototype.addAccessLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.envoy.config.accesslog.v3.AccessLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearAccessLogList = function() {
  return this.setAccessLogList([]);
};


/**
 * optional google.protobuf.UInt32Value tcp_backlog_size = 24;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.listener.v3.Listener.prototype.getTcpBacklogSize = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 24));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setTcpBacklogSize = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearTcpBacklogSize = function() {
  return this.setTcpBacklogSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasTcpBacklogSize = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional google.protobuf.UInt32Value max_connections_to_accept_per_socket_event = 34;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.config.listener.v3.Listener.prototype.getMaxConnectionsToAcceptPerSocketEvent = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 34));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setMaxConnectionsToAcceptPerSocketEvent = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearMaxConnectionsToAcceptPerSocketEvent = function() {
  return this.setMaxConnectionsToAcceptPerSocketEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasMaxConnectionsToAcceptPerSocketEvent = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional google.protobuf.BoolValue bind_to_port = 26;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.config.listener.v3.Listener.prototype.getBindToPort = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 26));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setBindToPort = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearBindToPort = function() {
  return this.setBindToPort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasBindToPort = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional InternalListenerConfig internal_listener = 27;
 * @return {?proto.envoy.config.listener.v3.Listener.InternalListenerConfig}
 */
proto.envoy.config.listener.v3.Listener.prototype.getInternalListener = function() {
  return /** @type{?proto.envoy.config.listener.v3.Listener.InternalListenerConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.listener.v3.Listener.InternalListenerConfig, 27));
};


/**
 * @param {?proto.envoy.config.listener.v3.Listener.InternalListenerConfig|undefined} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
*/
proto.envoy.config.listener.v3.Listener.prototype.setInternalListener = function(value) {
  return jspb.Message.setOneofWrapperField(this, 27, proto.envoy.config.listener.v3.Listener.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.clearInternalListener = function() {
  return this.setInternalListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.hasInternalListener = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional bool enable_mptcp = 30;
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.getEnableMptcp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.setEnableMptcp = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};


/**
 * optional bool ignore_global_conn_limit = 31;
 * @return {boolean}
 */
proto.envoy.config.listener.v3.Listener.prototype.getIgnoreGlobalConnLimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.listener.v3.Listener} returns this
 */
proto.envoy.config.listener.v3.Listener.prototype.setIgnoreGlobalConnLimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 31, value);
};


