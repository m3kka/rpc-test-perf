// source: envoy/config/filter/http/fault/v2/fault.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.filter.http.fault.v2.FaultAbort');
goog.provide('proto.envoy.config.filter.http.fault.v2.FaultAbort.ErrorTypeCase');
goog.provide('proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.type.FractionalPercent');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.http.fault.v2.FaultAbort.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.http.fault.v2.FaultAbort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.http.fault.v2.FaultAbort.displayName = 'proto.envoy.config.filter.http.fault.v2.FaultAbort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.displayName = 'proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.oneofGroups_ = [[2,4]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.ErrorTypeCase = {
  ERROR_TYPE_NOT_SET: 0,
  HTTP_STATUS: 2,
  HEADER_ABORT: 4
};

/**
 * @return {proto.envoy.config.filter.http.fault.v2.FaultAbort.ErrorTypeCase}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.getErrorTypeCase = function() {
  return /** @type {proto.envoy.config.filter.http.fault.v2.FaultAbort.ErrorTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.http.fault.v2.FaultAbort.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.fault.v2.FaultAbort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.fault.v2.FaultAbort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.toObject = function(includeInstance, msg) {
  var f, obj = {
    httpStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    headerAbort: (f = msg.getHeaderAbort()) && proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.toObject(includeInstance, f),
    percentage: (f = msg.getPercentage()) && proto.envoy.type.FractionalPercent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.fault.v2.FaultAbort;
  return proto.envoy.config.filter.http.fault.v2.FaultAbort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.fault.v2.FaultAbort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHttpStatus(value);
      break;
    case 4:
      var value = new proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort;
      reader.readMessage(value,proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.deserializeBinaryFromReader);
      msg.setHeaderAbort(value);
      break;
    case 3:
      var value = new proto.envoy.type.FractionalPercent;
      reader.readMessage(value,proto.envoy.type.FractionalPercent.deserializeBinaryFromReader);
      msg.setPercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.fault.v2.FaultAbort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.fault.v2.FaultAbort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getHeaderAbort();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.serializeBinaryToWriter
    );
  }
  f = message.getPercentage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.type.FractionalPercent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort;
  return proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional uint32 http_status = 2;
 * @return {number}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.getHttpStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort} returns this
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.setHttpStatus = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.envoy.config.filter.http.fault.v2.FaultAbort.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort} returns this
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.clearHttpStatus = function() {
  return jspb.Message.setOneofField(this, 2, proto.envoy.config.filter.http.fault.v2.FaultAbort.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.hasHttpStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional HeaderAbort header_abort = 4;
 * @return {?proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.getHeaderAbort = function() {
  return /** @type{?proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort, 4));
};


/**
 * @param {?proto.envoy.config.filter.http.fault.v2.FaultAbort.HeaderAbort|undefined} value
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort} returns this
*/
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.setHeaderAbort = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.config.filter.http.fault.v2.FaultAbort.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort} returns this
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.clearHeaderAbort = function() {
  return this.setHeaderAbort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.hasHeaderAbort = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional envoy.type.FractionalPercent percentage = 3;
 * @return {?proto.envoy.type.FractionalPercent}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.getPercentage = function() {
  return /** @type{?proto.envoy.type.FractionalPercent} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.FractionalPercent, 3));
};


/**
 * @param {?proto.envoy.type.FractionalPercent|undefined} value
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort} returns this
*/
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.setPercentage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.filter.http.fault.v2.FaultAbort} returns this
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.clearPercentage = function() {
  return this.setPercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.http.fault.v2.FaultAbort.prototype.hasPercentage = function() {
  return jspb.Message.getField(this, 3) != null;
};


