// source: envoy/service/discovery/v3/discovery.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.service.discovery.v3.DynamicParameterConstraints');
goog.provide('proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList');
goog.provide('proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint');
goog.provide('proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.ConstraintTypeCase');
goog.provide('proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists');
goog.provide('proto.envoy.service.discovery.v3.DynamicParameterConstraints.TypeCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.service.discovery.v3.DynamicParameterConstraints.oneofGroups_);
};
goog.inherits(proto.envoy.service.discovery.v3.DynamicParameterConstraints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.discovery.v3.DynamicParameterConstraints.displayName = 'proto.envoy.service.discovery.v3.DynamicParameterConstraints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.oneofGroups_);
};
goog.inherits(proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.displayName = 'proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.displayName = 'proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.displayName = 'proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.TypeCase = {
  TYPE_NOT_SET: 0,
  CONSTRAINT: 1,
  OR_CONSTRAINTS: 2,
  AND_CONSTRAINTS: 3,
  NOT_CONSTRAINTS: 4
};

/**
 * @return {proto.envoy.service.discovery.v3.DynamicParameterConstraints.TypeCase}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.getTypeCase = function() {
  return /** @type {proto.envoy.service.discovery.v3.DynamicParameterConstraints.TypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.service.discovery.v3.DynamicParameterConstraints.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v3.DynamicParameterConstraints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.toObject = function(includeInstance, msg) {
  var f, obj = {
    constraint: (f = msg.getConstraint()) && proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.toObject(includeInstance, f),
    orConstraints: (f = msg.getOrConstraints()) && proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.toObject(includeInstance, f),
    andConstraints: (f = msg.getAndConstraints()) && proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.toObject(includeInstance, f),
    notConstraints: (f = msg.getNotConstraints()) && proto.envoy.service.discovery.v3.DynamicParameterConstraints.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v3.DynamicParameterConstraints;
  return proto.envoy.service.discovery.v3.DynamicParameterConstraints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint;
      reader.readMessage(value,proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.deserializeBinaryFromReader);
      msg.setConstraint(value);
      break;
    case 2:
      var value = new proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList;
      reader.readMessage(value,proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.deserializeBinaryFromReader);
      msg.setOrConstraints(value);
      break;
    case 3:
      var value = new proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList;
      reader.readMessage(value,proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.deserializeBinaryFromReader);
      msg.setAndConstraints(value);
      break;
    case 4:
      var value = new proto.envoy.service.discovery.v3.DynamicParameterConstraints;
      reader.readMessage(value,proto.envoy.service.discovery.v3.DynamicParameterConstraints.deserializeBinaryFromReader);
      msg.setNotConstraints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v3.DynamicParameterConstraints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConstraint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.serializeBinaryToWriter
    );
  }
  f = message.getOrConstraints();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.serializeBinaryToWriter
    );
  }
  f = message.getAndConstraints();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.serializeBinaryToWriter
    );
  }
  f = message.getNotConstraints();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.service.discovery.v3.DynamicParameterConstraints.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.ConstraintTypeCase = {
  CONSTRAINT_TYPE_NOT_SET: 0,
  VALUE: 2,
  EXISTS: 3
};

/**
 * @return {proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.ConstraintTypeCase}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.getConstraintTypeCase = function() {
  return /** @type {proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.ConstraintTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exists: (f = msg.getExists()) && proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint;
  return proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = new proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists;
      reader.readMessage(value,proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.deserializeBinaryFromReader);
      msg.setExists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExists();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists;
  return proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.setValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.clearValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Exists exists = 3;
 * @return {?proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.getExists = function() {
  return /** @type{?proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists, 3));
};


/**
 * @param {?proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.Exists|undefined} value
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} returns this
*/
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.setExists = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.clearExists = function() {
  return this.setExists(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint.prototype.hasExists = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.toObject = function(includeInstance, msg) {
  var f, obj = {
    constraintsList: jspb.Message.toObjectList(msg.getConstraintsList(),
    proto.envoy.service.discovery.v3.DynamicParameterConstraints.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList;
  return proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.discovery.v3.DynamicParameterConstraints;
      reader.readMessage(value,proto.envoy.service.discovery.v3.DynamicParameterConstraints.deserializeBinaryFromReader);
      msg.addConstraints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConstraintsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.service.discovery.v3.DynamicParameterConstraints.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DynamicParameterConstraints constraints = 1;
 * @return {!Array<!proto.envoy.service.discovery.v3.DynamicParameterConstraints>}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.prototype.getConstraintsList = function() {
  return /** @type{!Array<!proto.envoy.service.discovery.v3.DynamicParameterConstraints>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.service.discovery.v3.DynamicParameterConstraints, 1));
};


/**
 * @param {!Array<!proto.envoy.service.discovery.v3.DynamicParameterConstraints>} value
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList} returns this
*/
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.prototype.setConstraintsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.service.discovery.v3.DynamicParameterConstraints=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.prototype.addConstraints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.service.discovery.v3.DynamicParameterConstraints, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList.prototype.clearConstraintsList = function() {
  return this.setConstraintsList([]);
};


/**
 * optional SingleConstraint constraint = 1;
 * @return {?proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.getConstraint = function() {
  return /** @type{?proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint, 1));
};


/**
 * @param {?proto.envoy.service.discovery.v3.DynamicParameterConstraints.SingleConstraint|undefined} value
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} returns this
*/
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.setConstraint = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.envoy.service.discovery.v3.DynamicParameterConstraints.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.clearConstraint = function() {
  return this.setConstraint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.hasConstraint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ConstraintList or_constraints = 2;
 * @return {?proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.getOrConstraints = function() {
  return /** @type{?proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList, 2));
};


/**
 * @param {?proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList|undefined} value
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} returns this
*/
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.setOrConstraints = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.service.discovery.v3.DynamicParameterConstraints.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.clearOrConstraints = function() {
  return this.setOrConstraints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.hasOrConstraints = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ConstraintList and_constraints = 3;
 * @return {?proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.getAndConstraints = function() {
  return /** @type{?proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList, 3));
};


/**
 * @param {?proto.envoy.service.discovery.v3.DynamicParameterConstraints.ConstraintList|undefined} value
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} returns this
*/
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.setAndConstraints = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.service.discovery.v3.DynamicParameterConstraints.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.clearAndConstraints = function() {
  return this.setAndConstraints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.hasAndConstraints = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DynamicParameterConstraints not_constraints = 4;
 * @return {?proto.envoy.service.discovery.v3.DynamicParameterConstraints}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.getNotConstraints = function() {
  return /** @type{?proto.envoy.service.discovery.v3.DynamicParameterConstraints} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.discovery.v3.DynamicParameterConstraints, 4));
};


/**
 * @param {?proto.envoy.service.discovery.v3.DynamicParameterConstraints|undefined} value
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} returns this
*/
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.setNotConstraints = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.service.discovery.v3.DynamicParameterConstraints.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.service.discovery.v3.DynamicParameterConstraints} returns this
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.clearNotConstraints = function() {
  return this.setNotConstraints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.discovery.v3.DynamicParameterConstraints.prototype.hasNotConstraints = function() {
  return jspb.Message.getField(this, 4) != null;
};


