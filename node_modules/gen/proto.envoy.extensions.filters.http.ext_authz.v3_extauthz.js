// source: envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz');
goog.provide('proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.ServicesCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.core.v3.GrpcService');
goog.require('proto.envoy.config.core.v3.RuntimeFeatureFlag');
goog.require('proto.envoy.config.core.v3.RuntimeFractionalPercent');
goog.require('proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings');
goog.require('proto.envoy.extensions.filters.http.ext_authz.v3.HttpService');
goog.require('proto.envoy.type.matcher.v3.ListStringMatcher');
goog.require('proto.envoy.type.matcher.v3.MetadataMatcher');
goog.require('proto.envoy.type.v3.HttpStatus');

goog.forwardDeclare('proto.envoy.config.core.v3.ApiVersion');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.repeatedFields_, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.displayName = 'proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.repeatedFields_ = [8,16];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_ = [[1,3]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.ServicesCase = {
  SERVICES_NOT_SET: 0,
  GRPC_SERVICE: 1,
  HTTP_SERVICE: 3
};

/**
 * @return {proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.ServicesCase}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getServicesCase = function() {
  return /** @type {proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.ServicesCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.toObject = function(includeInstance, msg) {
  var f, obj = {
    grpcService: (f = msg.getGrpcService()) && proto.envoy.config.core.v3.GrpcService.toObject(includeInstance, f),
    httpService: (f = msg.getHttpService()) && proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.toObject(includeInstance, f),
    transportApiVersion: jspb.Message.getFieldWithDefault(msg, 12, 0),
    failureModeAllow: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    withRequestBody: (f = msg.getWithRequestBody()) && proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.toObject(includeInstance, f),
    clearRouteCache: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    statusOnError: (f = msg.getStatusOnError()) && proto.envoy.type.v3.HttpStatus.toObject(includeInstance, f),
    metadataContextNamespacesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    typedMetadataContextNamespacesList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    filterEnabled: (f = msg.getFilterEnabled()) && proto.envoy.config.core.v3.RuntimeFractionalPercent.toObject(includeInstance, f),
    filterEnabledMetadata: (f = msg.getFilterEnabledMetadata()) && proto.envoy.type.matcher.v3.MetadataMatcher.toObject(includeInstance, f),
    denyAtDisable: (f = msg.getDenyAtDisable()) && proto.envoy.config.core.v3.RuntimeFeatureFlag.toObject(includeInstance, f),
    includePeerCertificate: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    statPrefix: jspb.Message.getFieldWithDefault(msg, 13, ""),
    bootstrapMetadataLabelsKey: jspb.Message.getFieldWithDefault(msg, 15, ""),
    allowedHeaders: (f = msg.getAllowedHeaders()) && proto.envoy.type.matcher.v3.ListStringMatcher.toObject(includeInstance, f),
    includeTlsSession: jspb.Message.getBooleanFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz;
  return proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.core.v3.GrpcService;
      reader.readMessage(value,proto.envoy.config.core.v3.GrpcService.deserializeBinaryFromReader);
      msg.setGrpcService(value);
      break;
    case 3:
      var value = new proto.envoy.extensions.filters.http.ext_authz.v3.HttpService;
      reader.readMessage(value,proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.deserializeBinaryFromReader);
      msg.setHttpService(value);
      break;
    case 12:
      var value = /** @type {!proto.envoy.config.core.v3.ApiVersion} */ (reader.readEnum());
      msg.setTransportApiVersion(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailureModeAllow(value);
      break;
    case 5:
      var value = new proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings;
      reader.readMessage(value,proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.deserializeBinaryFromReader);
      msg.setWithRequestBody(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClearRouteCache(value);
      break;
    case 7:
      var value = new proto.envoy.type.v3.HttpStatus;
      reader.readMessage(value,proto.envoy.type.v3.HttpStatus.deserializeBinaryFromReader);
      msg.setStatusOnError(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addMetadataContextNamespaces(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addTypedMetadataContextNamespaces(value);
      break;
    case 9:
      var value = new proto.envoy.config.core.v3.RuntimeFractionalPercent;
      reader.readMessage(value,proto.envoy.config.core.v3.RuntimeFractionalPercent.deserializeBinaryFromReader);
      msg.setFilterEnabled(value);
      break;
    case 14:
      var value = new proto.envoy.type.matcher.v3.MetadataMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.MetadataMatcher.deserializeBinaryFromReader);
      msg.setFilterEnabledMetadata(value);
      break;
    case 11:
      var value = new proto.envoy.config.core.v3.RuntimeFeatureFlag;
      reader.readMessage(value,proto.envoy.config.core.v3.RuntimeFeatureFlag.deserializeBinaryFromReader);
      msg.setDenyAtDisable(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludePeerCertificate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBootstrapMetadataLabelsKey(value);
      break;
    case 17:
      var value = new proto.envoy.type.matcher.v3.ListStringMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.ListStringMatcher.deserializeBinaryFromReader);
      msg.setAllowedHeaders(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeTlsSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrpcService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.core.v3.GrpcService.serializeBinaryToWriter
    );
  }
  f = message.getHttpService();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.serializeBinaryToWriter
    );
  }
  f = message.getTransportApiVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getFailureModeAllow();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWithRequestBody();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.serializeBinaryToWriter
    );
  }
  f = message.getClearRouteCache();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getStatusOnError();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.type.v3.HttpStatus.serializeBinaryToWriter
    );
  }
  f = message.getMetadataContextNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getTypedMetadataContextNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getFilterEnabled();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.config.core.v3.RuntimeFractionalPercent.serializeBinaryToWriter
    );
  }
  f = message.getFilterEnabledMetadata();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.envoy.type.matcher.v3.MetadataMatcher.serializeBinaryToWriter
    );
  }
  f = message.getDenyAtDisable();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.envoy.config.core.v3.RuntimeFeatureFlag.serializeBinaryToWriter
    );
  }
  f = message.getIncludePeerCertificate();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBootstrapMetadataLabelsKey();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getAllowedHeaders();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.envoy.type.matcher.v3.ListStringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getIncludeTlsSession();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional envoy.config.core.v3.GrpcService grpc_service = 1;
 * @return {?proto.envoy.config.core.v3.GrpcService}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getGrpcService = function() {
  return /** @type{?proto.envoy.config.core.v3.GrpcService} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.GrpcService, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.GrpcService|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setGrpcService = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearGrpcService = function() {
  return this.setGrpcService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasGrpcService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HttpService http_service = 3;
 * @return {?proto.envoy.extensions.filters.http.ext_authz.v3.HttpService}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getHttpService = function() {
  return /** @type{?proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.ext_authz.v3.HttpService, 3));
};


/**
 * @param {?proto.envoy.extensions.filters.http.ext_authz.v3.HttpService|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setHttpService = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearHttpService = function() {
  return this.setHttpService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasHttpService = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.config.core.v3.ApiVersion transport_api_version = 12;
 * @return {!proto.envoy.config.core.v3.ApiVersion}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getTransportApiVersion = function() {
  return /** @type {!proto.envoy.config.core.v3.ApiVersion} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.envoy.config.core.v3.ApiVersion} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setTransportApiVersion = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional bool failure_mode_allow = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getFailureModeAllow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setFailureModeAllow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional BufferSettings with_request_body = 5;
 * @return {?proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getWithRequestBody = function() {
  return /** @type{?proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings, 5));
};


/**
 * @param {?proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setWithRequestBody = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearWithRequestBody = function() {
  return this.setWithRequestBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasWithRequestBody = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool clear_route_cache = 6;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getClearRouteCache = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setClearRouteCache = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional envoy.type.v3.HttpStatus status_on_error = 7;
 * @return {?proto.envoy.type.v3.HttpStatus}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getStatusOnError = function() {
  return /** @type{?proto.envoy.type.v3.HttpStatus} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.v3.HttpStatus, 7));
};


/**
 * @param {?proto.envoy.type.v3.HttpStatus|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setStatusOnError = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearStatusOnError = function() {
  return this.setStatusOnError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasStatusOnError = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string metadata_context_namespaces = 8;
 * @return {!Array<string>}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getMetadataContextNamespacesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setMetadataContextNamespacesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.addMetadataContextNamespaces = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearMetadataContextNamespacesList = function() {
  return this.setMetadataContextNamespacesList([]);
};


/**
 * repeated string typed_metadata_context_namespaces = 16;
 * @return {!Array<string>}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getTypedMetadataContextNamespacesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setTypedMetadataContextNamespacesList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.addTypedMetadataContextNamespaces = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearTypedMetadataContextNamespacesList = function() {
  return this.setTypedMetadataContextNamespacesList([]);
};


/**
 * optional envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;
 * @return {?proto.envoy.config.core.v3.RuntimeFractionalPercent}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getFilterEnabled = function() {
  return /** @type{?proto.envoy.config.core.v3.RuntimeFractionalPercent} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.RuntimeFractionalPercent, 9));
};


/**
 * @param {?proto.envoy.config.core.v3.RuntimeFractionalPercent|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setFilterEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearFilterEnabled = function() {
  return this.setFilterEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasFilterEnabled = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;
 * @return {?proto.envoy.type.matcher.v3.MetadataMatcher}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getFilterEnabledMetadata = function() {
  return /** @type{?proto.envoy.type.matcher.v3.MetadataMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.MetadataMatcher, 14));
};


/**
 * @param {?proto.envoy.type.matcher.v3.MetadataMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setFilterEnabledMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearFilterEnabledMetadata = function() {
  return this.setFilterEnabledMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasFilterEnabledMetadata = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;
 * @return {?proto.envoy.config.core.v3.RuntimeFeatureFlag}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getDenyAtDisable = function() {
  return /** @type{?proto.envoy.config.core.v3.RuntimeFeatureFlag} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.RuntimeFeatureFlag, 11));
};


/**
 * @param {?proto.envoy.config.core.v3.RuntimeFeatureFlag|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setDenyAtDisable = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearDenyAtDisable = function() {
  return this.setDenyAtDisable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasDenyAtDisable = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool include_peer_certificate = 10;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getIncludePeerCertificate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setIncludePeerCertificate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string stat_prefix = 13;
 * @return {string}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setStatPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string bootstrap_metadata_labels_key = 15;
 * @return {string}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getBootstrapMetadataLabelsKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setBootstrapMetadataLabelsKey = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional envoy.type.matcher.v3.ListStringMatcher allowed_headers = 17;
 * @return {?proto.envoy.type.matcher.v3.ListStringMatcher}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getAllowedHeaders = function() {
  return /** @type{?proto.envoy.type.matcher.v3.ListStringMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.ListStringMatcher, 17));
};


/**
 * @param {?proto.envoy.type.matcher.v3.ListStringMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setAllowedHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearAllowedHeaders = function() {
  return this.setAllowedHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasAllowedHeaders = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool include_tls_session = 18;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getIncludeTlsSession = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setIncludeTlsSession = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


