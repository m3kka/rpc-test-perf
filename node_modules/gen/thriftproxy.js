// source: envoy/extensions/filters/network/thrift_proxy/v3/thrift_proxy.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.accesslog.v3.AccessLog');
goog.require('proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration');
goog.require('proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter');
goog.require('proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds');
goog.require('proto.google.protobuf.UInt32Value');

goog.forwardDeclare('proto.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType');
goog.forwardDeclare('proto.envoy.extensions.filters.network.thrift_proxy.v3.TransportType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.displayName = 'proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.repeatedFields_ = [5,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    transport: jspb.Message.getFieldWithDefault(msg, 2, 0),
    protocol: jspb.Message.getFieldWithDefault(msg, 3, 0),
    statPrefix: jspb.Message.getFieldWithDefault(msg, 1, ""),
    routeConfig: (f = msg.getRouteConfig()) && proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration.toObject(includeInstance, f),
    trds: (f = msg.getTrds()) && proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds.toObject(includeInstance, f),
    thriftFiltersList: jspb.Message.toObjectList(msg.getThriftFiltersList(),
    proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter.toObject, includeInstance),
    payloadPassthrough: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    maxRequestsPerConnection: (f = msg.getMaxRequestsPerConnection()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    accessLogList: jspb.Message.toObjectList(msg.getAccessLogList(),
    proto.envoy.config.accesslog.v3.AccessLog.toObject, includeInstance),
    headerKeysPreserveCase: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy;
  return proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {!proto.envoy.extensions.filters.network.thrift_proxy.v3.TransportType} */ (reader.readEnum());
      msg.setTransport(value);
      break;
    case 3:
      var value = /** @type {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType} */ (reader.readEnum());
      msg.setProtocol(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    case 4:
      var value = new proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration;
      reader.readMessage(value,proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration.deserializeBinaryFromReader);
      msg.setRouteConfig(value);
      break;
    case 8:
      var value = new proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds;
      reader.readMessage(value,proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds.deserializeBinaryFromReader);
      msg.setTrds(value);
      break;
    case 5:
      var value = new proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter;
      reader.readMessage(value,proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter.deserializeBinaryFromReader);
      msg.addThriftFilters(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPayloadPassthrough(value);
      break;
    case 7:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxRequestsPerConnection(value);
      break;
    case 9:
      var value = new proto.envoy.config.accesslog.v3.AccessLog;
      reader.readMessage(value,proto.envoy.config.accesslog.v3.AccessLog.deserializeBinaryFromReader);
      msg.addAccessLog(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHeaderKeysPreserveCase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransport();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getProtocol();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRouteConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getTrds();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds.serializeBinaryToWriter
    );
  }
  f = message.getThriftFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter.serializeBinaryToWriter
    );
  }
  f = message.getPayloadPassthrough();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getMaxRequestsPerConnection();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getAccessLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.envoy.config.accesslog.v3.AccessLog.serializeBinaryToWriter
    );
  }
  f = message.getHeaderKeysPreserveCase();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional TransportType transport = 2;
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.TransportType}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getTransport = function() {
  return /** @type {!proto.envoy.extensions.filters.network.thrift_proxy.v3.TransportType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.network.thrift_proxy.v3.TransportType} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setTransport = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ProtocolType protocol = 3;
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getProtocol = function() {
  return /** @type {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string stat_prefix = 1;
 * @return {string}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setStatPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RouteConfiguration route_config = 4;
 * @return {?proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getRouteConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration, 4));
};


/**
 * @param {?proto.envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
*/
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setRouteConfig = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.clearRouteConfig = function() {
  return this.setRouteConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.hasRouteConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Trds trds = 8;
 * @return {?proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getTrds = function() {
  return /** @type{?proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds, 8));
};


/**
 * @param {?proto.envoy.extensions.filters.network.thrift_proxy.v3.Trds|undefined} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
*/
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setTrds = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.clearTrds = function() {
  return this.setTrds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.hasTrds = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated ThriftFilter thrift_filters = 5;
 * @return {!Array<!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter>}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getThriftFiltersList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter, 5));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter>} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
*/
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setThriftFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.addThriftFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.clearThriftFiltersList = function() {
  return this.setThriftFiltersList([]);
};


/**
 * optional bool payload_passthrough = 6;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getPayloadPassthrough = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setPayloadPassthrough = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.UInt32Value max_requests_per_connection = 7;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getMaxRequestsPerConnection = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 7));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
*/
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setMaxRequestsPerConnection = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.clearMaxRequestsPerConnection = function() {
  return this.setMaxRequestsPerConnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.hasMaxRequestsPerConnection = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated envoy.config.accesslog.v3.AccessLog access_log = 9;
 * @return {!Array<!proto.envoy.config.accesslog.v3.AccessLog>}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getAccessLogList = function() {
  return /** @type{!Array<!proto.envoy.config.accesslog.v3.AccessLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.accesslog.v3.AccessLog, 9));
};


/**
 * @param {!Array<!proto.envoy.config.accesslog.v3.AccessLog>} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
*/
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setAccessLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.envoy.config.accesslog.v3.AccessLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.accesslog.v3.AccessLog}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.addAccessLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.envoy.config.accesslog.v3.AccessLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.clearAccessLogList = function() {
  return this.setAccessLogList([]);
};


/**
 * optional bool header_keys_preserve_case = 10;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.getHeaderKeysPreserveCase = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy} returns this
 */
proto.envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy.prototype.setHeaderKeysPreserveCase = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


