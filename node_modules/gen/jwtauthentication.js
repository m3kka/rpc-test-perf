// source: envoy/extensions/filters/http/jwt_authn/v3/config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule');
goog.require('proto.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider');
goog.require('proto.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement');
goog.require('proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.displayName = 'proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.toObject = function(includeInstance, msg) {
  var f, obj = {
    providersMap: (f = msg.getProvidersMap()) ? f.toObject(includeInstance, proto.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.toObject) : [],
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.toObject, includeInstance),
    filterStateRules: (f = msg.getFilterStateRules()) && proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.toObject(includeInstance, f),
    bypassCorsPreflight: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    requirementMapMap: (f = msg.getRequirementMapMap()) ? f.toObject(includeInstance, proto.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication;
  return proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getProvidersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.deserializeBinaryFromReader, "", new proto.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider());
         });
      break;
    case 2:
      var value = new proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule;
      reader.readMessage(value,proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    case 3:
      var value = new proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule;
      reader.readMessage(value,proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.deserializeBinaryFromReader);
      msg.setFilterStateRules(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBypassCorsPreflight(value);
      break;
    case 5:
      var value = msg.getRequirementMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinaryFromReader, "", new proto.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvidersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.serializeBinaryToWriter);
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.serializeBinaryToWriter
    );
  }
  f = message.getFilterStateRules();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.serializeBinaryToWriter
    );
  }
  f = message.getBypassCorsPreflight();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRequirementMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.serializeBinaryToWriter);
  }
};


/**
 * map<string, JwtProvider> providers = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider>}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getProvidersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} returns this
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.clearProvidersMap = function() {
  this.getProvidersMap().clear();
  return this;
};


/**
 * repeated RequirementRule rules = 2;
 * @return {!Array<!proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule>}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule, 2));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule>} value
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} returns this
*/
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} returns this
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};


/**
 * optional FilterStateRule filter_state_rules = 3;
 * @return {?proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getFilterStateRules = function() {
  return /** @type{?proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule, 3));
};


/**
 * @param {?proto.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule|undefined} value
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} returns this
*/
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.setFilterStateRules = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} returns this
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.clearFilterStateRules = function() {
  return this.setFilterStateRules(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.hasFilterStateRules = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool bypass_cors_preflight = 4;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getBypassCorsPreflight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} returns this
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.setBypassCorsPreflight = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * map<string, JwtRequirement> requirement_map = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>}
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getRequirementMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} returns this
 */
proto.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.clearRequirementMapMap = function() {
  this.getRequirementMapMap().clear();
  return this;
};


