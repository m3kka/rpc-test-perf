// source: envoy/extensions/filters/http/decompressor/v3/decompressor.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.http.decompressor.v3.Decompressor');
goog.provide('proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig');
goog.provide('proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig');
goog.provide('proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.core.v3.RuntimeFeatureFlag');
goog.require('proto.envoy.config.core.v3.TypedExtensionConfig');
goog.require('proto.google.protobuf.BoolValue');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.http.decompressor.v3.Decompressor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.displayName = 'proto.envoy.extensions.filters.http.decompressor.v3.Decompressor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.displayName = 'proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.displayName = 'proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.displayName = 'proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.toObject = function(includeInstance, msg) {
  var f, obj = {
    decompressorLibrary: (f = msg.getDecompressorLibrary()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    requestDirectionConfig: (f = msg.getRequestDirectionConfig()) && proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.toObject(includeInstance, f),
    responseDirectionConfig: (f = msg.getResponseDirectionConfig()) && proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.decompressor.v3.Decompressor;
  return proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setDecompressorLibrary(value);
      break;
    case 2:
      var value = new proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.deserializeBinaryFromReader);
      msg.setRequestDirectionConfig(value);
      break;
    case 3:
      var value = new proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.deserializeBinaryFromReader);
      msg.setResponseDirectionConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDecompressorLibrary();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getRequestDirectionConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.serializeBinaryToWriter
    );
  }
  f = message.getResponseDirectionConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: (f = msg.getEnabled()) && proto.envoy.config.core.v3.RuntimeFeatureFlag.toObject(includeInstance, f),
    ignoreNoTransformHeader: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig;
  return proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.core.v3.RuntimeFeatureFlag;
      reader.readMessage(value,proto.envoy.config.core.v3.RuntimeFeatureFlag.deserializeBinaryFromReader);
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreNoTransformHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.core.v3.RuntimeFeatureFlag.serializeBinaryToWriter
    );
  }
  f = message.getIgnoreNoTransformHeader();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional envoy.config.core.v3.RuntimeFeatureFlag enabled = 1;
 * @return {?proto.envoy.config.core.v3.RuntimeFeatureFlag}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.prototype.getEnabled = function() {
  return /** @type{?proto.envoy.config.core.v3.RuntimeFeatureFlag} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.RuntimeFeatureFlag, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.RuntimeFeatureFlag|undefined} value
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig} returns this
*/
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.prototype.setEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig} returns this
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.prototype.clearEnabled = function() {
  return this.setEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool ignore_no_transform_header = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.prototype.getIgnoreNoTransformHeader = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig} returns this
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.prototype.setIgnoreNoTransformHeader = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonConfig: (f = msg.getCommonConfig()) && proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.toObject(includeInstance, f),
    advertiseAcceptEncoding: (f = msg.getAdvertiseAcceptEncoding()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig;
  return proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.deserializeBinaryFromReader);
      msg.setCommonConfig(value);
      break;
    case 2:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setAdvertiseAcceptEncoding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.serializeBinaryToWriter
    );
  }
  f = message.getAdvertiseAcceptEncoding();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonDirectionConfig common_config = 1;
 * @return {?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.getCommonConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig, 1));
};


/**
 * @param {?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig} returns this
*/
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.setCommonConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig} returns this
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.clearCommonConfig = function() {
  return this.setCommonConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.hasCommonConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.BoolValue advertise_accept_encoding = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.getAdvertiseAcceptEncoding = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 2));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig} returns this
*/
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.setAdvertiseAcceptEncoding = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig} returns this
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.clearAdvertiseAcceptEncoding = function() {
  return this.setAdvertiseAcceptEncoding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.prototype.hasAdvertiseAcceptEncoding = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonConfig: (f = msg.getCommonConfig()) && proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig;
  return proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.deserializeBinaryFromReader);
      msg.setCommonConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonDirectionConfig common_config = 1;
 * @return {?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.prototype.getCommonConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig, 1));
};


/**
 * @param {?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig} returns this
*/
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.prototype.setCommonConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig} returns this
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.prototype.clearCommonConfig = function() {
  return this.setCommonConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.prototype.hasCommonConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig decompressor_library = 1;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.getDecompressorLibrary = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} returns this
*/
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.setDecompressorLibrary = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} returns this
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.clearDecompressorLibrary = function() {
  return this.setDecompressorLibrary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.hasDecompressorLibrary = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RequestDirectionConfig request_direction_config = 2;
 * @return {?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.getRequestDirectionConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig, 2));
};


/**
 * @param {?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} returns this
*/
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.setRequestDirectionConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} returns this
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.clearRequestDirectionConfig = function() {
  return this.setRequestDirectionConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.hasRequestDirectionConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResponseDirectionConfig response_direction_config = 3;
 * @return {?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.getResponseDirectionConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig, 3));
};


/**
 * @param {?proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} returns this
*/
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.setResponseDirectionConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.decompressor.v3.Decompressor} returns this
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.clearResponseDirectionConfig = function() {
  return this.setResponseDirectionConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.decompressor.v3.Decompressor.prototype.hasResponseDirectionConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


