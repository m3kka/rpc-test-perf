// source: envoy/extensions/filters/http/fault/v3/fault.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.http.fault.v3.HTTPFault');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.route.v3.HeaderMatcher');
goog.require('proto.envoy.extensions.filters.common.fault.v3.FaultDelay');
goog.require('proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit');
goog.require('proto.envoy.extensions.filters.http.fault.v3.FaultAbort');
goog.require('proto.google.protobuf.Struct');
goog.require('proto.google.protobuf.UInt32Value');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.http.fault.v3.HTTPFault.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.http.fault.v3.HTTPFault, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.fault.v3.HTTPFault.displayName = 'proto.envoy.extensions.filters.http.fault.v3.HTTPFault';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.fault.v3.HTTPFault.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.toObject = function(includeInstance, msg) {
  var f, obj = {
    delay: (f = msg.getDelay()) && proto.envoy.extensions.filters.common.fault.v3.FaultDelay.toObject(includeInstance, f),
    abort: (f = msg.getAbort()) && proto.envoy.extensions.filters.http.fault.v3.FaultAbort.toObject(includeInstance, f),
    upstreamCluster: jspb.Message.getFieldWithDefault(msg, 3, ""),
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    proto.envoy.config.route.v3.HeaderMatcher.toObject, includeInstance),
    downstreamNodesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    maxActiveFaults: (f = msg.getMaxActiveFaults()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    responseRateLimit: (f = msg.getResponseRateLimit()) && proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit.toObject(includeInstance, f),
    delayPercentRuntime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    abortPercentRuntime: jspb.Message.getFieldWithDefault(msg, 9, ""),
    delayDurationRuntime: jspb.Message.getFieldWithDefault(msg, 10, ""),
    abortHttpStatusRuntime: jspb.Message.getFieldWithDefault(msg, 11, ""),
    maxActiveFaultsRuntime: jspb.Message.getFieldWithDefault(msg, 12, ""),
    responseRateLimitPercentRuntime: jspb.Message.getFieldWithDefault(msg, 13, ""),
    abortGrpcStatusRuntime: jspb.Message.getFieldWithDefault(msg, 14, ""),
    disableDownstreamClusterStats: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    filterMetadata: (f = msg.getFilterMetadata()) && proto.google.protobuf.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.fault.v3.HTTPFault;
  return proto.envoy.extensions.filters.http.fault.v3.HTTPFault.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.extensions.filters.common.fault.v3.FaultDelay;
      reader.readMessage(value,proto.envoy.extensions.filters.common.fault.v3.FaultDelay.deserializeBinaryFromReader);
      msg.setDelay(value);
      break;
    case 2:
      var value = new proto.envoy.extensions.filters.http.fault.v3.FaultAbort;
      reader.readMessage(value,proto.envoy.extensions.filters.http.fault.v3.FaultAbort.deserializeBinaryFromReader);
      msg.setAbort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpstreamCluster(value);
      break;
    case 4:
      var value = new proto.envoy.config.route.v3.HeaderMatcher;
      reader.readMessage(value,proto.envoy.config.route.v3.HeaderMatcher.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addDownstreamNodes(value);
      break;
    case 6:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxActiveFaults(value);
      break;
    case 7:
      var value = new proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit;
      reader.readMessage(value,proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit.deserializeBinaryFromReader);
      msg.setResponseRateLimit(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelayPercentRuntime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbortPercentRuntime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelayDurationRuntime(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbortHttpStatusRuntime(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxActiveFaultsRuntime(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponseRateLimitPercentRuntime(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbortGrpcStatusRuntime(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableDownstreamClusterStats(value);
      break;
    case 16:
      var value = new proto.google.protobuf.Struct;
      reader.readMessage(value,proto.google.protobuf.Struct.deserializeBinaryFromReader);
      msg.setFilterMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.fault.v3.HTTPFault.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelay();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.extensions.filters.common.fault.v3.FaultDelay.serializeBinaryToWriter
    );
  }
  f = message.getAbort();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.extensions.filters.http.fault.v3.FaultAbort.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamCluster();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.envoy.config.route.v3.HeaderMatcher.serializeBinaryToWriter
    );
  }
  f = message.getDownstreamNodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getMaxActiveFaults();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getResponseRateLimit();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit.serializeBinaryToWriter
    );
  }
  f = message.getDelayPercentRuntime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAbortPercentRuntime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDelayDurationRuntime();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAbortHttpStatusRuntime();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMaxActiveFaultsRuntime();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getResponseRateLimitPercentRuntime();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAbortGrpcStatusRuntime();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getDisableDownstreamClusterStats();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getFilterMetadata();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.google.protobuf.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.extensions.filters.common.fault.v3.FaultDelay delay = 1;
 * @return {?proto.envoy.extensions.filters.common.fault.v3.FaultDelay}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getDelay = function() {
  return /** @type{?proto.envoy.extensions.filters.common.fault.v3.FaultDelay} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.common.fault.v3.FaultDelay, 1));
};


/**
 * @param {?proto.envoy.extensions.filters.common.fault.v3.FaultDelay|undefined} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
*/
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setDelay = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.clearDelay = function() {
  return this.setDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.hasDelay = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FaultAbort abort = 2;
 * @return {?proto.envoy.extensions.filters.http.fault.v3.FaultAbort}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getAbort = function() {
  return /** @type{?proto.envoy.extensions.filters.http.fault.v3.FaultAbort} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.fault.v3.FaultAbort, 2));
};


/**
 * @param {?proto.envoy.extensions.filters.http.fault.v3.FaultAbort|undefined} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
*/
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setAbort = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.clearAbort = function() {
  return this.setAbort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.hasAbort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string upstream_cluster = 3;
 * @return {string}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getUpstreamCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setUpstreamCluster = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated envoy.config.route.v3.HeaderMatcher headers = 4;
 * @return {!Array<!proto.envoy.config.route.v3.HeaderMatcher>}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getHeadersList = function() {
  return /** @type{!Array<!proto.envoy.config.route.v3.HeaderMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.route.v3.HeaderMatcher, 4));
};


/**
 * @param {!Array<!proto.envoy.config.route.v3.HeaderMatcher>} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
*/
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setHeadersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.envoy.config.route.v3.HeaderMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.route.v3.HeaderMatcher}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.envoy.config.route.v3.HeaderMatcher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.clearHeadersList = function() {
  return this.setHeadersList([]);
};


/**
 * repeated string downstream_nodes = 5;
 * @return {!Array<string>}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getDownstreamNodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setDownstreamNodesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.addDownstreamNodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.clearDownstreamNodesList = function() {
  return this.setDownstreamNodesList([]);
};


/**
 * optional google.protobuf.UInt32Value max_active_faults = 6;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getMaxActiveFaults = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 6));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
*/
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setMaxActiveFaults = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.clearMaxActiveFaults = function() {
  return this.setMaxActiveFaults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.hasMaxActiveFaults = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional envoy.extensions.filters.common.fault.v3.FaultRateLimit response_rate_limit = 7;
 * @return {?proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getResponseRateLimit = function() {
  return /** @type{?proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit, 7));
};


/**
 * @param {?proto.envoy.extensions.filters.common.fault.v3.FaultRateLimit|undefined} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
*/
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setResponseRateLimit = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.clearResponseRateLimit = function() {
  return this.setResponseRateLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.hasResponseRateLimit = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string delay_percent_runtime = 8;
 * @return {string}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getDelayPercentRuntime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setDelayPercentRuntime = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string abort_percent_runtime = 9;
 * @return {string}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getAbortPercentRuntime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setAbortPercentRuntime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string delay_duration_runtime = 10;
 * @return {string}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getDelayDurationRuntime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setDelayDurationRuntime = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string abort_http_status_runtime = 11;
 * @return {string}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getAbortHttpStatusRuntime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setAbortHttpStatusRuntime = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string max_active_faults_runtime = 12;
 * @return {string}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getMaxActiveFaultsRuntime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setMaxActiveFaultsRuntime = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string response_rate_limit_percent_runtime = 13;
 * @return {string}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getResponseRateLimitPercentRuntime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setResponseRateLimitPercentRuntime = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string abort_grpc_status_runtime = 14;
 * @return {string}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getAbortGrpcStatusRuntime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setAbortGrpcStatusRuntime = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool disable_downstream_cluster_stats = 15;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getDisableDownstreamClusterStats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setDisableDownstreamClusterStats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional google.protobuf.Struct filter_metadata = 16;
 * @return {?proto.google.protobuf.Struct}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.getFilterMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Struct, 16));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
*/
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.setFilterMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.fault.v3.HTTPFault} returns this
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.clearFilterMetadata = function() {
  return this.setFilterMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.fault.v3.HTTPFault.prototype.hasFilterMetadata = function() {
  return jspb.Message.getField(this, 16) != null;
};


