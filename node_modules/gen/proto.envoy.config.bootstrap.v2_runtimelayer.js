// source: envoy/config/bootstrap/v2/bootstrap.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.bootstrap.v2.RuntimeLayer');
goog.provide('proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer');
goog.provide('proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer');
goog.provide('proto.envoy.config.bootstrap.v2.RuntimeLayer.LayerSpecifierCase');
goog.provide('proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.api.v2.core.ConfigSource');
goog.require('proto.google.protobuf.Struct');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.bootstrap.v2.RuntimeLayer.oneofGroups_);
};
goog.inherits(proto.envoy.config.bootstrap.v2.RuntimeLayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v2.RuntimeLayer.displayName = 'proto.envoy.config.bootstrap.v2.RuntimeLayer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.displayName = 'proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.displayName = 'proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.displayName = 'proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.LayerSpecifierCase = {
  LAYER_SPECIFIER_NOT_SET: 0,
  STATIC_LAYER: 2,
  DISK_LAYER: 3,
  ADMIN_LAYER: 4,
  RTDS_LAYER: 5
};

/**
 * @return {proto.envoy.config.bootstrap.v2.RuntimeLayer.LayerSpecifierCase}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.getLayerSpecifierCase = function() {
  return /** @type {proto.envoy.config.bootstrap.v2.RuntimeLayer.LayerSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.bootstrap.v2.RuntimeLayer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v2.RuntimeLayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    staticLayer: (f = msg.getStaticLayer()) && proto.google.protobuf.Struct.toObject(includeInstance, f),
    diskLayer: (f = msg.getDiskLayer()) && proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.toObject(includeInstance, f),
    adminLayer: (f = msg.getAdminLayer()) && proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.toObject(includeInstance, f),
    rtdsLayer: (f = msg.getRtdsLayer()) && proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v2.RuntimeLayer;
  return proto.envoy.config.bootstrap.v2.RuntimeLayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.protobuf.Struct;
      reader.readMessage(value,proto.google.protobuf.Struct.deserializeBinaryFromReader);
      msg.setStaticLayer(value);
      break;
    case 3:
      var value = new proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.deserializeBinaryFromReader);
      msg.setDiskLayer(value);
      break;
    case 4:
      var value = new proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.deserializeBinaryFromReader);
      msg.setAdminLayer(value);
      break;
    case 5:
      var value = new proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.deserializeBinaryFromReader);
      msg.setRtdsLayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v2.RuntimeLayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStaticLayer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.Struct.serializeBinaryToWriter
    );
  }
  f = message.getDiskLayer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.serializeBinaryToWriter
    );
  }
  f = message.getAdminLayer();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.serializeBinaryToWriter
    );
  }
  f = message.getRtdsLayer();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.toObject = function(includeInstance, msg) {
  var f, obj = {
    symlinkRoot: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subdirectory: jspb.Message.getFieldWithDefault(msg, 3, ""),
    appendServiceCluster: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer;
  return proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymlinkRoot(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubdirectory(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAppendServiceCluster(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymlinkRoot();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubdirectory();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAppendServiceCluster();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string symlink_root = 1;
 * @return {string}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.prototype.getSymlinkRoot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.prototype.setSymlinkRoot = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subdirectory = 3;
 * @return {string}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.prototype.getSubdirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.prototype.setSubdirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool append_service_cluster = 2;
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.prototype.getAppendServiceCluster = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer.prototype.setAppendServiceCluster = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer;
  return proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rtdsConfig: (f = msg.getRtdsConfig()) && proto.envoy.api.v2.core.ConfigSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer;
  return proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.envoy.api.v2.core.ConfigSource;
      reader.readMessage(value,proto.envoy.api.v2.core.ConfigSource.deserializeBinaryFromReader);
      msg.setRtdsConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRtdsConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.api.v2.core.ConfigSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional envoy.api.v2.core.ConfigSource rtds_config = 2;
 * @return {?proto.envoy.api.v2.core.ConfigSource}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.prototype.getRtdsConfig = function() {
  return /** @type{?proto.envoy.api.v2.core.ConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.ConfigSource, 2));
};


/**
 * @param {?proto.envoy.api.v2.core.ConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer} returns this
*/
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.prototype.setRtdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.prototype.clearRtdsConfig = function() {
  return this.setRtdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer.prototype.hasRtdsConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct static_layer = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.getStaticLayer = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
*/
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.setStaticLayer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.config.bootstrap.v2.RuntimeLayer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.clearStaticLayer = function() {
  return this.setStaticLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.hasStaticLayer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DiskLayer disk_layer = 3;
 * @return {?proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.getDiskLayer = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer, 3));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
*/
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.setDiskLayer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.config.bootstrap.v2.RuntimeLayer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.clearDiskLayer = function() {
  return this.setDiskLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.hasDiskLayer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AdminLayer admin_layer = 4;
 * @return {?proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.getAdminLayer = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer, 4));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
*/
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.setAdminLayer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.config.bootstrap.v2.RuntimeLayer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.clearAdminLayer = function() {
  return this.setAdminLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.hasAdminLayer = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RtdsLayer rtds_layer = 5;
 * @return {?proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.getRtdsLayer = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer, 5));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
*/
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.setRtdsLayer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.envoy.config.bootstrap.v2.RuntimeLayer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.RuntimeLayer} returns this
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.clearRtdsLayer = function() {
  return this.setRtdsLayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.RuntimeLayer.prototype.hasRtdsLayer = function() {
  return jspb.Message.getField(this, 5) != null;
};


