// source: contrib/envoy/extensions/matching/input_matchers/hyperscan/v3alpha/hyperscan.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan');
goog.provide('proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.displayName = 'proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.displayName = 'proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.toObject = function(includeInstance, msg) {
  var f, obj = {
    regexesList: jspb.Message.toObjectList(msg.getRegexesList(),
    proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan;
  return proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex;
      reader.readMessage(value,proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.deserializeBinaryFromReader);
      msg.addRegexes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegexesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.toObject = function(includeInstance, msg) {
  var f, obj = {
    regex: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    caseless: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    dotAll: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    multiline: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    allowEmpty: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    utf8: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    ucp: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    combination: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    quiet: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex;
  return proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCaseless(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDotAll(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMultiline(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowEmpty(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUtf8(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUcp(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCombination(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuiet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegex();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCaseless();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDotAll();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMultiline();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getAllowEmpty();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getUtf8();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getUcp();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getCombination();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getQuiet();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string regex = 1;
 * @return {string}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getRegex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setRegex = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 id = 2;
 * @return {number}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool caseless = 3;
 * @return {boolean}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getCaseless = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setCaseless = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool dot_all = 4;
 * @return {boolean}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getDotAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setDotAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool multiline = 5;
 * @return {boolean}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getMultiline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setMultiline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool allow_empty = 6;
 * @return {boolean}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getAllowEmpty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setAllowEmpty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool utf8 = 7;
 * @return {boolean}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getUtf8 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setUtf8 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool ucp = 8;
 * @return {boolean}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getUcp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setUcp = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool combination = 9;
 * @return {boolean}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getCombination = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setCombination = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool quiet = 10;
 * @return {boolean}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.getQuiet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex.prototype.setQuiet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * repeated Regex regexes = 1;
 * @return {!Array<!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex>}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.prototype.getRegexesList = function() {
  return /** @type{!Array<!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex, 1));
};


/**
 * @param {!Array<!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex>} value
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan} returns this
*/
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.prototype.setRegexesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex}
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.prototype.addRegexes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.Regex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan} returns this
 */
proto.envoy.extensions.matching.input_matchers.hyperscan.v3alpha.Hyperscan.prototype.clearRegexesList = function() {
  return this.setRegexesList([]);
};


