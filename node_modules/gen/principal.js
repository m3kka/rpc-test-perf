// source: envoy/config/rbac/v3/rbac.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.rbac.v3.Principal');
goog.provide('proto.envoy.config.rbac.v3.Principal.Authenticated');
goog.provide('proto.envoy.config.rbac.v3.Principal.IdentifierCase');
goog.provide('proto.envoy.config.rbac.v3.Principal.Set');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.core.v3.CidrRange');
goog.require('proto.envoy.config.route.v3.HeaderMatcher');
goog.require('proto.envoy.type.matcher.v3.FilterStateMatcher');
goog.require('proto.envoy.type.matcher.v3.MetadataMatcher');
goog.require('proto.envoy.type.matcher.v3.PathMatcher');
goog.require('proto.envoy.type.matcher.v3.StringMatcher');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.rbac.v3.Principal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.rbac.v3.Principal.oneofGroups_);
};
goog.inherits(proto.envoy.config.rbac.v3.Principal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.rbac.v3.Principal.displayName = 'proto.envoy.config.rbac.v3.Principal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.rbac.v3.Principal.Set = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.rbac.v3.Principal.Set.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.rbac.v3.Principal.Set, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.rbac.v3.Principal.Set.displayName = 'proto.envoy.config.rbac.v3.Principal.Set';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.rbac.v3.Principal.Authenticated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.rbac.v3.Principal.Authenticated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.rbac.v3.Principal.Authenticated.displayName = 'proto.envoy.config.rbac.v3.Principal.Authenticated';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.rbac.v3.Principal.oneofGroups_ = [[1,2,3,4,5,10,11,6,9,7,12,8]];

/**
 * @enum {number}
 */
proto.envoy.config.rbac.v3.Principal.IdentifierCase = {
  IDENTIFIER_NOT_SET: 0,
  AND_IDS: 1,
  OR_IDS: 2,
  ANY: 3,
  AUTHENTICATED: 4,
  SOURCE_IP: 5,
  DIRECT_REMOTE_IP: 10,
  REMOTE_IP: 11,
  HEADER: 6,
  URL_PATH: 9,
  METADATA: 7,
  FILTER_STATE: 12,
  NOT_ID: 8
};

/**
 * @return {proto.envoy.config.rbac.v3.Principal.IdentifierCase}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getIdentifierCase = function() {
  return /** @type {proto.envoy.config.rbac.v3.Principal.IdentifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.rbac.v3.Principal.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.rbac.v3.Principal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.rbac.v3.Principal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.rbac.v3.Principal.toObject = function(includeInstance, msg) {
  var f, obj = {
    andIds: (f = msg.getAndIds()) && proto.envoy.config.rbac.v3.Principal.Set.toObject(includeInstance, f),
    orIds: (f = msg.getOrIds()) && proto.envoy.config.rbac.v3.Principal.Set.toObject(includeInstance, f),
    any: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    authenticated: (f = msg.getAuthenticated()) && proto.envoy.config.rbac.v3.Principal.Authenticated.toObject(includeInstance, f),
    sourceIp: (f = msg.getSourceIp()) && proto.envoy.config.core.v3.CidrRange.toObject(includeInstance, f),
    directRemoteIp: (f = msg.getDirectRemoteIp()) && proto.envoy.config.core.v3.CidrRange.toObject(includeInstance, f),
    remoteIp: (f = msg.getRemoteIp()) && proto.envoy.config.core.v3.CidrRange.toObject(includeInstance, f),
    header: (f = msg.getHeader()) && proto.envoy.config.route.v3.HeaderMatcher.toObject(includeInstance, f),
    urlPath: (f = msg.getUrlPath()) && proto.envoy.type.matcher.v3.PathMatcher.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.envoy.type.matcher.v3.MetadataMatcher.toObject(includeInstance, f),
    filterState: (f = msg.getFilterState()) && proto.envoy.type.matcher.v3.FilterStateMatcher.toObject(includeInstance, f),
    notId: (f = msg.getNotId()) && proto.envoy.config.rbac.v3.Principal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.rbac.v3.Principal}
 */
proto.envoy.config.rbac.v3.Principal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.rbac.v3.Principal;
  return proto.envoy.config.rbac.v3.Principal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.rbac.v3.Principal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.rbac.v3.Principal}
 */
proto.envoy.config.rbac.v3.Principal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.rbac.v3.Principal.Set;
      reader.readMessage(value,proto.envoy.config.rbac.v3.Principal.Set.deserializeBinaryFromReader);
      msg.setAndIds(value);
      break;
    case 2:
      var value = new proto.envoy.config.rbac.v3.Principal.Set;
      reader.readMessage(value,proto.envoy.config.rbac.v3.Principal.Set.deserializeBinaryFromReader);
      msg.setOrIds(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAny(value);
      break;
    case 4:
      var value = new proto.envoy.config.rbac.v3.Principal.Authenticated;
      reader.readMessage(value,proto.envoy.config.rbac.v3.Principal.Authenticated.deserializeBinaryFromReader);
      msg.setAuthenticated(value);
      break;
    case 5:
      var value = new proto.envoy.config.core.v3.CidrRange;
      reader.readMessage(value,proto.envoy.config.core.v3.CidrRange.deserializeBinaryFromReader);
      msg.setSourceIp(value);
      break;
    case 10:
      var value = new proto.envoy.config.core.v3.CidrRange;
      reader.readMessage(value,proto.envoy.config.core.v3.CidrRange.deserializeBinaryFromReader);
      msg.setDirectRemoteIp(value);
      break;
    case 11:
      var value = new proto.envoy.config.core.v3.CidrRange;
      reader.readMessage(value,proto.envoy.config.core.v3.CidrRange.deserializeBinaryFromReader);
      msg.setRemoteIp(value);
      break;
    case 6:
      var value = new proto.envoy.config.route.v3.HeaderMatcher;
      reader.readMessage(value,proto.envoy.config.route.v3.HeaderMatcher.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 9:
      var value = new proto.envoy.type.matcher.v3.PathMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.PathMatcher.deserializeBinaryFromReader);
      msg.setUrlPath(value);
      break;
    case 7:
      var value = new proto.envoy.type.matcher.v3.MetadataMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.MetadataMatcher.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 12:
      var value = new proto.envoy.type.matcher.v3.FilterStateMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.FilterStateMatcher.deserializeBinaryFromReader);
      msg.setFilterState(value);
      break;
    case 8:
      var value = new proto.envoy.config.rbac.v3.Principal;
      reader.readMessage(value,proto.envoy.config.rbac.v3.Principal.deserializeBinaryFromReader);
      msg.setNotId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.rbac.v3.Principal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.rbac.v3.Principal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.rbac.v3.Principal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.rbac.v3.Principal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAndIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.rbac.v3.Principal.Set.serializeBinaryToWriter
    );
  }
  f = message.getOrIds();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.rbac.v3.Principal.Set.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getAuthenticated();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.config.rbac.v3.Principal.Authenticated.serializeBinaryToWriter
    );
  }
  f = message.getSourceIp();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.config.core.v3.CidrRange.serializeBinaryToWriter
    );
  }
  f = message.getDirectRemoteIp();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.envoy.config.core.v3.CidrRange.serializeBinaryToWriter
    );
  }
  f = message.getRemoteIp();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.envoy.config.core.v3.CidrRange.serializeBinaryToWriter
    );
  }
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.config.route.v3.HeaderMatcher.serializeBinaryToWriter
    );
  }
  f = message.getUrlPath();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.type.matcher.v3.PathMatcher.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.type.matcher.v3.MetadataMatcher.serializeBinaryToWriter
    );
  }
  f = message.getFilterState();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.envoy.type.matcher.v3.FilterStateMatcher.serializeBinaryToWriter
    );
  }
  f = message.getNotId();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envoy.config.rbac.v3.Principal.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.rbac.v3.Principal.Set.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.rbac.v3.Principal.Set.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.rbac.v3.Principal.Set.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.rbac.v3.Principal.Set} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.rbac.v3.Principal.Set.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: jspb.Message.toObjectList(msg.getIdsList(),
    proto.envoy.config.rbac.v3.Principal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.rbac.v3.Principal.Set}
 */
proto.envoy.config.rbac.v3.Principal.Set.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.rbac.v3.Principal.Set;
  return proto.envoy.config.rbac.v3.Principal.Set.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.rbac.v3.Principal.Set} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.rbac.v3.Principal.Set}
 */
proto.envoy.config.rbac.v3.Principal.Set.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.rbac.v3.Principal;
      reader.readMessage(value,proto.envoy.config.rbac.v3.Principal.deserializeBinaryFromReader);
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.rbac.v3.Principal.Set.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.rbac.v3.Principal.Set.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.rbac.v3.Principal.Set} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.rbac.v3.Principal.Set.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.config.rbac.v3.Principal.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Principal ids = 1;
 * @return {!Array<!proto.envoy.config.rbac.v3.Principal>}
 */
proto.envoy.config.rbac.v3.Principal.Set.prototype.getIdsList = function() {
  return /** @type{!Array<!proto.envoy.config.rbac.v3.Principal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.rbac.v3.Principal, 1));
};


/**
 * @param {!Array<!proto.envoy.config.rbac.v3.Principal>} value
 * @return {!proto.envoy.config.rbac.v3.Principal.Set} returns this
*/
proto.envoy.config.rbac.v3.Principal.Set.prototype.setIdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.config.rbac.v3.Principal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.rbac.v3.Principal}
 */
proto.envoy.config.rbac.v3.Principal.Set.prototype.addIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.config.rbac.v3.Principal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.rbac.v3.Principal.Set} returns this
 */
proto.envoy.config.rbac.v3.Principal.Set.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.rbac.v3.Principal.Authenticated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.rbac.v3.Principal.Authenticated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.toObject = function(includeInstance, msg) {
  var f, obj = {
    principalName: (f = msg.getPrincipalName()) && proto.envoy.type.matcher.v3.StringMatcher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.rbac.v3.Principal.Authenticated}
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.rbac.v3.Principal.Authenticated;
  return proto.envoy.config.rbac.v3.Principal.Authenticated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.rbac.v3.Principal.Authenticated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.rbac.v3.Principal.Authenticated}
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.envoy.type.matcher.v3.StringMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.StringMatcher.deserializeBinaryFromReader);
      msg.setPrincipalName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.rbac.v3.Principal.Authenticated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.rbac.v3.Principal.Authenticated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrincipalName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.type.matcher.v3.StringMatcher.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.type.matcher.v3.StringMatcher principal_name = 2;
 * @return {?proto.envoy.type.matcher.v3.StringMatcher}
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.prototype.getPrincipalName = function() {
  return /** @type{?proto.envoy.type.matcher.v3.StringMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.StringMatcher, 2));
};


/**
 * @param {?proto.envoy.type.matcher.v3.StringMatcher|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal.Authenticated} returns this
*/
proto.envoy.config.rbac.v3.Principal.Authenticated.prototype.setPrincipalName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal.Authenticated} returns this
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.prototype.clearPrincipalName = function() {
  return this.setPrincipalName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.Authenticated.prototype.hasPrincipalName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Set and_ids = 1;
 * @return {?proto.envoy.config.rbac.v3.Principal.Set}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getAndIds = function() {
  return /** @type{?proto.envoy.config.rbac.v3.Principal.Set} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.rbac.v3.Principal.Set, 1));
};


/**
 * @param {?proto.envoy.config.rbac.v3.Principal.Set|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setAndIds = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearAndIds = function() {
  return this.setAndIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasAndIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Set or_ids = 2;
 * @return {?proto.envoy.config.rbac.v3.Principal.Set}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getOrIds = function() {
  return /** @type{?proto.envoy.config.rbac.v3.Principal.Set} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.rbac.v3.Principal.Set, 2));
};


/**
 * @param {?proto.envoy.config.rbac.v3.Principal.Set|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setOrIds = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearOrIds = function() {
  return this.setOrIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasOrIds = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool any = 3;
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getAny = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.setAny = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearAny = function() {
  return jspb.Message.setOneofField(this, 3, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasAny = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Authenticated authenticated = 4;
 * @return {?proto.envoy.config.rbac.v3.Principal.Authenticated}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getAuthenticated = function() {
  return /** @type{?proto.envoy.config.rbac.v3.Principal.Authenticated} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.rbac.v3.Principal.Authenticated, 4));
};


/**
 * @param {?proto.envoy.config.rbac.v3.Principal.Authenticated|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setAuthenticated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearAuthenticated = function() {
  return this.setAuthenticated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasAuthenticated = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional envoy.config.core.v3.CidrRange source_ip = 5;
 * @return {?proto.envoy.config.core.v3.CidrRange}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getSourceIp = function() {
  return /** @type{?proto.envoy.config.core.v3.CidrRange} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.CidrRange, 5));
};


/**
 * @param {?proto.envoy.config.core.v3.CidrRange|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setSourceIp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearSourceIp = function() {
  return this.setSourceIp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasSourceIp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional envoy.config.core.v3.CidrRange direct_remote_ip = 10;
 * @return {?proto.envoy.config.core.v3.CidrRange}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getDirectRemoteIp = function() {
  return /** @type{?proto.envoy.config.core.v3.CidrRange} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.CidrRange, 10));
};


/**
 * @param {?proto.envoy.config.core.v3.CidrRange|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setDirectRemoteIp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearDirectRemoteIp = function() {
  return this.setDirectRemoteIp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasDirectRemoteIp = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional envoy.config.core.v3.CidrRange remote_ip = 11;
 * @return {?proto.envoy.config.core.v3.CidrRange}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getRemoteIp = function() {
  return /** @type{?proto.envoy.config.core.v3.CidrRange} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.CidrRange, 11));
};


/**
 * @param {?proto.envoy.config.core.v3.CidrRange|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setRemoteIp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearRemoteIp = function() {
  return this.setRemoteIp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasRemoteIp = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional envoy.config.route.v3.HeaderMatcher header = 6;
 * @return {?proto.envoy.config.route.v3.HeaderMatcher}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getHeader = function() {
  return /** @type{?proto.envoy.config.route.v3.HeaderMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.route.v3.HeaderMatcher, 6));
};


/**
 * @param {?proto.envoy.config.route.v3.HeaderMatcher|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setHeader = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional envoy.type.matcher.v3.PathMatcher url_path = 9;
 * @return {?proto.envoy.type.matcher.v3.PathMatcher}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getUrlPath = function() {
  return /** @type{?proto.envoy.type.matcher.v3.PathMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.PathMatcher, 9));
};


/**
 * @param {?proto.envoy.type.matcher.v3.PathMatcher|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setUrlPath = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearUrlPath = function() {
  return this.setUrlPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasUrlPath = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional envoy.type.matcher.v3.MetadataMatcher metadata = 7;
 * @return {?proto.envoy.type.matcher.v3.MetadataMatcher}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getMetadata = function() {
  return /** @type{?proto.envoy.type.matcher.v3.MetadataMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.MetadataMatcher, 7));
};


/**
 * @param {?proto.envoy.type.matcher.v3.MetadataMatcher|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional envoy.type.matcher.v3.FilterStateMatcher filter_state = 12;
 * @return {?proto.envoy.type.matcher.v3.FilterStateMatcher}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getFilterState = function() {
  return /** @type{?proto.envoy.type.matcher.v3.FilterStateMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3.FilterStateMatcher, 12));
};


/**
 * @param {?proto.envoy.type.matcher.v3.FilterStateMatcher|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setFilterState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearFilterState = function() {
  return this.setFilterState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasFilterState = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Principal not_id = 8;
 * @return {?proto.envoy.config.rbac.v3.Principal}
 */
proto.envoy.config.rbac.v3.Principal.prototype.getNotId = function() {
  return /** @type{?proto.envoy.config.rbac.v3.Principal} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.rbac.v3.Principal, 8));
};


/**
 * @param {?proto.envoy.config.rbac.v3.Principal|undefined} value
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
*/
proto.envoy.config.rbac.v3.Principal.prototype.setNotId = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.envoy.config.rbac.v3.Principal.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.rbac.v3.Principal} returns this
 */
proto.envoy.config.rbac.v3.Principal.prototype.clearNotId = function() {
  return this.setNotId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.rbac.v3.Principal.prototype.hasNotId = function() {
  return jspb.Message.getField(this, 8) != null;
};


