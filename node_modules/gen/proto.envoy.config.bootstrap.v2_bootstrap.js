// source: envoy/config/bootstrap/v2/bootstrap.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.bootstrap.v2.Bootstrap');
goog.provide('proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources');
goog.provide('proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.api.v2.Cluster');
goog.require('proto.envoy.api.v2.Listener');
goog.require('proto.envoy.api.v2.auth.Secret');
goog.require('proto.envoy.api.v2.core.ApiConfigSource');
goog.require('proto.envoy.api.v2.core.ConfigSource');
goog.require('proto.envoy.api.v2.core.Node');
goog.require('proto.envoy.config.bootstrap.v2.Admin');
goog.require('proto.envoy.config.bootstrap.v2.ClusterManager');
goog.require('proto.envoy.config.bootstrap.v2.LayeredRuntime');
goog.require('proto.envoy.config.bootstrap.v2.Runtime');
goog.require('proto.envoy.config.bootstrap.v2.Watchdog');
goog.require('proto.envoy.config.metrics.v2.StatsConfig');
goog.require('proto.envoy.config.metrics.v2.StatsSink');
goog.require('proto.envoy.config.overload.v2alpha.OverloadManager');
goog.require('proto.envoy.config.trace.v2.Tracing');
goog.require('proto.google.protobuf.Duration');
goog.require('proto.google.protobuf.UInt64Value');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v2.Bootstrap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.bootstrap.v2.Bootstrap.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.bootstrap.v2.Bootstrap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v2.Bootstrap.displayName = 'proto.envoy.config.bootstrap.v2.Bootstrap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.displayName = 'proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.displayName = 'proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.bootstrap.v2.Bootstrap.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v2.Bootstrap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.Bootstrap.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.envoy.api.v2.core.Node.toObject(includeInstance, f),
    staticResources: (f = msg.getStaticResources()) && proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.toObject(includeInstance, f),
    dynamicResources: (f = msg.getDynamicResources()) && proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.toObject(includeInstance, f),
    clusterManager: (f = msg.getClusterManager()) && proto.envoy.config.bootstrap.v2.ClusterManager.toObject(includeInstance, f),
    hdsConfig: (f = msg.getHdsConfig()) && proto.envoy.api.v2.core.ApiConfigSource.toObject(includeInstance, f),
    flagsPath: jspb.Message.getFieldWithDefault(msg, 5, ""),
    statsSinksList: jspb.Message.toObjectList(msg.getStatsSinksList(),
    proto.envoy.config.metrics.v2.StatsSink.toObject, includeInstance),
    statsConfig: (f = msg.getStatsConfig()) && proto.envoy.config.metrics.v2.StatsConfig.toObject(includeInstance, f),
    statsFlushInterval: (f = msg.getStatsFlushInterval()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    watchdog: (f = msg.getWatchdog()) && proto.envoy.config.bootstrap.v2.Watchdog.toObject(includeInstance, f),
    tracing: (f = msg.getTracing()) && proto.envoy.config.trace.v2.Tracing.toObject(includeInstance, f),
    runtime: (f = msg.getRuntime()) && proto.envoy.config.bootstrap.v2.Runtime.toObject(includeInstance, f),
    layeredRuntime: (f = msg.getLayeredRuntime()) && proto.envoy.config.bootstrap.v2.LayeredRuntime.toObject(includeInstance, f),
    admin: (f = msg.getAdmin()) && proto.envoy.config.bootstrap.v2.Admin.toObject(includeInstance, f),
    overloadManager: (f = msg.getOverloadManager()) && proto.envoy.config.overload.v2alpha.OverloadManager.toObject(includeInstance, f),
    enableDispatcherStats: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    headerPrefix: jspb.Message.getFieldWithDefault(msg, 18, ""),
    statsServerVersionOverride: (f = msg.getStatsServerVersionOverride()) && proto.google.protobuf.UInt64Value.toObject(includeInstance, f),
    useTcpForDnsLookups: jspb.Message.getBooleanFieldWithDefault(msg, 20, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v2.Bootstrap;
  return proto.envoy.config.bootstrap.v2.Bootstrap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.api.v2.core.Node;
      reader.readMessage(value,proto.envoy.api.v2.core.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = new proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.deserializeBinaryFromReader);
      msg.setStaticResources(value);
      break;
    case 3:
      var value = new proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.deserializeBinaryFromReader);
      msg.setDynamicResources(value);
      break;
    case 4:
      var value = new proto.envoy.config.bootstrap.v2.ClusterManager;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.ClusterManager.deserializeBinaryFromReader);
      msg.setClusterManager(value);
      break;
    case 14:
      var value = new proto.envoy.api.v2.core.ApiConfigSource;
      reader.readMessage(value,proto.envoy.api.v2.core.ApiConfigSource.deserializeBinaryFromReader);
      msg.setHdsConfig(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlagsPath(value);
      break;
    case 6:
      var value = new proto.envoy.config.metrics.v2.StatsSink;
      reader.readMessage(value,proto.envoy.config.metrics.v2.StatsSink.deserializeBinaryFromReader);
      msg.addStatsSinks(value);
      break;
    case 13:
      var value = new proto.envoy.config.metrics.v2.StatsConfig;
      reader.readMessage(value,proto.envoy.config.metrics.v2.StatsConfig.deserializeBinaryFromReader);
      msg.setStatsConfig(value);
      break;
    case 7:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setStatsFlushInterval(value);
      break;
    case 8:
      var value = new proto.envoy.config.bootstrap.v2.Watchdog;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.Watchdog.deserializeBinaryFromReader);
      msg.setWatchdog(value);
      break;
    case 9:
      var value = new proto.envoy.config.trace.v2.Tracing;
      reader.readMessage(value,proto.envoy.config.trace.v2.Tracing.deserializeBinaryFromReader);
      msg.setTracing(value);
      break;
    case 11:
      var value = new proto.envoy.config.bootstrap.v2.Runtime;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.Runtime.deserializeBinaryFromReader);
      msg.setRuntime(value);
      break;
    case 17:
      var value = new proto.envoy.config.bootstrap.v2.LayeredRuntime;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.LayeredRuntime.deserializeBinaryFromReader);
      msg.setLayeredRuntime(value);
      break;
    case 12:
      var value = new proto.envoy.config.bootstrap.v2.Admin;
      reader.readMessage(value,proto.envoy.config.bootstrap.v2.Admin.deserializeBinaryFromReader);
      msg.setAdmin(value);
      break;
    case 15:
      var value = new proto.envoy.config.overload.v2alpha.OverloadManager;
      reader.readMessage(value,proto.envoy.config.overload.v2alpha.OverloadManager.deserializeBinaryFromReader);
      msg.setOverloadManager(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableDispatcherStats(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeaderPrefix(value);
      break;
    case 19:
      var value = new proto.google.protobuf.UInt64Value;
      reader.readMessage(value,proto.google.protobuf.UInt64Value.deserializeBinaryFromReader);
      msg.setStatsServerVersionOverride(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseTcpForDnsLookups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v2.Bootstrap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.Bootstrap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.api.v2.core.Node.serializeBinaryToWriter
    );
  }
  f = message.getStaticResources();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.serializeBinaryToWriter
    );
  }
  f = message.getDynamicResources();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.serializeBinaryToWriter
    );
  }
  f = message.getClusterManager();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.config.bootstrap.v2.ClusterManager.serializeBinaryToWriter
    );
  }
  f = message.getHdsConfig();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.envoy.api.v2.core.ApiConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getFlagsPath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatsSinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.envoy.config.metrics.v2.StatsSink.serializeBinaryToWriter
    );
  }
  f = message.getStatsConfig();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.envoy.config.metrics.v2.StatsConfig.serializeBinaryToWriter
    );
  }
  f = message.getStatsFlushInterval();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getWatchdog();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envoy.config.bootstrap.v2.Watchdog.serializeBinaryToWriter
    );
  }
  f = message.getTracing();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.config.trace.v2.Tracing.serializeBinaryToWriter
    );
  }
  f = message.getRuntime();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.envoy.config.bootstrap.v2.Runtime.serializeBinaryToWriter
    );
  }
  f = message.getLayeredRuntime();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.envoy.config.bootstrap.v2.LayeredRuntime.serializeBinaryToWriter
    );
  }
  f = message.getAdmin();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.envoy.config.bootstrap.v2.Admin.serializeBinaryToWriter
    );
  }
  f = message.getOverloadManager();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.envoy.config.overload.v2alpha.OverloadManager.serializeBinaryToWriter
    );
  }
  f = message.getEnableDispatcherStats();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getHeaderPrefix();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getStatsServerVersionOverride();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.google.protobuf.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getUseTcpForDnsLookups();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.toObject = function(includeInstance, msg) {
  var f, obj = {
    listenersList: jspb.Message.toObjectList(msg.getListenersList(),
    proto.envoy.api.v2.Listener.toObject, includeInstance),
    clustersList: jspb.Message.toObjectList(msg.getClustersList(),
    proto.envoy.api.v2.Cluster.toObject, includeInstance),
    secretsList: jspb.Message.toObjectList(msg.getSecretsList(),
    proto.envoy.api.v2.auth.Secret.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources;
  return proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.api.v2.Listener;
      reader.readMessage(value,proto.envoy.api.v2.Listener.deserializeBinaryFromReader);
      msg.addListeners(value);
      break;
    case 2:
      var value = new proto.envoy.api.v2.Cluster;
      reader.readMessage(value,proto.envoy.api.v2.Cluster.deserializeBinaryFromReader);
      msg.addClusters(value);
      break;
    case 3:
      var value = new proto.envoy.api.v2.auth.Secret;
      reader.readMessage(value,proto.envoy.api.v2.auth.Secret.deserializeBinaryFromReader);
      msg.addSecrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListenersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.api.v2.Listener.serializeBinaryToWriter
    );
  }
  f = message.getClustersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.envoy.api.v2.Cluster.serializeBinaryToWriter
    );
  }
  f = message.getSecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.envoy.api.v2.auth.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * repeated envoy.api.v2.Listener listeners = 1;
 * @return {!Array<!proto.envoy.api.v2.Listener>}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.getListenersList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.Listener>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.api.v2.Listener, 1));
};


/**
 * @param {!Array<!proto.envoy.api.v2.Listener>} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.setListenersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.api.v2.Listener=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.Listener}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.addListeners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.api.v2.Listener, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.clearListenersList = function() {
  return this.setListenersList([]);
};


/**
 * repeated envoy.api.v2.Cluster clusters = 2;
 * @return {!Array<!proto.envoy.api.v2.Cluster>}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.getClustersList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.Cluster>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.api.v2.Cluster, 2));
};


/**
 * @param {!Array<!proto.envoy.api.v2.Cluster>} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.setClustersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.api.v2.Cluster=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.Cluster}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.addClusters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.api.v2.Cluster, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.clearClustersList = function() {
  return this.setClustersList([]);
};


/**
 * repeated envoy.api.v2.auth.Secret secrets = 3;
 * @return {!Array<!proto.envoy.api.v2.auth.Secret>}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.getSecretsList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.auth.Secret>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.api.v2.auth.Secret, 3));
};


/**
 * @param {!Array<!proto.envoy.api.v2.auth.Secret>} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.setSecretsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.envoy.api.v2.auth.Secret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.Secret}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.addSecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.envoy.api.v2.auth.Secret, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources.prototype.clearSecretsList = function() {
  return this.setSecretsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.toObject = function(includeInstance, msg) {
  var f, obj = {
    ldsConfig: (f = msg.getLdsConfig()) && proto.envoy.api.v2.core.ConfigSource.toObject(includeInstance, f),
    cdsConfig: (f = msg.getCdsConfig()) && proto.envoy.api.v2.core.ConfigSource.toObject(includeInstance, f),
    adsConfig: (f = msg.getAdsConfig()) && proto.envoy.api.v2.core.ApiConfigSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources;
  return proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.api.v2.core.ConfigSource;
      reader.readMessage(value,proto.envoy.api.v2.core.ConfigSource.deserializeBinaryFromReader);
      msg.setLdsConfig(value);
      break;
    case 2:
      var value = new proto.envoy.api.v2.core.ConfigSource;
      reader.readMessage(value,proto.envoy.api.v2.core.ConfigSource.deserializeBinaryFromReader);
      msg.setCdsConfig(value);
      break;
    case 3:
      var value = new proto.envoy.api.v2.core.ApiConfigSource;
      reader.readMessage(value,proto.envoy.api.v2.core.ApiConfigSource.deserializeBinaryFromReader);
      msg.setAdsConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLdsConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.api.v2.core.ConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getCdsConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.api.v2.core.ConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getAdsConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.api.v2.core.ApiConfigSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.api.v2.core.ConfigSource lds_config = 1;
 * @return {?proto.envoy.api.v2.core.ConfigSource}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.getLdsConfig = function() {
  return /** @type{?proto.envoy.api.v2.core.ConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.ConfigSource, 1));
};


/**
 * @param {?proto.envoy.api.v2.core.ConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.setLdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.clearLdsConfig = function() {
  return this.setLdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.hasLdsConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.api.v2.core.ConfigSource cds_config = 2;
 * @return {?proto.envoy.api.v2.core.ConfigSource}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.getCdsConfig = function() {
  return /** @type{?proto.envoy.api.v2.core.ConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.ConfigSource, 2));
};


/**
 * @param {?proto.envoy.api.v2.core.ConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.setCdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.clearCdsConfig = function() {
  return this.setCdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.hasCdsConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional envoy.api.v2.core.ApiConfigSource ads_config = 3;
 * @return {?proto.envoy.api.v2.core.ApiConfigSource}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.getAdsConfig = function() {
  return /** @type{?proto.envoy.api.v2.core.ApiConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.ApiConfigSource, 3));
};


/**
 * @param {?proto.envoy.api.v2.core.ApiConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.setAdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.clearAdsConfig = function() {
  return this.setAdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources.prototype.hasAdsConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.api.v2.core.Node node = 1;
 * @return {?proto.envoy.api.v2.core.Node}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getNode = function() {
  return /** @type{?proto.envoy.api.v2.core.Node} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.Node, 1));
};


/**
 * @param {?proto.envoy.api.v2.core.Node|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StaticResources static_resources = 2;
 * @return {?proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getStaticResources = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources, 2));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.Bootstrap.StaticResources|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setStaticResources = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearStaticResources = function() {
  return this.setStaticResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasStaticResources = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DynamicResources dynamic_resources = 3;
 * @return {?proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getDynamicResources = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources, 3));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.Bootstrap.DynamicResources|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setDynamicResources = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearDynamicResources = function() {
  return this.setDynamicResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasDynamicResources = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ClusterManager cluster_manager = 4;
 * @return {?proto.envoy.config.bootstrap.v2.ClusterManager}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getClusterManager = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.ClusterManager} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.ClusterManager, 4));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.ClusterManager|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setClusterManager = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearClusterManager = function() {
  return this.setClusterManager(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasClusterManager = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional envoy.api.v2.core.ApiConfigSource hds_config = 14;
 * @return {?proto.envoy.api.v2.core.ApiConfigSource}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getHdsConfig = function() {
  return /** @type{?proto.envoy.api.v2.core.ApiConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.ApiConfigSource, 14));
};


/**
 * @param {?proto.envoy.api.v2.core.ApiConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setHdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearHdsConfig = function() {
  return this.setHdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasHdsConfig = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string flags_path = 5;
 * @return {string}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getFlagsPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setFlagsPath = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated envoy.config.metrics.v2.StatsSink stats_sinks = 6;
 * @return {!Array<!proto.envoy.config.metrics.v2.StatsSink>}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getStatsSinksList = function() {
  return /** @type{!Array<!proto.envoy.config.metrics.v2.StatsSink>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.metrics.v2.StatsSink, 6));
};


/**
 * @param {!Array<!proto.envoy.config.metrics.v2.StatsSink>} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setStatsSinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.envoy.config.metrics.v2.StatsSink=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.metrics.v2.StatsSink}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.addStatsSinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.envoy.config.metrics.v2.StatsSink, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearStatsSinksList = function() {
  return this.setStatsSinksList([]);
};


/**
 * optional envoy.config.metrics.v2.StatsConfig stats_config = 13;
 * @return {?proto.envoy.config.metrics.v2.StatsConfig}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getStatsConfig = function() {
  return /** @type{?proto.envoy.config.metrics.v2.StatsConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.metrics.v2.StatsConfig, 13));
};


/**
 * @param {?proto.envoy.config.metrics.v2.StatsConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setStatsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearStatsConfig = function() {
  return this.setStatsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasStatsConfig = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Duration stats_flush_interval = 7;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getStatsFlushInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 7));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setStatsFlushInterval = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearStatsFlushInterval = function() {
  return this.setStatsFlushInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasStatsFlushInterval = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Watchdog watchdog = 8;
 * @return {?proto.envoy.config.bootstrap.v2.Watchdog}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getWatchdog = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.Watchdog} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.Watchdog, 8));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.Watchdog|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setWatchdog = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearWatchdog = function() {
  return this.setWatchdog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasWatchdog = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional envoy.config.trace.v2.Tracing tracing = 9;
 * @return {?proto.envoy.config.trace.v2.Tracing}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getTracing = function() {
  return /** @type{?proto.envoy.config.trace.v2.Tracing} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.trace.v2.Tracing, 9));
};


/**
 * @param {?proto.envoy.config.trace.v2.Tracing|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setTracing = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearTracing = function() {
  return this.setTracing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasTracing = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Runtime runtime = 11;
 * @return {?proto.envoy.config.bootstrap.v2.Runtime}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getRuntime = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.Runtime} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.Runtime, 11));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.Runtime|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setRuntime = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearRuntime = function() {
  return this.setRuntime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasRuntime = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional LayeredRuntime layered_runtime = 17;
 * @return {?proto.envoy.config.bootstrap.v2.LayeredRuntime}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getLayeredRuntime = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.LayeredRuntime} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.LayeredRuntime, 17));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.LayeredRuntime|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setLayeredRuntime = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearLayeredRuntime = function() {
  return this.setLayeredRuntime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasLayeredRuntime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Admin admin = 12;
 * @return {?proto.envoy.config.bootstrap.v2.Admin}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getAdmin = function() {
  return /** @type{?proto.envoy.config.bootstrap.v2.Admin} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v2.Admin, 12));
};


/**
 * @param {?proto.envoy.config.bootstrap.v2.Admin|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setAdmin = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearAdmin = function() {
  return this.setAdmin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasAdmin = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional envoy.config.overload.v2alpha.OverloadManager overload_manager = 15;
 * @return {?proto.envoy.config.overload.v2alpha.OverloadManager}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getOverloadManager = function() {
  return /** @type{?proto.envoy.config.overload.v2alpha.OverloadManager} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.overload.v2alpha.OverloadManager, 15));
};


/**
 * @param {?proto.envoy.config.overload.v2alpha.OverloadManager|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setOverloadManager = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearOverloadManager = function() {
  return this.setOverloadManager(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasOverloadManager = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool enable_dispatcher_stats = 16;
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getEnableDispatcherStats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setEnableDispatcherStats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional string header_prefix = 18;
 * @return {string}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getHeaderPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setHeaderPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional google.protobuf.UInt64Value stats_server_version_override = 19;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getStatsServerVersionOverride = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt64Value, 19));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setStatsServerVersionOverride = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.clearStatsServerVersionOverride = function() {
  return this.setStatsServerVersionOverride(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.hasStatsServerVersionOverride = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool use_tcp_for_dns_lookups = 20;
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.getUseTcpForDnsLookups = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.bootstrap.v2.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v2.Bootstrap.prototype.setUseTcpForDnsLookups = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


