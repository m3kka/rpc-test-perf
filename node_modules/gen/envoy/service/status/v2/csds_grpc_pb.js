// GENERATED CODE -- DO NOT EDIT!

'use strict';
var grpc = require('grpc');
var envoy_service_status_v2_csds_pb = require('../../../../envoy/service/status/v2/csds_pb.js');
var envoy_admin_v2alpha_config_dump_pb = require('../../../../envoy/admin/v2alpha/config_dump_pb.js');
var envoy_api_v2_core_base_pb = require('../../../../envoy/api/v2/core/base_pb.js');
var envoy_type_matcher_node_pb = require('../../../../envoy/type/matcher/node_pb.js');
var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
var udpa_annotations_status_pb = require('../../../../udpa/annotations/status_pb.js');

function serialize_envoy_service_status_v2_ClientStatusRequest(arg) {
  if (!(arg instanceof envoy_service_status_v2_csds_pb.ClientStatusRequest)) {
    throw new Error('Expected argument of type envoy.service.status.v2.ClientStatusRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_envoy_service_status_v2_ClientStatusRequest(buffer_arg) {
  return envoy_service_status_v2_csds_pb.ClientStatusRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_envoy_service_status_v2_ClientStatusResponse(arg) {
  if (!(arg instanceof envoy_service_status_v2_csds_pb.ClientStatusResponse)) {
    throw new Error('Expected argument of type envoy.service.status.v2.ClientStatusResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_envoy_service_status_v2_ClientStatusResponse(buffer_arg) {
  return envoy_service_status_v2_csds_pb.ClientStatusResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


// [#protodoc-title: Client Status Discovery Service (CSDS)]
//
// CSDS is Client Status Discovery Service. It can be used to get the status of
// an xDS-compliant client from the management server's point of view. In the
// future, it can potentially be used as an interface to get the current
// state directly from the client.
var ClientStatusDiscoveryServiceService = exports.ClientStatusDiscoveryServiceService = {
  streamClientStatus: {
    path: '/envoy.service.status.v2.ClientStatusDiscoveryService/StreamClientStatus',
    requestStream: true,
    responseStream: true,
    requestType: envoy_service_status_v2_csds_pb.ClientStatusRequest,
    responseType: envoy_service_status_v2_csds_pb.ClientStatusResponse,
    requestSerialize: serialize_envoy_service_status_v2_ClientStatusRequest,
    requestDeserialize: deserialize_envoy_service_status_v2_ClientStatusRequest,
    responseSerialize: serialize_envoy_service_status_v2_ClientStatusResponse,
    responseDeserialize: deserialize_envoy_service_status_v2_ClientStatusResponse,
  },
  fetchClientStatus: {
    path: '/envoy.service.status.v2.ClientStatusDiscoveryService/FetchClientStatus',
    requestStream: false,
    responseStream: false,
    requestType: envoy_service_status_v2_csds_pb.ClientStatusRequest,
    responseType: envoy_service_status_v2_csds_pb.ClientStatusResponse,
    requestSerialize: serialize_envoy_service_status_v2_ClientStatusRequest,
    requestDeserialize: deserialize_envoy_service_status_v2_ClientStatusRequest,
    responseSerialize: serialize_envoy_service_status_v2_ClientStatusResponse,
    responseDeserialize: deserialize_envoy_service_status_v2_ClientStatusResponse,
  },
};

exports.ClientStatusDiscoveryServiceClient = grpc.makeGenericClientConstructor(ClientStatusDiscoveryServiceService);
