// source: envoy/extensions/filters/network/dubbo_proxy/v3/dubbo_proxy.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy');
goog.provide('proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.RouteSpecifierCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds');
goog.require('proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter');
goog.require('proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration');
goog.require('proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration');

goog.forwardDeclare('proto.envoy.extensions.filters.network.dubbo_proxy.v3.ProtocolType');
goog.forwardDeclare('proto.envoy.extensions.filters.network.dubbo_proxy.v3.SerializationType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.repeatedFields_, proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.displayName = 'proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.repeatedFields_ = [4,5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.oneofGroups_ = [[6,7]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.RouteSpecifierCase = {
  ROUTE_SPECIFIER_NOT_SET: 0,
  DRDS: 6,
  MULTIPLE_ROUTE_CONFIG: 7
};

/**
 * @return {proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.RouteSpecifierCase}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.getRouteSpecifierCase = function() {
  return /** @type {proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.RouteSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    statPrefix: jspb.Message.getFieldWithDefault(msg, 1, ""),
    protocolType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    serializationType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    routeConfigList: jspb.Message.toObjectList(msg.getRouteConfigList(),
    proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration.toObject, includeInstance),
    drds: (f = msg.getDrds()) && proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds.toObject(includeInstance, f),
    multipleRouteConfig: (f = msg.getMultipleRouteConfig()) && proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration.toObject(includeInstance, f),
    dubboFiltersList: jspb.Message.toObjectList(msg.getDubboFiltersList(),
    proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy;
  return proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    case 2:
      var value = /** @type {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.ProtocolType} */ (reader.readEnum());
      msg.setProtocolType(value);
      break;
    case 3:
      var value = /** @type {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.SerializationType} */ (reader.readEnum());
      msg.setSerializationType(value);
      break;
    case 4:
      var value = new proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration;
      reader.readMessage(value,proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration.deserializeBinaryFromReader);
      msg.addRouteConfig(value);
      break;
    case 6:
      var value = new proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds;
      reader.readMessage(value,proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds.deserializeBinaryFromReader);
      msg.setDrds(value);
      break;
    case 7:
      var value = new proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration;
      reader.readMessage(value,proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration.deserializeBinaryFromReader);
      msg.setMultipleRouteConfig(value);
      break;
    case 5:
      var value = new proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter;
      reader.readMessage(value,proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter.deserializeBinaryFromReader);
      msg.addDubboFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProtocolType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSerializationType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRouteConfigList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getDrds();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds.serializeBinaryToWriter
    );
  }
  f = message.getMultipleRouteConfig();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getDubboFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stat_prefix = 1;
 * @return {string}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.setStatPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ProtocolType protocol_type = 2;
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.ProtocolType}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.getProtocolType = function() {
  return /** @type {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.ProtocolType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.ProtocolType} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.setProtocolType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SerializationType serialization_type = 3;
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.SerializationType}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.getSerializationType = function() {
  return /** @type {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.SerializationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.SerializationType} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.setSerializationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated RouteConfiguration route_config = 4;
 * @return {!Array<!proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration>}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.getRouteConfigList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration, 4));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration>} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
*/
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.setRouteConfigList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.addRouteConfig = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.clearRouteConfigList = function() {
  return this.setRouteConfigList([]);
};


/**
 * optional Drds drds = 6;
 * @return {?proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.getDrds = function() {
  return /** @type{?proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds, 6));
};


/**
 * @param {?proto.envoy.extensions.filters.network.dubbo_proxy.v3.Drds|undefined} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
*/
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.setDrds = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.clearDrds = function() {
  return this.setDrds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.hasDrds = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MultipleRouteConfiguration multiple_route_config = 7;
 * @return {?proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.getMultipleRouteConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration, 7));
};


/**
 * @param {?proto.envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
*/
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.setMultipleRouteConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.clearMultipleRouteConfig = function() {
  return this.setMultipleRouteConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.hasMultipleRouteConfig = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated DubboFilter dubbo_filters = 5;
 * @return {!Array<!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter>}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.getDubboFiltersList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter, 5));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter>} value
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
*/
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.setDubboFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter}
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.addDubboFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy} returns this
 */
proto.envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy.prototype.clearDubboFiltersList = function() {
  return this.setDubboFiltersList([]);
};


