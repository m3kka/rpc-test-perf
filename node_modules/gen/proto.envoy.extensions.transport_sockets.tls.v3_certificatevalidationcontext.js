// source: envoy/extensions/transport_sockets/tls/v3/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext');
goog.provide('proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.TrustChainVerification');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.core.v3.DataSource');
goog.require('proto.envoy.config.core.v3.TypedExtensionConfig');
goog.require('proto.envoy.config.core.v3.WatchedDirectory');
goog.require('proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance');
goog.require('proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher');
goog.require('proto.envoy.type.matcher.v3.StringMatcher');
goog.require('proto.google.protobuf.BoolValue');
goog.require('proto.google.protobuf.UInt32Value');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.displayName = 'proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.repeatedFields_ = [3,2,15,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    trustedCa: (f = msg.getTrustedCa()) && proto.envoy.config.core.v3.DataSource.toObject(includeInstance, f),
    caCertificateProviderInstance: (f = msg.getCaCertificateProviderInstance()) && proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance.toObject(includeInstance, f),
    watchedDirectory: (f = msg.getWatchedDirectory()) && proto.envoy.config.core.v3.WatchedDirectory.toObject(includeInstance, f),
    verifyCertificateSpkiList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    verifyCertificateHashList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    matchTypedSubjectAltNamesList: jspb.Message.toObjectList(msg.getMatchTypedSubjectAltNamesList(),
    proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher.toObject, includeInstance),
    matchSubjectAltNamesList: jspb.Message.toObjectList(msg.getMatchSubjectAltNamesList(),
    proto.envoy.type.matcher.v3.StringMatcher.toObject, includeInstance),
    requireSignedCertificateTimestamp: (f = msg.getRequireSignedCertificateTimestamp()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    crl: (f = msg.getCrl()) && proto.envoy.config.core.v3.DataSource.toObject(includeInstance, f),
    allowExpiredCertificate: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    trustChainVerification: jspb.Message.getFieldWithDefault(msg, 10, 0),
    customValidatorConfig: (f = msg.getCustomValidatorConfig()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    onlyVerifyLeafCertCrl: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    maxVerifyDepth: (f = msg.getMaxVerifyDepth()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext;
  return proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.core.v3.DataSource;
      reader.readMessage(value,proto.envoy.config.core.v3.DataSource.deserializeBinaryFromReader);
      msg.setTrustedCa(value);
      break;
    case 13:
      var value = new proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance;
      reader.readMessage(value,proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance.deserializeBinaryFromReader);
      msg.setCaCertificateProviderInstance(value);
      break;
    case 11:
      var value = new proto.envoy.config.core.v3.WatchedDirectory;
      reader.readMessage(value,proto.envoy.config.core.v3.WatchedDirectory.deserializeBinaryFromReader);
      msg.setWatchedDirectory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerifyCertificateSpki(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerifyCertificateHash(value);
      break;
    case 15:
      var value = new proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher;
      reader.readMessage(value,proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher.deserializeBinaryFromReader);
      msg.addMatchTypedSubjectAltNames(value);
      break;
    case 9:
      var value = new proto.envoy.type.matcher.v3.StringMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3.StringMatcher.deserializeBinaryFromReader);
      msg.addMatchSubjectAltNames(value);
      break;
    case 6:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setRequireSignedCertificateTimestamp(value);
      break;
    case 7:
      var value = new proto.envoy.config.core.v3.DataSource;
      reader.readMessage(value,proto.envoy.config.core.v3.DataSource.deserializeBinaryFromReader);
      msg.setCrl(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowExpiredCertificate(value);
      break;
    case 10:
      var value = /** @type {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.TrustChainVerification} */ (reader.readEnum());
      msg.setTrustChainVerification(value);
      break;
    case 12:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setCustomValidatorConfig(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyVerifyLeafCertCrl(value);
      break;
    case 16:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxVerifyDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrustedCa();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.core.v3.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getCaCertificateProviderInstance();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance.serializeBinaryToWriter
    );
  }
  f = message.getWatchedDirectory();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.envoy.config.core.v3.WatchedDirectory.serializeBinaryToWriter
    );
  }
  f = message.getVerifyCertificateSpkiList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getVerifyCertificateHashList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getMatchTypedSubjectAltNamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher.serializeBinaryToWriter
    );
  }
  f = message.getMatchSubjectAltNamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.envoy.type.matcher.v3.StringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getRequireSignedCertificateTimestamp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getCrl();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.config.core.v3.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getAllowExpiredCertificate();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getTrustChainVerification();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getCustomValidatorConfig();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getOnlyVerifyLeafCertCrl();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getMaxVerifyDepth();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.TrustChainVerification = {
  VERIFY_TRUST_CHAIN: 0,
  ACCEPT_UNTRUSTED: 1
};

/**
 * optional envoy.config.core.v3.DataSource trusted_ca = 1;
 * @return {?proto.envoy.config.core.v3.DataSource}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getTrustedCa = function() {
  return /** @type{?proto.envoy.config.core.v3.DataSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.DataSource, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.DataSource|undefined} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setTrustedCa = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearTrustedCa = function() {
  return this.setTrustedCa(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.hasTrustedCa = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CertificateProviderPluginInstance ca_certificate_provider_instance = 13;
 * @return {?proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getCaCertificateProviderInstance = function() {
  return /** @type{?proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance, 13));
};


/**
 * @param {?proto.envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance|undefined} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setCaCertificateProviderInstance = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearCaCertificateProviderInstance = function() {
  return this.setCaCertificateProviderInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.hasCaCertificateProviderInstance = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional envoy.config.core.v3.WatchedDirectory watched_directory = 11;
 * @return {?proto.envoy.config.core.v3.WatchedDirectory}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getWatchedDirectory = function() {
  return /** @type{?proto.envoy.config.core.v3.WatchedDirectory} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.WatchedDirectory, 11));
};


/**
 * @param {?proto.envoy.config.core.v3.WatchedDirectory|undefined} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setWatchedDirectory = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearWatchedDirectory = function() {
  return this.setWatchedDirectory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.hasWatchedDirectory = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated string verify_certificate_spki = 3;
 * @return {!Array<string>}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getVerifyCertificateSpkiList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setVerifyCertificateSpkiList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.addVerifyCertificateSpki = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearVerifyCertificateSpkiList = function() {
  return this.setVerifyCertificateSpkiList([]);
};


/**
 * repeated string verify_certificate_hash = 2;
 * @return {!Array<string>}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getVerifyCertificateHashList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setVerifyCertificateHashList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.addVerifyCertificateHash = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearVerifyCertificateHashList = function() {
  return this.setVerifyCertificateHashList([]);
};


/**
 * repeated SubjectAltNameMatcher match_typed_subject_alt_names = 15;
 * @return {!Array<!proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher>}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getMatchTypedSubjectAltNamesList = function() {
  return /** @type{!Array<!proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher, 15));
};


/**
 * @param {!Array<!proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher>} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setMatchTypedSubjectAltNamesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.addMatchTypedSubjectAltNames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearMatchTypedSubjectAltNamesList = function() {
  return this.setMatchTypedSubjectAltNamesList([]);
};


/**
 * repeated envoy.type.matcher.v3.StringMatcher match_subject_alt_names = 9;
 * @return {!Array<!proto.envoy.type.matcher.v3.StringMatcher>}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getMatchSubjectAltNamesList = function() {
  return /** @type{!Array<!proto.envoy.type.matcher.v3.StringMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.type.matcher.v3.StringMatcher, 9));
};


/**
 * @param {!Array<!proto.envoy.type.matcher.v3.StringMatcher>} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setMatchSubjectAltNamesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.envoy.type.matcher.v3.StringMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.type.matcher.v3.StringMatcher}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.addMatchSubjectAltNames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.envoy.type.matcher.v3.StringMatcher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearMatchSubjectAltNamesList = function() {
  return this.setMatchSubjectAltNamesList([]);
};


/**
 * optional google.protobuf.BoolValue require_signed_certificate_timestamp = 6;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getRequireSignedCertificateTimestamp = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 6));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setRequireSignedCertificateTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearRequireSignedCertificateTimestamp = function() {
  return this.setRequireSignedCertificateTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.hasRequireSignedCertificateTimestamp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional envoy.config.core.v3.DataSource crl = 7;
 * @return {?proto.envoy.config.core.v3.DataSource}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getCrl = function() {
  return /** @type{?proto.envoy.config.core.v3.DataSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.DataSource, 7));
};


/**
 * @param {?proto.envoy.config.core.v3.DataSource|undefined} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setCrl = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearCrl = function() {
  return this.setCrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.hasCrl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool allow_expired_certificate = 8;
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getAllowExpiredCertificate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setAllowExpiredCertificate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional TrustChainVerification trust_chain_verification = 10;
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.TrustChainVerification}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getTrustChainVerification = function() {
  return /** @type {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.TrustChainVerification} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.TrustChainVerification} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setTrustChainVerification = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig custom_validator_config = 12;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getCustomValidatorConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 12));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setCustomValidatorConfig = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearCustomValidatorConfig = function() {
  return this.setCustomValidatorConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.hasCustomValidatorConfig = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool only_verify_leaf_cert_crl = 14;
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getOnlyVerifyLeafCertCrl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setOnlyVerifyLeafCertCrl = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional google.protobuf.UInt32Value max_verify_depth = 16;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.getMaxVerifyDepth = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 16));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
*/
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.setMaxVerifyDepth = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext} returns this
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.clearMaxVerifyDepth = function() {
  return this.setMaxVerifyDepth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.prototype.hasMaxVerifyDepth = function() {
  return jspb.Message.getField(this, 16) != null;
};


