// source: envoy/config/bootstrap/v3/bootstrap.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.config.bootstrap.v3.Bootstrap');
goog.provide('proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig');
goog.provide('proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat');
goog.provide('proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.LogFormatCase');
goog.provide('proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions');
goog.provide('proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources');
goog.provide('proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources');
goog.provide('proto.envoy.config.bootstrap.v3.Bootstrap.StatsFlushCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.envoy.config.bootstrap.v3.Admin');
goog.require('proto.envoy.config.bootstrap.v3.ClusterManager');
goog.require('proto.envoy.config.bootstrap.v3.CustomInlineHeader');
goog.require('proto.envoy.config.bootstrap.v3.FatalAction');
goog.require('proto.envoy.config.bootstrap.v3.LayeredRuntime');
goog.require('proto.envoy.config.bootstrap.v3.Watchdog');
goog.require('proto.envoy.config.bootstrap.v3.Watchdogs');
goog.require('proto.envoy.config.cluster.v3.Cluster');
goog.require('proto.envoy.config.core.v3.ApiConfigSource');
goog.require('proto.envoy.config.core.v3.ConfigSource');
goog.require('proto.envoy.config.core.v3.DnsResolutionConfig');
goog.require('proto.envoy.config.core.v3.Node');
goog.require('proto.envoy.config.core.v3.TypedExtensionConfig');
goog.require('proto.envoy.config.listener.v3.Listener');
goog.require('proto.envoy.config.metrics.v3.StatsConfig');
goog.require('proto.envoy.config.metrics.v3.StatsSink');
goog.require('proto.envoy.config.overload.v3.OverloadManager');
goog.require('proto.envoy.config.trace.v3.Tracing');
goog.require('proto.envoy.extensions.transport_sockets.tls.v3.Secret');
goog.require('proto.google.protobuf.Duration');
goog.require('proto.google.protobuf.Struct');
goog.require('proto.google.protobuf.UInt64Value');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v3.Bootstrap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.bootstrap.v3.Bootstrap.repeatedFields_, proto.envoy.config.bootstrap.v3.Bootstrap.oneofGroups_);
};
goog.inherits(proto.envoy.config.bootstrap.v3.Bootstrap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v3.Bootstrap.displayName = 'proto.envoy.config.bootstrap.v3.Bootstrap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.displayName = 'proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.displayName = 'proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.displayName = 'proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.oneofGroups_);
};
goog.inherits(proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.displayName = 'proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.displayName = 'proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.bootstrap.v3.Bootstrap.repeatedFields_ = [26,6,21,28,22,32];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.bootstrap.v3.Bootstrap.oneofGroups_ = [[29]];

/**
 * @enum {number}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StatsFlushCase = {
  STATS_FLUSH_NOT_SET: 0,
  STATS_FLUSH_ON_ADMIN: 29
};

/**
 * @return {proto.envoy.config.bootstrap.v3.Bootstrap.StatsFlushCase}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getStatsFlushCase = function() {
  return /** @type {proto.envoy.config.bootstrap.v3.Bootstrap.StatsFlushCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.bootstrap.v3.Bootstrap.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v3.Bootstrap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.envoy.config.core.v3.Node.toObject(includeInstance, f),
    nodeContextParamsList: (f = jspb.Message.getRepeatedField(msg, 26)) == null ? undefined : f,
    staticResources: (f = msg.getStaticResources()) && proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.toObject(includeInstance, f),
    dynamicResources: (f = msg.getDynamicResources()) && proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.toObject(includeInstance, f),
    clusterManager: (f = msg.getClusterManager()) && proto.envoy.config.bootstrap.v3.ClusterManager.toObject(includeInstance, f),
    hdsConfig: (f = msg.getHdsConfig()) && proto.envoy.config.core.v3.ApiConfigSource.toObject(includeInstance, f),
    flagsPath: jspb.Message.getFieldWithDefault(msg, 5, ""),
    statsSinksList: jspb.Message.toObjectList(msg.getStatsSinksList(),
    proto.envoy.config.metrics.v3.StatsSink.toObject, includeInstance),
    deferredStatOptions: (f = msg.getDeferredStatOptions()) && proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.toObject(includeInstance, f),
    statsConfig: (f = msg.getStatsConfig()) && proto.envoy.config.metrics.v3.StatsConfig.toObject(includeInstance, f),
    statsFlushInterval: (f = msg.getStatsFlushInterval()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    statsFlushOnAdmin: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    watchdog: (f = msg.getWatchdog()) && proto.envoy.config.bootstrap.v3.Watchdog.toObject(includeInstance, f),
    watchdogs: (f = msg.getWatchdogs()) && proto.envoy.config.bootstrap.v3.Watchdogs.toObject(includeInstance, f),
    tracing: (f = msg.getTracing()) && proto.envoy.config.trace.v3.Tracing.toObject(includeInstance, f),
    layeredRuntime: (f = msg.getLayeredRuntime()) && proto.envoy.config.bootstrap.v3.LayeredRuntime.toObject(includeInstance, f),
    admin: (f = msg.getAdmin()) && proto.envoy.config.bootstrap.v3.Admin.toObject(includeInstance, f),
    overloadManager: (f = msg.getOverloadManager()) && proto.envoy.config.overload.v3.OverloadManager.toObject(includeInstance, f),
    enableDispatcherStats: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    headerPrefix: jspb.Message.getFieldWithDefault(msg, 18, ""),
    statsServerVersionOverride: (f = msg.getStatsServerVersionOverride()) && proto.google.protobuf.UInt64Value.toObject(includeInstance, f),
    useTcpForDnsLookups: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    dnsResolutionConfig: (f = msg.getDnsResolutionConfig()) && proto.envoy.config.core.v3.DnsResolutionConfig.toObject(includeInstance, f),
    typedDnsResolverConfig: (f = msg.getTypedDnsResolverConfig()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    bootstrapExtensionsList: jspb.Message.toObjectList(msg.getBootstrapExtensionsList(),
    proto.envoy.config.core.v3.TypedExtensionConfig.toObject, includeInstance),
    fatalActionsList: jspb.Message.toObjectList(msg.getFatalActionsList(),
    proto.envoy.config.bootstrap.v3.FatalAction.toObject, includeInstance),
    configSourcesList: jspb.Message.toObjectList(msg.getConfigSourcesList(),
    proto.envoy.config.core.v3.ConfigSource.toObject, includeInstance),
    defaultConfigSource: (f = msg.getDefaultConfigSource()) && proto.envoy.config.core.v3.ConfigSource.toObject(includeInstance, f),
    defaultSocketInterface: jspb.Message.getFieldWithDefault(msg, 24, ""),
    certificateProviderInstancesMap: (f = msg.getCertificateProviderInstancesMap()) ? f.toObject(includeInstance, proto.envoy.config.core.v3.TypedExtensionConfig.toObject) : [],
    inlineHeadersList: jspb.Message.toObjectList(msg.getInlineHeadersList(),
    proto.envoy.config.bootstrap.v3.CustomInlineHeader.toObject, includeInstance),
    perfTracingFilePath: jspb.Message.getFieldWithDefault(msg, 33, ""),
    defaultRegexEngine: (f = msg.getDefaultRegexEngine()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    xdsDelegateExtension: (f = msg.getXdsDelegateExtension()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    xdsConfigTrackerExtension: (f = msg.getXdsConfigTrackerExtension()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    listenerManager: (f = msg.getListenerManager()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    applicationLogConfig: (f = msg.getApplicationLogConfig()) && proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v3.Bootstrap;
  return proto.envoy.config.bootstrap.v3.Bootstrap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.core.v3.Node;
      reader.readMessage(value,proto.envoy.config.core.v3.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.addNodeContextParams(value);
      break;
    case 2:
      var value = new proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.deserializeBinaryFromReader);
      msg.setStaticResources(value);
      break;
    case 3:
      var value = new proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.deserializeBinaryFromReader);
      msg.setDynamicResources(value);
      break;
    case 4:
      var value = new proto.envoy.config.bootstrap.v3.ClusterManager;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.ClusterManager.deserializeBinaryFromReader);
      msg.setClusterManager(value);
      break;
    case 14:
      var value = new proto.envoy.config.core.v3.ApiConfigSource;
      reader.readMessage(value,proto.envoy.config.core.v3.ApiConfigSource.deserializeBinaryFromReader);
      msg.setHdsConfig(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlagsPath(value);
      break;
    case 6:
      var value = new proto.envoy.config.metrics.v3.StatsSink;
      reader.readMessage(value,proto.envoy.config.metrics.v3.StatsSink.deserializeBinaryFromReader);
      msg.addStatsSinks(value);
      break;
    case 39:
      var value = new proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.deserializeBinaryFromReader);
      msg.setDeferredStatOptions(value);
      break;
    case 13:
      var value = new proto.envoy.config.metrics.v3.StatsConfig;
      reader.readMessage(value,proto.envoy.config.metrics.v3.StatsConfig.deserializeBinaryFromReader);
      msg.setStatsConfig(value);
      break;
    case 7:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setStatsFlushInterval(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatsFlushOnAdmin(value);
      break;
    case 8:
      var value = new proto.envoy.config.bootstrap.v3.Watchdog;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.Watchdog.deserializeBinaryFromReader);
      msg.setWatchdog(value);
      break;
    case 27:
      var value = new proto.envoy.config.bootstrap.v3.Watchdogs;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.Watchdogs.deserializeBinaryFromReader);
      msg.setWatchdogs(value);
      break;
    case 9:
      var value = new proto.envoy.config.trace.v3.Tracing;
      reader.readMessage(value,proto.envoy.config.trace.v3.Tracing.deserializeBinaryFromReader);
      msg.setTracing(value);
      break;
    case 17:
      var value = new proto.envoy.config.bootstrap.v3.LayeredRuntime;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.LayeredRuntime.deserializeBinaryFromReader);
      msg.setLayeredRuntime(value);
      break;
    case 12:
      var value = new proto.envoy.config.bootstrap.v3.Admin;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.Admin.deserializeBinaryFromReader);
      msg.setAdmin(value);
      break;
    case 15:
      var value = new proto.envoy.config.overload.v3.OverloadManager;
      reader.readMessage(value,proto.envoy.config.overload.v3.OverloadManager.deserializeBinaryFromReader);
      msg.setOverloadManager(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableDispatcherStats(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeaderPrefix(value);
      break;
    case 19:
      var value = new proto.google.protobuf.UInt64Value;
      reader.readMessage(value,proto.google.protobuf.UInt64Value.deserializeBinaryFromReader);
      msg.setStatsServerVersionOverride(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseTcpForDnsLookups(value);
      break;
    case 30:
      var value = new proto.envoy.config.core.v3.DnsResolutionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.DnsResolutionConfig.deserializeBinaryFromReader);
      msg.setDnsResolutionConfig(value);
      break;
    case 31:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setTypedDnsResolverConfig(value);
      break;
    case 21:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.addBootstrapExtensions(value);
      break;
    case 28:
      var value = new proto.envoy.config.bootstrap.v3.FatalAction;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.FatalAction.deserializeBinaryFromReader);
      msg.addFatalActions(value);
      break;
    case 22:
      var value = new proto.envoy.config.core.v3.ConfigSource;
      reader.readMessage(value,proto.envoy.config.core.v3.ConfigSource.deserializeBinaryFromReader);
      msg.addConfigSources(value);
      break;
    case 23:
      var value = new proto.envoy.config.core.v3.ConfigSource;
      reader.readMessage(value,proto.envoy.config.core.v3.ConfigSource.deserializeBinaryFromReader);
      msg.setDefaultConfigSource(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultSocketInterface(value);
      break;
    case 25:
      var value = msg.getCertificateProviderInstancesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader, "", new proto.envoy.config.core.v3.TypedExtensionConfig());
         });
      break;
    case 32:
      var value = new proto.envoy.config.bootstrap.v3.CustomInlineHeader;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.CustomInlineHeader.deserializeBinaryFromReader);
      msg.addInlineHeaders(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerfTracingFilePath(value);
      break;
    case 34:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setDefaultRegexEngine(value);
      break;
    case 35:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setXdsDelegateExtension(value);
      break;
    case 36:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setXdsConfigTrackerExtension(value);
      break;
    case 37:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setListenerManager(value);
      break;
    case 38:
      var value = new proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.deserializeBinaryFromReader);
      msg.setApplicationLogConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v3.Bootstrap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.core.v3.Node.serializeBinaryToWriter
    );
  }
  f = message.getNodeContextParamsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      26,
      f
    );
  }
  f = message.getStaticResources();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.serializeBinaryToWriter
    );
  }
  f = message.getDynamicResources();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.serializeBinaryToWriter
    );
  }
  f = message.getClusterManager();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.config.bootstrap.v3.ClusterManager.serializeBinaryToWriter
    );
  }
  f = message.getHdsConfig();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.envoy.config.core.v3.ApiConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getFlagsPath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatsSinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.envoy.config.metrics.v3.StatsSink.serializeBinaryToWriter
    );
  }
  f = message.getDeferredStatOptions();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.serializeBinaryToWriter
    );
  }
  f = message.getStatsConfig();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.envoy.config.metrics.v3.StatsConfig.serializeBinaryToWriter
    );
  }
  f = message.getStatsFlushInterval();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBool(
      29,
      f
    );
  }
  f = message.getWatchdog();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envoy.config.bootstrap.v3.Watchdog.serializeBinaryToWriter
    );
  }
  f = message.getWatchdogs();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.envoy.config.bootstrap.v3.Watchdogs.serializeBinaryToWriter
    );
  }
  f = message.getTracing();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.config.trace.v3.Tracing.serializeBinaryToWriter
    );
  }
  f = message.getLayeredRuntime();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.envoy.config.bootstrap.v3.LayeredRuntime.serializeBinaryToWriter
    );
  }
  f = message.getAdmin();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.envoy.config.bootstrap.v3.Admin.serializeBinaryToWriter
    );
  }
  f = message.getOverloadManager();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.envoy.config.overload.v3.OverloadManager.serializeBinaryToWriter
    );
  }
  f = message.getEnableDispatcherStats();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getHeaderPrefix();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getStatsServerVersionOverride();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.google.protobuf.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getUseTcpForDnsLookups();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getDnsResolutionConfig();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.envoy.config.core.v3.DnsResolutionConfig.serializeBinaryToWriter
    );
  }
  f = message.getTypedDnsResolverConfig();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getBootstrapExtensionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getFatalActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      28,
      f,
      proto.envoy.config.bootstrap.v3.FatalAction.serializeBinaryToWriter
    );
  }
  f = message.getConfigSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.envoy.config.core.v3.ConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getDefaultConfigSource();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.envoy.config.core.v3.ConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getDefaultSocketInterface();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getCertificateProviderInstancesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(25, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter);
  }
  f = message.getInlineHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      32,
      f,
      proto.envoy.config.bootstrap.v3.CustomInlineHeader.serializeBinaryToWriter
    );
  }
  f = message.getPerfTracingFilePath();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getDefaultRegexEngine();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getXdsDelegateExtension();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getXdsConfigTrackerExtension();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getListenerManager();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getApplicationLogConfig();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.toObject = function(includeInstance, msg) {
  var f, obj = {
    listenersList: jspb.Message.toObjectList(msg.getListenersList(),
    proto.envoy.config.listener.v3.Listener.toObject, includeInstance),
    clustersList: jspb.Message.toObjectList(msg.getClustersList(),
    proto.envoy.config.cluster.v3.Cluster.toObject, includeInstance),
    secretsList: jspb.Message.toObjectList(msg.getSecretsList(),
    proto.envoy.extensions.transport_sockets.tls.v3.Secret.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources;
  return proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.listener.v3.Listener;
      reader.readMessage(value,proto.envoy.config.listener.v3.Listener.deserializeBinaryFromReader);
      msg.addListeners(value);
      break;
    case 2:
      var value = new proto.envoy.config.cluster.v3.Cluster;
      reader.readMessage(value,proto.envoy.config.cluster.v3.Cluster.deserializeBinaryFromReader);
      msg.addClusters(value);
      break;
    case 3:
      var value = new proto.envoy.extensions.transport_sockets.tls.v3.Secret;
      reader.readMessage(value,proto.envoy.extensions.transport_sockets.tls.v3.Secret.deserializeBinaryFromReader);
      msg.addSecrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListenersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.config.listener.v3.Listener.serializeBinaryToWriter
    );
  }
  f = message.getClustersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.envoy.config.cluster.v3.Cluster.serializeBinaryToWriter
    );
  }
  f = message.getSecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.envoy.extensions.transport_sockets.tls.v3.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * repeated envoy.config.listener.v3.Listener listeners = 1;
 * @return {!Array<!proto.envoy.config.listener.v3.Listener>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.getListenersList = function() {
  return /** @type{!Array<!proto.envoy.config.listener.v3.Listener>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.listener.v3.Listener, 1));
};


/**
 * @param {!Array<!proto.envoy.config.listener.v3.Listener>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.setListenersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.config.listener.v3.Listener=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.listener.v3.Listener}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.addListeners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.config.listener.v3.Listener, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.clearListenersList = function() {
  return this.setListenersList([]);
};


/**
 * repeated envoy.config.cluster.v3.Cluster clusters = 2;
 * @return {!Array<!proto.envoy.config.cluster.v3.Cluster>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.getClustersList = function() {
  return /** @type{!Array<!proto.envoy.config.cluster.v3.Cluster>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.cluster.v3.Cluster, 2));
};


/**
 * @param {!Array<!proto.envoy.config.cluster.v3.Cluster>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.setClustersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.config.cluster.v3.Cluster=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.cluster.v3.Cluster}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.addClusters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.config.cluster.v3.Cluster, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.clearClustersList = function() {
  return this.setClustersList([]);
};


/**
 * repeated envoy.extensions.transport_sockets.tls.v3.Secret secrets = 3;
 * @return {!Array<!proto.envoy.extensions.transport_sockets.tls.v3.Secret>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.getSecretsList = function() {
  return /** @type{!Array<!proto.envoy.extensions.transport_sockets.tls.v3.Secret>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.transport_sockets.tls.v3.Secret, 3));
};


/**
 * @param {!Array<!proto.envoy.extensions.transport_sockets.tls.v3.Secret>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.setSecretsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.envoy.extensions.transport_sockets.tls.v3.Secret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.transport_sockets.tls.v3.Secret}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.addSecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.envoy.extensions.transport_sockets.tls.v3.Secret, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources.prototype.clearSecretsList = function() {
  return this.setSecretsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.toObject = function(includeInstance, msg) {
  var f, obj = {
    ldsConfig: (f = msg.getLdsConfig()) && proto.envoy.config.core.v3.ConfigSource.toObject(includeInstance, f),
    ldsResourcesLocator: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cdsConfig: (f = msg.getCdsConfig()) && proto.envoy.config.core.v3.ConfigSource.toObject(includeInstance, f),
    cdsResourcesLocator: jspb.Message.getFieldWithDefault(msg, 6, ""),
    adsConfig: (f = msg.getAdsConfig()) && proto.envoy.config.core.v3.ApiConfigSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources;
  return proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.core.v3.ConfigSource;
      reader.readMessage(value,proto.envoy.config.core.v3.ConfigSource.deserializeBinaryFromReader);
      msg.setLdsConfig(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLdsResourcesLocator(value);
      break;
    case 2:
      var value = new proto.envoy.config.core.v3.ConfigSource;
      reader.readMessage(value,proto.envoy.config.core.v3.ConfigSource.deserializeBinaryFromReader);
      msg.setCdsConfig(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCdsResourcesLocator(value);
      break;
    case 3:
      var value = new proto.envoy.config.core.v3.ApiConfigSource;
      reader.readMessage(value,proto.envoy.config.core.v3.ApiConfigSource.deserializeBinaryFromReader);
      msg.setAdsConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLdsConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.core.v3.ConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getLdsResourcesLocator();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCdsConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.core.v3.ConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getCdsResourcesLocator();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAdsConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.core.v3.ApiConfigSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.config.core.v3.ConfigSource lds_config = 1;
 * @return {?proto.envoy.config.core.v3.ConfigSource}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.getLdsConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.ConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.ConfigSource, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.ConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.setLdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.clearLdsConfig = function() {
  return this.setLdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.hasLdsConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string lds_resources_locator = 5;
 * @return {string}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.getLdsResourcesLocator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.setLdsResourcesLocator = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional envoy.config.core.v3.ConfigSource cds_config = 2;
 * @return {?proto.envoy.config.core.v3.ConfigSource}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.getCdsConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.ConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.ConfigSource, 2));
};


/**
 * @param {?proto.envoy.config.core.v3.ConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.setCdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.clearCdsConfig = function() {
  return this.setCdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.hasCdsConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string cds_resources_locator = 6;
 * @return {string}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.getCdsResourcesLocator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.setCdsResourcesLocator = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional envoy.config.core.v3.ApiConfigSource ads_config = 3;
 * @return {?proto.envoy.config.core.v3.ApiConfigSource}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.getAdsConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.ApiConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.ApiConfigSource, 3));
};


/**
 * @param {?proto.envoy.config.core.v3.ApiConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.setAdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.clearAdsConfig = function() {
  return this.setAdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources.prototype.hasAdsConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    logFormat: (f = msg.getLogFormat()) && proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig;
  return proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat;
      reader.readMessage(value,proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.deserializeBinaryFromReader);
      msg.setLogFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogFormat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.LogFormatCase = {
  LOG_FORMAT_NOT_SET: 0,
  JSON_FORMAT: 1,
  TEXT_FORMAT: 2
};

/**
 * @return {proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.LogFormatCase}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.getLogFormatCase = function() {
  return /** @type {proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.LogFormatCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.toObject = function(includeInstance, msg) {
  var f, obj = {
    jsonFormat: (f = msg.getJsonFormat()) && proto.google.protobuf.Struct.toObject(includeInstance, f),
    textFormat: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat;
  return proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Struct;
      reader.readMessage(value,proto.google.protobuf.Struct.deserializeBinaryFromReader);
      msg.setJsonFormat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJsonFormat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Struct.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Struct json_format = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.getJsonFormat = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.setJsonFormat = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.clearJsonFormat = function() {
  return this.setJsonFormat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.hasJsonFormat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string text_format = 2;
 * @return {string}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.getTextFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.setTextFormat = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.clearTextFormat = function() {
  return jspb.Message.setOneofField(this, 2, proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat.prototype.hasTextFormat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LogFormat log_format = 1;
 * @return {?proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.prototype.getLogFormat = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat, 1));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.LogFormat|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.prototype.setLogFormat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.prototype.clearLogFormat = function() {
  return this.setLogFormat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig.prototype.hasLogFormat = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    enableDeferredCreationStats: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions;
  return proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableDeferredCreationStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnableDeferredCreationStats();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enable_deferred_creation_stats = 1;
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.prototype.getEnableDeferredCreationStats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions.prototype.setEnableDeferredCreationStats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional envoy.config.core.v3.Node node = 1;
 * @return {?proto.envoy.config.core.v3.Node}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getNode = function() {
  return /** @type{?proto.envoy.config.core.v3.Node} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.Node, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.Node|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string node_context_params = 26;
 * @return {!Array<string>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getNodeContextParamsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 26));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setNodeContextParamsList = function(value) {
  return jspb.Message.setField(this, 26, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.addNodeContextParams = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 26, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearNodeContextParamsList = function() {
  return this.setNodeContextParamsList([]);
};


/**
 * optional StaticResources static_resources = 2;
 * @return {?proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getStaticResources = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources, 2));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.Bootstrap.StaticResources|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setStaticResources = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearStaticResources = function() {
  return this.setStaticResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasStaticResources = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DynamicResources dynamic_resources = 3;
 * @return {?proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getDynamicResources = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources, 3));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.Bootstrap.DynamicResources|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setDynamicResources = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearDynamicResources = function() {
  return this.setDynamicResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasDynamicResources = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ClusterManager cluster_manager = 4;
 * @return {?proto.envoy.config.bootstrap.v3.ClusterManager}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getClusterManager = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.ClusterManager} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.ClusterManager, 4));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.ClusterManager|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setClusterManager = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearClusterManager = function() {
  return this.setClusterManager(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasClusterManager = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional envoy.config.core.v3.ApiConfigSource hds_config = 14;
 * @return {?proto.envoy.config.core.v3.ApiConfigSource}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getHdsConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.ApiConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.ApiConfigSource, 14));
};


/**
 * @param {?proto.envoy.config.core.v3.ApiConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setHdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearHdsConfig = function() {
  return this.setHdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasHdsConfig = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string flags_path = 5;
 * @return {string}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getFlagsPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setFlagsPath = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated envoy.config.metrics.v3.StatsSink stats_sinks = 6;
 * @return {!Array<!proto.envoy.config.metrics.v3.StatsSink>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getStatsSinksList = function() {
  return /** @type{!Array<!proto.envoy.config.metrics.v3.StatsSink>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.metrics.v3.StatsSink, 6));
};


/**
 * @param {!Array<!proto.envoy.config.metrics.v3.StatsSink>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setStatsSinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.envoy.config.metrics.v3.StatsSink=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.metrics.v3.StatsSink}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.addStatsSinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.envoy.config.metrics.v3.StatsSink, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearStatsSinksList = function() {
  return this.setStatsSinksList([]);
};


/**
 * optional DeferredStatOptions deferred_stat_options = 39;
 * @return {?proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getDeferredStatOptions = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions, 39));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.Bootstrap.DeferredStatOptions|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setDeferredStatOptions = function(value) {
  return jspb.Message.setWrapperField(this, 39, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearDeferredStatOptions = function() {
  return this.setDeferredStatOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasDeferredStatOptions = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional envoy.config.metrics.v3.StatsConfig stats_config = 13;
 * @return {?proto.envoy.config.metrics.v3.StatsConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getStatsConfig = function() {
  return /** @type{?proto.envoy.config.metrics.v3.StatsConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.metrics.v3.StatsConfig, 13));
};


/**
 * @param {?proto.envoy.config.metrics.v3.StatsConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setStatsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearStatsConfig = function() {
  return this.setStatsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasStatsConfig = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Duration stats_flush_interval = 7;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getStatsFlushInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 7));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setStatsFlushInterval = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearStatsFlushInterval = function() {
  return this.setStatsFlushInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasStatsFlushInterval = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool stats_flush_on_admin = 29;
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getStatsFlushOnAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setStatsFlushOnAdmin = function(value) {
  return jspb.Message.setOneofField(this, 29, proto.envoy.config.bootstrap.v3.Bootstrap.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearStatsFlushOnAdmin = function() {
  return jspb.Message.setOneofField(this, 29, proto.envoy.config.bootstrap.v3.Bootstrap.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasStatsFlushOnAdmin = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional Watchdog watchdog = 8;
 * @return {?proto.envoy.config.bootstrap.v3.Watchdog}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getWatchdog = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.Watchdog} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.Watchdog, 8));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.Watchdog|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setWatchdog = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearWatchdog = function() {
  return this.setWatchdog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasWatchdog = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Watchdogs watchdogs = 27;
 * @return {?proto.envoy.config.bootstrap.v3.Watchdogs}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getWatchdogs = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.Watchdogs} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.Watchdogs, 27));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.Watchdogs|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setWatchdogs = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearWatchdogs = function() {
  return this.setWatchdogs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasWatchdogs = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional envoy.config.trace.v3.Tracing tracing = 9;
 * @return {?proto.envoy.config.trace.v3.Tracing}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getTracing = function() {
  return /** @type{?proto.envoy.config.trace.v3.Tracing} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.trace.v3.Tracing, 9));
};


/**
 * @param {?proto.envoy.config.trace.v3.Tracing|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setTracing = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearTracing = function() {
  return this.setTracing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasTracing = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional LayeredRuntime layered_runtime = 17;
 * @return {?proto.envoy.config.bootstrap.v3.LayeredRuntime}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getLayeredRuntime = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.LayeredRuntime} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.LayeredRuntime, 17));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.LayeredRuntime|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setLayeredRuntime = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearLayeredRuntime = function() {
  return this.setLayeredRuntime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasLayeredRuntime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Admin admin = 12;
 * @return {?proto.envoy.config.bootstrap.v3.Admin}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getAdmin = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.Admin} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.Admin, 12));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.Admin|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setAdmin = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearAdmin = function() {
  return this.setAdmin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasAdmin = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional envoy.config.overload.v3.OverloadManager overload_manager = 15;
 * @return {?proto.envoy.config.overload.v3.OverloadManager}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getOverloadManager = function() {
  return /** @type{?proto.envoy.config.overload.v3.OverloadManager} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.overload.v3.OverloadManager, 15));
};


/**
 * @param {?proto.envoy.config.overload.v3.OverloadManager|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setOverloadManager = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearOverloadManager = function() {
  return this.setOverloadManager(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasOverloadManager = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool enable_dispatcher_stats = 16;
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getEnableDispatcherStats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setEnableDispatcherStats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional string header_prefix = 18;
 * @return {string}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getHeaderPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setHeaderPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional google.protobuf.UInt64Value stats_server_version_override = 19;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getStatsServerVersionOverride = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt64Value, 19));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setStatsServerVersionOverride = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearStatsServerVersionOverride = function() {
  return this.setStatsServerVersionOverride(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasStatsServerVersionOverride = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool use_tcp_for_dns_lookups = 20;
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getUseTcpForDnsLookups = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setUseTcpForDnsLookups = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional envoy.config.core.v3.DnsResolutionConfig dns_resolution_config = 30;
 * @return {?proto.envoy.config.core.v3.DnsResolutionConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getDnsResolutionConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.DnsResolutionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.DnsResolutionConfig, 30));
};


/**
 * @param {?proto.envoy.config.core.v3.DnsResolutionConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setDnsResolutionConfig = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearDnsResolutionConfig = function() {
  return this.setDnsResolutionConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasDnsResolutionConfig = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig typed_dns_resolver_config = 31;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getTypedDnsResolverConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 31));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setTypedDnsResolverConfig = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearTypedDnsResolverConfig = function() {
  return this.setTypedDnsResolverConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasTypedDnsResolverConfig = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * repeated envoy.config.core.v3.TypedExtensionConfig bootstrap_extensions = 21;
 * @return {!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getBootstrapExtensionsList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 21));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setBootstrapExtensionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.envoy.config.core.v3.TypedExtensionConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.addBootstrapExtensions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.envoy.config.core.v3.TypedExtensionConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearBootstrapExtensionsList = function() {
  return this.setBootstrapExtensionsList([]);
};


/**
 * repeated FatalAction fatal_actions = 28;
 * @return {!Array<!proto.envoy.config.bootstrap.v3.FatalAction>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getFatalActionsList = function() {
  return /** @type{!Array<!proto.envoy.config.bootstrap.v3.FatalAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.bootstrap.v3.FatalAction, 28));
};


/**
 * @param {!Array<!proto.envoy.config.bootstrap.v3.FatalAction>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setFatalActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 28, value);
};


/**
 * @param {!proto.envoy.config.bootstrap.v3.FatalAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.bootstrap.v3.FatalAction}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.addFatalActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 28, opt_value, proto.envoy.config.bootstrap.v3.FatalAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearFatalActionsList = function() {
  return this.setFatalActionsList([]);
};


/**
 * repeated envoy.config.core.v3.ConfigSource config_sources = 22;
 * @return {!Array<!proto.envoy.config.core.v3.ConfigSource>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getConfigSourcesList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.ConfigSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.ConfigSource, 22));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.ConfigSource>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setConfigSourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.envoy.config.core.v3.ConfigSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.ConfigSource}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.addConfigSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.envoy.config.core.v3.ConfigSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearConfigSourcesList = function() {
  return this.setConfigSourcesList([]);
};


/**
 * optional envoy.config.core.v3.ConfigSource default_config_source = 23;
 * @return {?proto.envoy.config.core.v3.ConfigSource}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getDefaultConfigSource = function() {
  return /** @type{?proto.envoy.config.core.v3.ConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.ConfigSource, 23));
};


/**
 * @param {?proto.envoy.config.core.v3.ConfigSource|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setDefaultConfigSource = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearDefaultConfigSource = function() {
  return this.setDefaultConfigSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasDefaultConfigSource = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string default_socket_interface = 24;
 * @return {string}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getDefaultSocketInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setDefaultSocketInterface = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * map<string, envoy.config.core.v3.TypedExtensionConfig> certificate_provider_instances = 25;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.envoy.config.core.v3.TypedExtensionConfig>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getCertificateProviderInstancesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.envoy.config.core.v3.TypedExtensionConfig>} */ (
      jspb.Message.getMapField(this, 25, opt_noLazyCreate,
      proto.envoy.config.core.v3.TypedExtensionConfig));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearCertificateProviderInstancesMap = function() {
  this.getCertificateProviderInstancesMap().clear();
  return this;
};


/**
 * repeated CustomInlineHeader inline_headers = 32;
 * @return {!Array<!proto.envoy.config.bootstrap.v3.CustomInlineHeader>}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getInlineHeadersList = function() {
  return /** @type{!Array<!proto.envoy.config.bootstrap.v3.CustomInlineHeader>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.bootstrap.v3.CustomInlineHeader, 32));
};


/**
 * @param {!Array<!proto.envoy.config.bootstrap.v3.CustomInlineHeader>} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setInlineHeadersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 32, value);
};


/**
 * @param {!proto.envoy.config.bootstrap.v3.CustomInlineHeader=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.bootstrap.v3.CustomInlineHeader}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.addInlineHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 32, opt_value, proto.envoy.config.bootstrap.v3.CustomInlineHeader, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearInlineHeadersList = function() {
  return this.setInlineHeadersList([]);
};


/**
 * optional string perf_tracing_file_path = 33;
 * @return {string}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getPerfTracingFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setPerfTracingFilePath = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig default_regex_engine = 34;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getDefaultRegexEngine = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 34));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setDefaultRegexEngine = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearDefaultRegexEngine = function() {
  return this.setDefaultRegexEngine(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasDefaultRegexEngine = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig xds_delegate_extension = 35;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getXdsDelegateExtension = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 35));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setXdsDelegateExtension = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearXdsDelegateExtension = function() {
  return this.setXdsDelegateExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasXdsDelegateExtension = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig xds_config_tracker_extension = 36;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getXdsConfigTrackerExtension = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 36));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setXdsConfigTrackerExtension = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearXdsConfigTrackerExtension = function() {
  return this.setXdsConfigTrackerExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasXdsConfigTrackerExtension = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig listener_manager = 37;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getListenerManager = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 37));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setListenerManager = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearListenerManager = function() {
  return this.setListenerManager(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasListenerManager = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional ApplicationLogConfig application_log_config = 38;
 * @return {?proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.getApplicationLogConfig = function() {
  return /** @type{?proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig, 38));
};


/**
 * @param {?proto.envoy.config.bootstrap.v3.Bootstrap.ApplicationLogConfig|undefined} value
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
*/
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.setApplicationLogConfig = function(value) {
  return jspb.Message.setWrapperField(this, 38, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.config.bootstrap.v3.Bootstrap} returns this
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.clearApplicationLogConfig = function() {
  return this.setApplicationLogConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.bootstrap.v3.Bootstrap.prototype.hasApplicationLogConfig = function() {
  return jspb.Message.getField(this, 38) != null;
};


