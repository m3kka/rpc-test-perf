// source: envoy/data/accesslog/v2/accesslog.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.data.accesslog.v2.ResponseFlags');
goog.provide('proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized');
goog.provide('proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.ResponseFlags = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.ResponseFlags, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.data.accesslog.v2.ResponseFlags.displayName = 'proto.envoy.data.accesslog.v2.ResponseFlags';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.displayName = 'proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.ResponseFlags.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.ResponseFlags.toObject = function(includeInstance, msg) {
  var f, obj = {
    failedLocalHealthcheck: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    noHealthyUpstream: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    upstreamRequestTimeout: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    localReset: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    upstreamRemoteReset: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    upstreamConnectionFailure: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    upstreamConnectionTermination: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    upstreamOverflow: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    noRouteFound: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    delayInjected: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    faultInjected: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    rateLimited: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    unauthorizedDetails: (f = msg.getUnauthorizedDetails()) && proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.toObject(includeInstance, f),
    rateLimitServiceError: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    downstreamConnectionTermination: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    upstreamRetryLimitExceeded: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    streamIdleTimeout: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    invalidEnvoyRequestHeaders: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    downstreamProtocolError: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.ResponseFlags;
  return proto.envoy.data.accesslog.v2.ResponseFlags.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailedLocalHealthcheck(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoHealthyUpstream(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamRequestTimeout(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocalReset(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamRemoteReset(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamConnectionFailure(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamConnectionTermination(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamOverflow(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoRouteFound(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelayInjected(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFaultInjected(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRateLimited(value);
      break;
    case 13:
      var value = new proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized;
      reader.readMessage(value,proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.deserializeBinaryFromReader);
      msg.setUnauthorizedDetails(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRateLimitServiceError(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDownstreamConnectionTermination(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpstreamRetryLimitExceeded(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStreamIdleTimeout(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvalidEnvoyRequestHeaders(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDownstreamProtocolError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.ResponseFlags.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.ResponseFlags.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailedLocalHealthcheck();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getNoHealthyUpstream();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUpstreamRequestTimeout();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLocalReset();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getUpstreamRemoteReset();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getUpstreamConnectionFailure();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getUpstreamConnectionTermination();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getUpstreamOverflow();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getNoRouteFound();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getDelayInjected();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getFaultInjected();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getRateLimited();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getUnauthorizedDetails();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.serializeBinaryToWriter
    );
  }
  f = message.getRateLimitServiceError();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getDownstreamConnectionTermination();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getUpstreamRetryLimitExceeded();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getStreamIdleTimeout();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getInvalidEnvoyRequestHeaders();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getDownstreamProtocolError();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.toObject = function(includeInstance, msg) {
  var f, obj = {
    reason: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized;
  return proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason = {
  REASON_UNSPECIFIED: 0,
  EXTERNAL_SERVICE: 1
};

/**
 * optional Reason reason = 1;
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.prototype.getReason = function() {
  return /** @type {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized.prototype.setReason = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool failed_local_healthcheck = 1;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getFailedLocalHealthcheck = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setFailedLocalHealthcheck = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool no_healthy_upstream = 2;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getNoHealthyUpstream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setNoHealthyUpstream = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool upstream_request_timeout = 3;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamRequestTimeout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamRequestTimeout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool local_reset = 4;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getLocalReset = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setLocalReset = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool upstream_remote_reset = 5;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamRemoteReset = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamRemoteReset = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool upstream_connection_failure = 6;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamConnectionFailure = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamConnectionFailure = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool upstream_connection_termination = 7;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamConnectionTermination = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamConnectionTermination = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool upstream_overflow = 8;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamOverflow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamOverflow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool no_route_found = 9;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getNoRouteFound = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setNoRouteFound = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool delay_injected = 10;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getDelayInjected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setDelayInjected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool fault_injected = 11;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getFaultInjected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setFaultInjected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool rate_limited = 12;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getRateLimited = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setRateLimited = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional Unauthorized unauthorized_details = 13;
 * @return {?proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUnauthorizedDetails = function() {
  return /** @type{?proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized, 13));
};


/**
 * @param {?proto.envoy.data.accesslog.v2.ResponseFlags.Unauthorized|undefined} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
*/
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUnauthorizedDetails = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.clearUnauthorizedDetails = function() {
  return this.setUnauthorizedDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.hasUnauthorizedDetails = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool rate_limit_service_error = 14;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getRateLimitServiceError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setRateLimitServiceError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool downstream_connection_termination = 15;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getDownstreamConnectionTermination = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setDownstreamConnectionTermination = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool upstream_retry_limit_exceeded = 16;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getUpstreamRetryLimitExceeded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setUpstreamRetryLimitExceeded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool stream_idle_timeout = 17;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getStreamIdleTimeout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setStreamIdleTimeout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool invalid_envoy_request_headers = 18;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getInvalidEnvoyRequestHeaders = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setInvalidEnvoyRequestHeaders = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool downstream_protocol_error = 19;
 * @return {boolean}
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.getDownstreamProtocolError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.data.accesslog.v2.ResponseFlags} returns this
 */
proto.envoy.data.accesslog.v2.ResponseFlags.prototype.setDownstreamProtocolError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


