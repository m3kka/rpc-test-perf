// GENERATED CODE -- DO NOT EDIT!

'use strict';
var grpc = require('grpc');
var contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb = require('../../../../../../../../contrib/envoy/extensions/filters/network/sip_proxy/tra/v3alpha/tra_pb.js');
var envoy_config_core_v3_config_source_pb = require('../../../../../../../../envoy/config/core/v3/config_source_pb.js');
var envoy_config_core_v3_grpc_service_pb = require('../../../../../../../../envoy/config/core/v3/grpc_service_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var udpa_annotations_status_pb = require('../../../../../../../../udpa/annotations/status_pb.js');
var validate_validate_pb = require('../../../../../../../../validate/validate_pb.js');

function serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest(arg) {
  if (!(arg instanceof contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceRequest)) {
    throw new Error('Expected argument of type envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest(buffer_arg) {
  return contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse(arg) {
  if (!(arg instanceof contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceResponse)) {
    throw new Error('Expected argument of type envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraServiceResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse(buffer_arg) {
  return contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


// [#protodoc-title: TRA]
//
var TraServiceService = exports.TraServiceService = {
  create: {
    path: '/envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService/Create',
    requestStream: false,
    responseStream: false,
    requestType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceRequest,
    responseType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceResponse,
    requestSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    requestDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    responseSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
    responseDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
  },
  update: {
    path: '/envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService/Update',
    requestStream: false,
    responseStream: false,
    requestType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceRequest,
    responseType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceResponse,
    requestSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    requestDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    responseSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
    responseDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
  },
  retrieve: {
    path: '/envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService/Retrieve',
    requestStream: false,
    responseStream: false,
    requestType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceRequest,
    responseType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceResponse,
    requestSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    requestDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    responseSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
    responseDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
  },
  delete: {
    path: '/envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService/Delete',
    requestStream: false,
    responseStream: false,
    requestType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceRequest,
    responseType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceResponse,
    requestSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    requestDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    responseSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
    responseDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
  },
  subscribe: {
    path: '/envoy.extensions.filters.network.sip_proxy.tra.v3alpha.TraService/Subscribe',
    requestStream: false,
    responseStream: true,
    requestType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceRequest,
    responseType: contrib_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_tra_pb.TraServiceResponse,
    requestSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    requestDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceRequest,
    responseSerialize: serialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
    responseDeserialize: deserialize_envoy_extensions_filters_network_sip_proxy_tra_v3alpha_TraServiceResponse,
  },
};

exports.TraServiceClient = grpc.makeGenericClientConstructor(TraServiceService);
