// source: envoy/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.CodecType');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ForwardClientCertDetails');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathWithEscapedSlashesAction');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.ProxyNameCase');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.RouteSpecifierCase');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ServerHeaderTransformation');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.StripPortModeCase');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.OperationName');
goog.provide('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.accesslog.v3.AccessLog');
goog.require('proto.envoy.config.core.v3.CidrRange');
goog.require('proto.envoy.config.core.v3.Http1ProtocolOptions');
goog.require('proto.envoy.config.core.v3.Http2ProtocolOptions');
goog.require('proto.envoy.config.core.v3.Http3ProtocolOptions');
goog.require('proto.envoy.config.core.v3.HttpProtocolOptions');
goog.require('proto.envoy.config.core.v3.SchemeHeaderTransformation');
goog.require('proto.envoy.config.core.v3.TypedExtensionConfig');
goog.require('proto.envoy.config.route.v3.RouteConfiguration');
goog.require('proto.envoy.config.trace.v3.Tracing.Http');
goog.require('proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter');
goog.require('proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig');
goog.require('proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds');
goog.require('proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension');
goog.require('proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes');
goog.require('proto.envoy.type.http.v3.PathTransformation');
goog.require('proto.envoy.type.tracing.v3.CustomTag');
goog.require('proto.envoy.type.v3.Percent');
goog.require('proto.google.protobuf.BoolValue');
goog.require('proto.google.protobuf.Duration');
goog.require('proto.google.protobuf.UInt32Value');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.repeatedFields_, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.displayName = 'proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.displayName = 'proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.displayName = 'proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.displayName = 'proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.displayName = 'proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.displayName = 'proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.displayName = 'proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.displayName = 'proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.repeatedFields_ = [5,13,46,52,23];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_ = [[3,4,31],[42]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.RouteSpecifierCase = {
  ROUTE_SPECIFIER_NOT_SET: 0,
  RDS: 3,
  ROUTE_CONFIG: 4,
  SCOPED_ROUTES: 31
};

/**
 * @return {proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.RouteSpecifierCase}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getRouteSpecifierCase = function() {
  return /** @type {proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.RouteSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.StripPortModeCase = {
  STRIP_PORT_MODE_NOT_SET: 0,
  STRIP_ANY_HOST_PORT: 42
};

/**
 * @return {proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.StripPortModeCase}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getStripPortModeCase = function() {
  return /** @type {proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.StripPortModeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.toObject = function(includeInstance, msg) {
  var f, obj = {
    codecType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    statPrefix: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rds: (f = msg.getRds()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds.toObject(includeInstance, f),
    routeConfig: (f = msg.getRouteConfig()) && proto.envoy.config.route.v3.RouteConfiguration.toObject(includeInstance, f),
    scopedRoutes: (f = msg.getScopedRoutes()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes.toObject(includeInstance, f),
    httpFiltersList: jspb.Message.toObjectList(msg.getHttpFiltersList(),
    proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter.toObject, includeInstance),
    addUserAgent: (f = msg.getAddUserAgent()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    tracing: (f = msg.getTracing()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.toObject(includeInstance, f),
    commonHttpProtocolOptions: (f = msg.getCommonHttpProtocolOptions()) && proto.envoy.config.core.v3.HttpProtocolOptions.toObject(includeInstance, f),
    httpProtocolOptions: (f = msg.getHttpProtocolOptions()) && proto.envoy.config.core.v3.Http1ProtocolOptions.toObject(includeInstance, f),
    http2ProtocolOptions: (f = msg.getHttp2ProtocolOptions()) && proto.envoy.config.core.v3.Http2ProtocolOptions.toObject(includeInstance, f),
    http3ProtocolOptions: (f = msg.getHttp3ProtocolOptions()) && proto.envoy.config.core.v3.Http3ProtocolOptions.toObject(includeInstance, f),
    serverName: jspb.Message.getFieldWithDefault(msg, 10, ""),
    serverHeaderTransformation: jspb.Message.getFieldWithDefault(msg, 34, 0),
    schemeHeaderTransformation: (f = msg.getSchemeHeaderTransformation()) && proto.envoy.config.core.v3.SchemeHeaderTransformation.toObject(includeInstance, f),
    maxRequestHeadersKb: (f = msg.getMaxRequestHeadersKb()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    streamIdleTimeout: (f = msg.getStreamIdleTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    requestTimeout: (f = msg.getRequestTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    requestHeadersTimeout: (f = msg.getRequestHeadersTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    drainTimeout: (f = msg.getDrainTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    delayedCloseTimeout: (f = msg.getDelayedCloseTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    accessLogList: jspb.Message.toObjectList(msg.getAccessLogList(),
    proto.envoy.config.accesslog.v3.AccessLog.toObject, includeInstance),
    accessLogFlushInterval: (f = msg.getAccessLogFlushInterval()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    flushAccessLogOnNewRequest: jspb.Message.getBooleanFieldWithDefault(msg, 55, false),
    accessLogOptions: (f = msg.getAccessLogOptions()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.toObject(includeInstance, f),
    useRemoteAddress: (f = msg.getUseRemoteAddress()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    xffNumTrustedHops: jspb.Message.getFieldWithDefault(msg, 19, 0),
    originalIpDetectionExtensionsList: jspb.Message.toObjectList(msg.getOriginalIpDetectionExtensionsList(),
    proto.envoy.config.core.v3.TypedExtensionConfig.toObject, includeInstance),
    earlyHeaderMutationExtensionsList: jspb.Message.toObjectList(msg.getEarlyHeaderMutationExtensionsList(),
    proto.envoy.config.core.v3.TypedExtensionConfig.toObject, includeInstance),
    internalAddressConfig: (f = msg.getInternalAddressConfig()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.toObject(includeInstance, f),
    skipXffAppend: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    via: jspb.Message.getFieldWithDefault(msg, 22, ""),
    generateRequestId: (f = msg.getGenerateRequestId()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    preserveExternalRequestId: jspb.Message.getBooleanFieldWithDefault(msg, 32, false),
    alwaysSetRequestIdInResponse: jspb.Message.getBooleanFieldWithDefault(msg, 37, false),
    forwardClientCertDetails: jspb.Message.getFieldWithDefault(msg, 16, 0),
    setCurrentClientCertDetails: (f = msg.getSetCurrentClientCertDetails()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.toObject(includeInstance, f),
    proxy100Continue: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    representIpv4RemoteAddressAsIpv4MappedIpv6: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    upgradeConfigsList: jspb.Message.toObjectList(msg.getUpgradeConfigsList(),
    proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.toObject, includeInstance),
    normalizePath: (f = msg.getNormalizePath()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    mergeSlashes: jspb.Message.getBooleanFieldWithDefault(msg, 33, false),
    pathWithEscapedSlashesAction: jspb.Message.getFieldWithDefault(msg, 45, 0),
    requestIdExtension: (f = msg.getRequestIdExtension()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension.toObject(includeInstance, f),
    localReplyConfig: (f = msg.getLocalReplyConfig()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig.toObject(includeInstance, f),
    stripMatchingHostPort: jspb.Message.getBooleanFieldWithDefault(msg, 39, false),
    stripAnyHostPort: jspb.Message.getBooleanFieldWithDefault(msg, 42, false),
    streamErrorOnInvalidHttpMessage: (f = msg.getStreamErrorOnInvalidHttpMessage()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    pathNormalizationOptions: (f = msg.getPathNormalizationOptions()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.toObject(includeInstance, f),
    stripTrailingHostDot: jspb.Message.getBooleanFieldWithDefault(msg, 47, false),
    proxyStatusConfig: (f = msg.getProxyStatusConfig()) && proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.toObject(includeInstance, f),
    typedHeaderValidationConfig: (f = msg.getTypedHeaderValidationConfig()) && proto.envoy.config.core.v3.TypedExtensionConfig.toObject(includeInstance, f),
    appendXForwardedPort: jspb.Message.getBooleanFieldWithDefault(msg, 51, false),
    addProxyProtocolConnectionState: (f = msg.getAddProxyProtocolConnectionState()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager;
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.CodecType} */ (reader.readEnum());
      msg.setCodecType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    case 3:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds.deserializeBinaryFromReader);
      msg.setRds(value);
      break;
    case 4:
      var value = new proto.envoy.config.route.v3.RouteConfiguration;
      reader.readMessage(value,proto.envoy.config.route.v3.RouteConfiguration.deserializeBinaryFromReader);
      msg.setRouteConfig(value);
      break;
    case 31:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes.deserializeBinaryFromReader);
      msg.setScopedRoutes(value);
      break;
    case 5:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter.deserializeBinaryFromReader);
      msg.addHttpFilters(value);
      break;
    case 6:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setAddUserAgent(value);
      break;
    case 7:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.deserializeBinaryFromReader);
      msg.setTracing(value);
      break;
    case 35:
      var value = new proto.envoy.config.core.v3.HttpProtocolOptions;
      reader.readMessage(value,proto.envoy.config.core.v3.HttpProtocolOptions.deserializeBinaryFromReader);
      msg.setCommonHttpProtocolOptions(value);
      break;
    case 8:
      var value = new proto.envoy.config.core.v3.Http1ProtocolOptions;
      reader.readMessage(value,proto.envoy.config.core.v3.Http1ProtocolOptions.deserializeBinaryFromReader);
      msg.setHttpProtocolOptions(value);
      break;
    case 9:
      var value = new proto.envoy.config.core.v3.Http2ProtocolOptions;
      reader.readMessage(value,proto.envoy.config.core.v3.Http2ProtocolOptions.deserializeBinaryFromReader);
      msg.setHttp2ProtocolOptions(value);
      break;
    case 44:
      var value = new proto.envoy.config.core.v3.Http3ProtocolOptions;
      reader.readMessage(value,proto.envoy.config.core.v3.Http3ProtocolOptions.deserializeBinaryFromReader);
      msg.setHttp3ProtocolOptions(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerName(value);
      break;
    case 34:
      var value = /** @type {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ServerHeaderTransformation} */ (reader.readEnum());
      msg.setServerHeaderTransformation(value);
      break;
    case 48:
      var value = new proto.envoy.config.core.v3.SchemeHeaderTransformation;
      reader.readMessage(value,proto.envoy.config.core.v3.SchemeHeaderTransformation.deserializeBinaryFromReader);
      msg.setSchemeHeaderTransformation(value);
      break;
    case 29:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxRequestHeadersKb(value);
      break;
    case 24:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setStreamIdleTimeout(value);
      break;
    case 28:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setRequestTimeout(value);
      break;
    case 41:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setRequestHeadersTimeout(value);
      break;
    case 12:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setDrainTimeout(value);
      break;
    case 26:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setDelayedCloseTimeout(value);
      break;
    case 13:
      var value = new proto.envoy.config.accesslog.v3.AccessLog;
      reader.readMessage(value,proto.envoy.config.accesslog.v3.AccessLog.deserializeBinaryFromReader);
      msg.addAccessLog(value);
      break;
    case 54:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setAccessLogFlushInterval(value);
      break;
    case 55:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFlushAccessLogOnNewRequest(value);
      break;
    case 56:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.deserializeBinaryFromReader);
      msg.setAccessLogOptions(value);
      break;
    case 14:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setUseRemoteAddress(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXffNumTrustedHops(value);
      break;
    case 46:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.addOriginalIpDetectionExtensions(value);
      break;
    case 52:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.addEarlyHeaderMutationExtensions(value);
      break;
    case 25:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.deserializeBinaryFromReader);
      msg.setInternalAddressConfig(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipXffAppend(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setVia(value);
      break;
    case 15:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setGenerateRequestId(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreserveExternalRequestId(value);
      break;
    case 37:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlwaysSetRequestIdInResponse(value);
      break;
    case 16:
      var value = /** @type {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ForwardClientCertDetails} */ (reader.readEnum());
      msg.setForwardClientCertDetails(value);
      break;
    case 17:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.deserializeBinaryFromReader);
      msg.setSetCurrentClientCertDetails(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProxy100Continue(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRepresentIpv4RemoteAddressAsIpv4MappedIpv6(value);
      break;
    case 23:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.deserializeBinaryFromReader);
      msg.addUpgradeConfigs(value);
      break;
    case 30:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setNormalizePath(value);
      break;
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMergeSlashes(value);
      break;
    case 45:
      var value = /** @type {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathWithEscapedSlashesAction} */ (reader.readEnum());
      msg.setPathWithEscapedSlashesAction(value);
      break;
    case 36:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension.deserializeBinaryFromReader);
      msg.setRequestIdExtension(value);
      break;
    case 38:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig.deserializeBinaryFromReader);
      msg.setLocalReplyConfig(value);
      break;
    case 39:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStripMatchingHostPort(value);
      break;
    case 42:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStripAnyHostPort(value);
      break;
    case 40:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setStreamErrorOnInvalidHttpMessage(value);
      break;
    case 43:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.deserializeBinaryFromReader);
      msg.setPathNormalizationOptions(value);
      break;
    case 47:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStripTrailingHostDot(value);
      break;
    case 49:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.deserializeBinaryFromReader);
      msg.setProxyStatusConfig(value);
      break;
    case 50:
      var value = new proto.envoy.config.core.v3.TypedExtensionConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setTypedHeaderValidationConfig(value);
      break;
    case 51:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAppendXForwardedPort(value);
      break;
    case 53:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setAddProxyProtocolConnectionState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodecType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRds();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds.serializeBinaryToWriter
    );
  }
  f = message.getRouteConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.config.route.v3.RouteConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getScopedRoutes();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes.serializeBinaryToWriter
    );
  }
  f = message.getHttpFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter.serializeBinaryToWriter
    );
  }
  f = message.getAddUserAgent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getTracing();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.serializeBinaryToWriter
    );
  }
  f = message.getCommonHttpProtocolOptions();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.envoy.config.core.v3.HttpProtocolOptions.serializeBinaryToWriter
    );
  }
  f = message.getHttpProtocolOptions();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envoy.config.core.v3.Http1ProtocolOptions.serializeBinaryToWriter
    );
  }
  f = message.getHttp2ProtocolOptions();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.config.core.v3.Http2ProtocolOptions.serializeBinaryToWriter
    );
  }
  f = message.getHttp3ProtocolOptions();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      proto.envoy.config.core.v3.Http3ProtocolOptions.serializeBinaryToWriter
    );
  }
  f = message.getServerName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getServerHeaderTransformation();
  if (f !== 0.0) {
    writer.writeEnum(
      34,
      f
    );
  }
  f = message.getSchemeHeaderTransformation();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.envoy.config.core.v3.SchemeHeaderTransformation.serializeBinaryToWriter
    );
  }
  f = message.getMaxRequestHeadersKb();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getStreamIdleTimeout();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getRequestTimeout();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getRequestHeadersTimeout();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getDrainTimeout();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getDelayedCloseTimeout();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAccessLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.envoy.config.accesslog.v3.AccessLog.serializeBinaryToWriter
    );
  }
  f = message.getAccessLogFlushInterval();
  if (f != null) {
    writer.writeMessage(
      54,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getFlushAccessLogOnNewRequest();
  if (f) {
    writer.writeBool(
      55,
      f
    );
  }
  f = message.getAccessLogOptions();
  if (f != null) {
    writer.writeMessage(
      56,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.serializeBinaryToWriter
    );
  }
  f = message.getUseRemoteAddress();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getXffNumTrustedHops();
  if (f !== 0) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = message.getOriginalIpDetectionExtensionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      46,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getEarlyHeaderMutationExtensionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      52,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getInternalAddressConfig();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.serializeBinaryToWriter
    );
  }
  f = message.getSkipXffAppend();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getVia();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getGenerateRequestId();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getPreserveExternalRequestId();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
  f = message.getAlwaysSetRequestIdInResponse();
  if (f) {
    writer.writeBool(
      37,
      f
    );
  }
  f = message.getForwardClientCertDetails();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getSetCurrentClientCertDetails();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.serializeBinaryToWriter
    );
  }
  f = message.getProxy100Continue();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getRepresentIpv4RemoteAddressAsIpv4MappedIpv6();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getUpgradeConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      23,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.serializeBinaryToWriter
    );
  }
  f = message.getNormalizePath();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getMergeSlashes();
  if (f) {
    writer.writeBool(
      33,
      f
    );
  }
  f = message.getPathWithEscapedSlashesAction();
  if (f !== 0.0) {
    writer.writeEnum(
      45,
      f
    );
  }
  f = message.getRequestIdExtension();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension.serializeBinaryToWriter
    );
  }
  f = message.getLocalReplyConfig();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig.serializeBinaryToWriter
    );
  }
  f = message.getStripMatchingHostPort();
  if (f) {
    writer.writeBool(
      39,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 42));
  if (f != null) {
    writer.writeBool(
      42,
      f
    );
  }
  f = message.getStreamErrorOnInvalidHttpMessage();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getPathNormalizationOptions();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.serializeBinaryToWriter
    );
  }
  f = message.getStripTrailingHostDot();
  if (f) {
    writer.writeBool(
      47,
      f
    );
  }
  f = message.getProxyStatusConfig();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.serializeBinaryToWriter
    );
  }
  f = message.getTypedHeaderValidationConfig();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.envoy.config.core.v3.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
  f = message.getAppendXForwardedPort();
  if (f) {
    writer.writeBool(
      51,
      f
    );
  }
  f = message.getAddProxyProtocolConnectionState();
  if (f != null) {
    writer.writeMessage(
      53,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.CodecType = {
  AUTO: 0,
  HTTP1: 1,
  HTTP2: 2,
  HTTP3: 3
};

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ServerHeaderTransformation = {
  OVERWRITE: 0,
  APPEND_IF_ABSENT: 1,
  PASS_THROUGH: 2
};

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ForwardClientCertDetails = {
  SANITIZE: 0,
  FORWARD_ONLY: 1,
  APPEND_FORWARD: 2,
  SANITIZE_SET: 3,
  ALWAYS_FORWARD_ONLY: 4
};

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathWithEscapedSlashesAction = {
  IMPLEMENTATION_SPECIFIC_DEFAULT: 0,
  KEEP_UNCHANGED: 1,
  REJECT_REQUEST: 2,
  UNESCAPE_AND_REDIRECT: 3,
  UNESCAPE_AND_FORWARD: 4
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientSampling: (f = msg.getClientSampling()) && proto.envoy.type.v3.Percent.toObject(includeInstance, f),
    randomSampling: (f = msg.getRandomSampling()) && proto.envoy.type.v3.Percent.toObject(includeInstance, f),
    overallSampling: (f = msg.getOverallSampling()) && proto.envoy.type.v3.Percent.toObject(includeInstance, f),
    verbose: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    maxPathTagLength: (f = msg.getMaxPathTagLength()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    customTagsList: jspb.Message.toObjectList(msg.getCustomTagsList(),
    proto.envoy.type.tracing.v3.CustomTag.toObject, includeInstance),
    provider: (f = msg.getProvider()) && proto.envoy.config.trace.v3.Tracing.Http.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing;
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.envoy.type.v3.Percent;
      reader.readMessage(value,proto.envoy.type.v3.Percent.deserializeBinaryFromReader);
      msg.setClientSampling(value);
      break;
    case 4:
      var value = new proto.envoy.type.v3.Percent;
      reader.readMessage(value,proto.envoy.type.v3.Percent.deserializeBinaryFromReader);
      msg.setRandomSampling(value);
      break;
    case 5:
      var value = new proto.envoy.type.v3.Percent;
      reader.readMessage(value,proto.envoy.type.v3.Percent.deserializeBinaryFromReader);
      msg.setOverallSampling(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerbose(value);
      break;
    case 7:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxPathTagLength(value);
      break;
    case 8:
      var value = new proto.envoy.type.tracing.v3.CustomTag;
      reader.readMessage(value,proto.envoy.type.tracing.v3.CustomTag.deserializeBinaryFromReader);
      msg.addCustomTags(value);
      break;
    case 9:
      var value = new proto.envoy.config.trace.v3.Tracing.Http;
      reader.readMessage(value,proto.envoy.config.trace.v3.Tracing.Http.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientSampling();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.type.v3.Percent.serializeBinaryToWriter
    );
  }
  f = message.getRandomSampling();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.type.v3.Percent.serializeBinaryToWriter
    );
  }
  f = message.getOverallSampling();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.type.v3.Percent.serializeBinaryToWriter
    );
  }
  f = message.getVerbose();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getMaxPathTagLength();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getCustomTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.envoy.type.tracing.v3.CustomTag.serializeBinaryToWriter
    );
  }
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.config.trace.v3.Tracing.Http.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.OperationName = {
  INGRESS: 0,
  EGRESS: 1
};

/**
 * optional envoy.type.v3.Percent client_sampling = 3;
 * @return {?proto.envoy.type.v3.Percent}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.getClientSampling = function() {
  return /** @type{?proto.envoy.type.v3.Percent} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.v3.Percent, 3));
};


/**
 * @param {?proto.envoy.type.v3.Percent|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.setClientSampling = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.clearClientSampling = function() {
  return this.setClientSampling(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.hasClientSampling = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.type.v3.Percent random_sampling = 4;
 * @return {?proto.envoy.type.v3.Percent}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.getRandomSampling = function() {
  return /** @type{?proto.envoy.type.v3.Percent} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.v3.Percent, 4));
};


/**
 * @param {?proto.envoy.type.v3.Percent|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.setRandomSampling = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.clearRandomSampling = function() {
  return this.setRandomSampling(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.hasRandomSampling = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional envoy.type.v3.Percent overall_sampling = 5;
 * @return {?proto.envoy.type.v3.Percent}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.getOverallSampling = function() {
  return /** @type{?proto.envoy.type.v3.Percent} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.v3.Percent, 5));
};


/**
 * @param {?proto.envoy.type.v3.Percent|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.setOverallSampling = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.clearOverallSampling = function() {
  return this.setOverallSampling(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.hasOverallSampling = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool verbose = 6;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.getVerbose = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.setVerbose = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.UInt32Value max_path_tag_length = 7;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.getMaxPathTagLength = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 7));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.setMaxPathTagLength = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.clearMaxPathTagLength = function() {
  return this.setMaxPathTagLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.hasMaxPathTagLength = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated envoy.type.tracing.v3.CustomTag custom_tags = 8;
 * @return {!Array<!proto.envoy.type.tracing.v3.CustomTag>}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.getCustomTagsList = function() {
  return /** @type{!Array<!proto.envoy.type.tracing.v3.CustomTag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.type.tracing.v3.CustomTag, 8));
};


/**
 * @param {!Array<!proto.envoy.type.tracing.v3.CustomTag>} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.setCustomTagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.envoy.type.tracing.v3.CustomTag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.type.tracing.v3.CustomTag}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.addCustomTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.envoy.type.tracing.v3.CustomTag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.clearCustomTagsList = function() {
  return this.setCustomTagsList([]);
};


/**
 * optional envoy.config.trace.v3.Tracing.Http provider = 9;
 * @return {?proto.envoy.config.trace.v3.Tracing.Http}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.getProvider = function() {
  return /** @type{?proto.envoy.config.trace.v3.Tracing.Http} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.trace.v3.Tracing.Http, 9));
};


/**
 * @param {?proto.envoy.config.trace.v3.Tracing.Http|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    unixSockets: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    cidrRangesList: jspb.Message.toObjectList(msg.getCidrRangesList(),
    proto.envoy.config.core.v3.CidrRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig;
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnixSockets(value);
      break;
    case 2:
      var value = new proto.envoy.config.core.v3.CidrRange;
      reader.readMessage(value,proto.envoy.config.core.v3.CidrRange.deserializeBinaryFromReader);
      msg.addCidrRanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnixSockets();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCidrRangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.envoy.config.core.v3.CidrRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool unix_sockets = 1;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.prototype.getUnixSockets = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.prototype.setUnixSockets = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated envoy.config.core.v3.CidrRange cidr_ranges = 2;
 * @return {!Array<!proto.envoy.config.core.v3.CidrRange>}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.prototype.getCidrRangesList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.CidrRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.CidrRange, 2));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.CidrRange>} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.prototype.setCidrRangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.config.core.v3.CidrRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.CidrRange}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.prototype.addCidrRanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.config.core.v3.CidrRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig.prototype.clearCidrRangesList = function() {
  return this.setCidrRangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: (f = msg.getSubject()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f),
    cert: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    chain: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    dns: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    uri: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails;
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCert(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChain(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDns(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getCert();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getChain();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getDns();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getUri();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional google.protobuf.BoolValue subject = 1;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.getSubject = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 1));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool cert = 3;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.getCert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.setCert = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool chain = 6;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.getChain = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.setChain = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool dns = 4;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.getDns = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.setDns = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool uri = 5;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.getUri = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails.prototype.setUri = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    upgradeType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter.toObject, includeInstance),
    enabled: (f = msg.getEnabled()) && proto.google.protobuf.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig;
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpgradeType(value);
      break;
    case 2:
      var value = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter;
      reader.readMessage(value,proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    case 3:
      var value = new proto.google.protobuf.BoolValue;
      reader.readMessage(value,proto.google.protobuf.BoolValue.deserializeBinaryFromReader);
      msg.setEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpgradeType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter.serializeBinaryToWriter
    );
  }
  f = message.getEnabled();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string upgrade_type = 1;
 * @return {string}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.getUpgradeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.setUpgradeType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated HttpFilter filters = 2;
 * @return {!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter>}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter, 2));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter>} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * optional google.protobuf.BoolValue enabled = 3;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.getEnabled = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 3));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.setEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.clearEnabled = function() {
  return this.setEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    forwardingTransformation: (f = msg.getForwardingTransformation()) && proto.envoy.type.http.v3.PathTransformation.toObject(includeInstance, f),
    httpFilterTransformation: (f = msg.getHttpFilterTransformation()) && proto.envoy.type.http.v3.PathTransformation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions;
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.type.http.v3.PathTransformation;
      reader.readMessage(value,proto.envoy.type.http.v3.PathTransformation.deserializeBinaryFromReader);
      msg.setForwardingTransformation(value);
      break;
    case 2:
      var value = new proto.envoy.type.http.v3.PathTransformation;
      reader.readMessage(value,proto.envoy.type.http.v3.PathTransformation.deserializeBinaryFromReader);
      msg.setHttpFilterTransformation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForwardingTransformation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.type.http.v3.PathTransformation.serializeBinaryToWriter
    );
  }
  f = message.getHttpFilterTransformation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.type.http.v3.PathTransformation.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.type.http.v3.PathTransformation forwarding_transformation = 1;
 * @return {?proto.envoy.type.http.v3.PathTransformation}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.getForwardingTransformation = function() {
  return /** @type{?proto.envoy.type.http.v3.PathTransformation} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.http.v3.PathTransformation, 1));
};


/**
 * @param {?proto.envoy.type.http.v3.PathTransformation|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.setForwardingTransformation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.clearForwardingTransformation = function() {
  return this.setForwardingTransformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.hasForwardingTransformation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.type.http.v3.PathTransformation http_filter_transformation = 2;
 * @return {?proto.envoy.type.http.v3.PathTransformation}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.getHttpFilterTransformation = function() {
  return /** @type{?proto.envoy.type.http.v3.PathTransformation} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.http.v3.PathTransformation, 2));
};


/**
 * @param {?proto.envoy.type.http.v3.PathTransformation|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.setHttpFilterTransformation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.clearHttpFilterTransformation = function() {
  return this.setHttpFilterTransformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions.prototype.hasHttpFilterTransformation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.ProxyNameCase = {
  PROXY_NAME_NOT_SET: 0,
  USE_NODE_ID: 5,
  LITERAL_PROXY_NAME: 6
};

/**
 * @return {proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.ProxyNameCase}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.getProxyNameCase = function() {
  return /** @type {proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.ProxyNameCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    removeDetails: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    removeConnectionTerminationDetails: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    removeResponseFlags: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    setRecommendedResponseCode: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    useNodeId: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    literalProxyName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig;
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemoveDetails(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemoveConnectionTerminationDetails(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemoveResponseFlags(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSetRecommendedResponseCode(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseNodeId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLiteralProxyName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoveDetails();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRemoveConnectionTerminationDetails();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRemoveResponseFlags();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSetRecommendedResponseCode();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bool remove_details = 1;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.getRemoveDetails = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.setRemoveDetails = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool remove_connection_termination_details = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.getRemoveConnectionTerminationDetails = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.setRemoveConnectionTerminationDetails = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool remove_response_flags = 3;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.getRemoveResponseFlags = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.setRemoveResponseFlags = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool set_recommended_response_code = 4;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.getSetRecommendedResponseCode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.setSetRecommendedResponseCode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool use_node_id = 5;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.getUseNodeId = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.setUseNodeId = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.clearUseNodeId = function() {
  return jspb.Message.setOneofField(this, 5, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.hasUseNodeId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string literal_proxy_name = 6;
 * @return {string}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.getLiteralProxyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.setLiteralProxyName = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.clearLiteralProxyName = function() {
  return jspb.Message.setOneofField(this, 6, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig.prototype.hasLiteralProxyName = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessLogFlushInterval: (f = msg.getAccessLogFlushInterval()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    flushAccessLogOnNewRequest: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    flushLogOnTunnelSuccessfullyEstablished: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions;
  return proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setAccessLogFlushInterval(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFlushAccessLogOnNewRequest(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFlushLogOnTunnelSuccessfullyEstablished(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessLogFlushInterval();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getFlushAccessLogOnNewRequest();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getFlushLogOnTunnelSuccessfullyEstablished();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration access_log_flush_interval = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.getAccessLogFlushInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.setAccessLogFlushInterval = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.clearAccessLogFlushInterval = function() {
  return this.setAccessLogFlushInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.hasAccessLogFlushInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool flush_access_log_on_new_request = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.getFlushAccessLogOnNewRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.setFlushAccessLogOnNewRequest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool flush_log_on_tunnel_successfully_established = 3;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.getFlushLogOnTunnelSuccessfullyEstablished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions.prototype.setFlushLogOnTunnelSuccessfullyEstablished = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional CodecType codec_type = 1;
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.CodecType}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getCodecType = function() {
  return /** @type {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.CodecType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.CodecType} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setCodecType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string stat_prefix = 2;
 * @return {string}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setStatPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Rds rds = 3;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getRds = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds, 3));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.Rds|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setRds = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearRds = function() {
  return this.setRds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasRds = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.config.route.v3.RouteConfiguration route_config = 4;
 * @return {?proto.envoy.config.route.v3.RouteConfiguration}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getRouteConfig = function() {
  return /** @type{?proto.envoy.config.route.v3.RouteConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.route.v3.RouteConfiguration, 4));
};


/**
 * @param {?proto.envoy.config.route.v3.RouteConfiguration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setRouteConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearRouteConfig = function() {
  return this.setRouteConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasRouteConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ScopedRoutes scoped_routes = 31;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getScopedRoutes = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes, 31));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setScopedRoutes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 31, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearScopedRoutes = function() {
  return this.setScopedRoutes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasScopedRoutes = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * repeated HttpFilter http_filters = 5;
 * @return {!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter>}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getHttpFiltersList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter, 5));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter>} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setHttpFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.addHttpFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearHttpFiltersList = function() {
  return this.setHttpFiltersList([]);
};


/**
 * optional google.protobuf.BoolValue add_user_agent = 6;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getAddUserAgent = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 6));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setAddUserAgent = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearAddUserAgent = function() {
  return this.setAddUserAgent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasAddUserAgent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Tracing tracing = 7;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getTracing = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing, 7));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setTracing = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearTracing = function() {
  return this.setTracing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasTracing = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional envoy.config.core.v3.HttpProtocolOptions common_http_protocol_options = 35;
 * @return {?proto.envoy.config.core.v3.HttpProtocolOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getCommonHttpProtocolOptions = function() {
  return /** @type{?proto.envoy.config.core.v3.HttpProtocolOptions} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.HttpProtocolOptions, 35));
};


/**
 * @param {?proto.envoy.config.core.v3.HttpProtocolOptions|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setCommonHttpProtocolOptions = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearCommonHttpProtocolOptions = function() {
  return this.setCommonHttpProtocolOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasCommonHttpProtocolOptions = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional envoy.config.core.v3.Http1ProtocolOptions http_protocol_options = 8;
 * @return {?proto.envoy.config.core.v3.Http1ProtocolOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getHttpProtocolOptions = function() {
  return /** @type{?proto.envoy.config.core.v3.Http1ProtocolOptions} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.Http1ProtocolOptions, 8));
};


/**
 * @param {?proto.envoy.config.core.v3.Http1ProtocolOptions|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setHttpProtocolOptions = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearHttpProtocolOptions = function() {
  return this.setHttpProtocolOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasHttpProtocolOptions = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional envoy.config.core.v3.Http2ProtocolOptions http2_protocol_options = 9;
 * @return {?proto.envoy.config.core.v3.Http2ProtocolOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getHttp2ProtocolOptions = function() {
  return /** @type{?proto.envoy.config.core.v3.Http2ProtocolOptions} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.Http2ProtocolOptions, 9));
};


/**
 * @param {?proto.envoy.config.core.v3.Http2ProtocolOptions|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setHttp2ProtocolOptions = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearHttp2ProtocolOptions = function() {
  return this.setHttp2ProtocolOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasHttp2ProtocolOptions = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional envoy.config.core.v3.Http3ProtocolOptions http3_protocol_options = 44;
 * @return {?proto.envoy.config.core.v3.Http3ProtocolOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getHttp3ProtocolOptions = function() {
  return /** @type{?proto.envoy.config.core.v3.Http3ProtocolOptions} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.Http3ProtocolOptions, 44));
};


/**
 * @param {?proto.envoy.config.core.v3.Http3ProtocolOptions|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setHttp3ProtocolOptions = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearHttp3ProtocolOptions = function() {
  return this.setHttp3ProtocolOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasHttp3ProtocolOptions = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional string server_name = 10;
 * @return {string}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getServerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setServerName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional ServerHeaderTransformation server_header_transformation = 34;
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ServerHeaderTransformation}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getServerHeaderTransformation = function() {
  return /** @type {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ServerHeaderTransformation} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ServerHeaderTransformation} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setServerHeaderTransformation = function(value) {
  return jspb.Message.setProto3EnumField(this, 34, value);
};


/**
 * optional envoy.config.core.v3.SchemeHeaderTransformation scheme_header_transformation = 48;
 * @return {?proto.envoy.config.core.v3.SchemeHeaderTransformation}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getSchemeHeaderTransformation = function() {
  return /** @type{?proto.envoy.config.core.v3.SchemeHeaderTransformation} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.SchemeHeaderTransformation, 48));
};


/**
 * @param {?proto.envoy.config.core.v3.SchemeHeaderTransformation|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setSchemeHeaderTransformation = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearSchemeHeaderTransformation = function() {
  return this.setSchemeHeaderTransformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasSchemeHeaderTransformation = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional google.protobuf.UInt32Value max_request_headers_kb = 29;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getMaxRequestHeadersKb = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 29));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setMaxRequestHeadersKb = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearMaxRequestHeadersKb = function() {
  return this.setMaxRequestHeadersKb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasMaxRequestHeadersKb = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional google.protobuf.Duration stream_idle_timeout = 24;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getStreamIdleTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 24));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setStreamIdleTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearStreamIdleTimeout = function() {
  return this.setStreamIdleTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasStreamIdleTimeout = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional google.protobuf.Duration request_timeout = 28;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getRequestTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 28));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setRequestTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearRequestTimeout = function() {
  return this.setRequestTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasRequestTimeout = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional google.protobuf.Duration request_headers_timeout = 41;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getRequestHeadersTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 41));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setRequestHeadersTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearRequestHeadersTimeout = function() {
  return this.setRequestHeadersTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasRequestHeadersTimeout = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional google.protobuf.Duration drain_timeout = 12;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getDrainTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 12));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setDrainTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearDrainTimeout = function() {
  return this.setDrainTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasDrainTimeout = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Duration delayed_close_timeout = 26;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getDelayedCloseTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 26));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setDelayedCloseTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearDelayedCloseTimeout = function() {
  return this.setDelayedCloseTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasDelayedCloseTimeout = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * repeated envoy.config.accesslog.v3.AccessLog access_log = 13;
 * @return {!Array<!proto.envoy.config.accesslog.v3.AccessLog>}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getAccessLogList = function() {
  return /** @type{!Array<!proto.envoy.config.accesslog.v3.AccessLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.accesslog.v3.AccessLog, 13));
};


/**
 * @param {!Array<!proto.envoy.config.accesslog.v3.AccessLog>} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setAccessLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.envoy.config.accesslog.v3.AccessLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.accesslog.v3.AccessLog}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.addAccessLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.envoy.config.accesslog.v3.AccessLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearAccessLogList = function() {
  return this.setAccessLogList([]);
};


/**
 * optional google.protobuf.Duration access_log_flush_interval = 54;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getAccessLogFlushInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 54));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setAccessLogFlushInterval = function(value) {
  return jspb.Message.setWrapperField(this, 54, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearAccessLogFlushInterval = function() {
  return this.setAccessLogFlushInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasAccessLogFlushInterval = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional bool flush_access_log_on_new_request = 55;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getFlushAccessLogOnNewRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 55, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setFlushAccessLogOnNewRequest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 55, value);
};


/**
 * optional HcmAccessLogOptions access_log_options = 56;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getAccessLogOptions = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions, 56));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.HcmAccessLogOptions|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setAccessLogOptions = function(value) {
  return jspb.Message.setWrapperField(this, 56, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearAccessLogOptions = function() {
  return this.setAccessLogOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasAccessLogOptions = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional google.protobuf.BoolValue use_remote_address = 14;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getUseRemoteAddress = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 14));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setUseRemoteAddress = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearUseRemoteAddress = function() {
  return this.setUseRemoteAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasUseRemoteAddress = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 xff_num_trusted_hops = 19;
 * @return {number}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getXffNumTrustedHops = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setXffNumTrustedHops = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * repeated envoy.config.core.v3.TypedExtensionConfig original_ip_detection_extensions = 46;
 * @return {!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getOriginalIpDetectionExtensionsList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 46));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setOriginalIpDetectionExtensionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 46, value);
};


/**
 * @param {!proto.envoy.config.core.v3.TypedExtensionConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.addOriginalIpDetectionExtensions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 46, opt_value, proto.envoy.config.core.v3.TypedExtensionConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearOriginalIpDetectionExtensionsList = function() {
  return this.setOriginalIpDetectionExtensionsList([]);
};


/**
 * repeated envoy.config.core.v3.TypedExtensionConfig early_header_mutation_extensions = 52;
 * @return {!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getEarlyHeaderMutationExtensionsList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 52));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.TypedExtensionConfig>} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setEarlyHeaderMutationExtensionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 52, value);
};


/**
 * @param {!proto.envoy.config.core.v3.TypedExtensionConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.addEarlyHeaderMutationExtensions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 52, opt_value, proto.envoy.config.core.v3.TypedExtensionConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearEarlyHeaderMutationExtensionsList = function() {
  return this.setEarlyHeaderMutationExtensionsList([]);
};


/**
 * optional InternalAddressConfig internal_address_config = 25;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getInternalAddressConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig, 25));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setInternalAddressConfig = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearInternalAddressConfig = function() {
  return this.setInternalAddressConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasInternalAddressConfig = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bool skip_xff_append = 21;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getSkipXffAppend = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setSkipXffAppend = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional string via = 22;
 * @return {string}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getVia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setVia = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional google.protobuf.BoolValue generate_request_id = 15;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getGenerateRequestId = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 15));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setGenerateRequestId = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearGenerateRequestId = function() {
  return this.setGenerateRequestId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasGenerateRequestId = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool preserve_external_request_id = 32;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getPreserveExternalRequestId = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setPreserveExternalRequestId = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};


/**
 * optional bool always_set_request_id_in_response = 37;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getAlwaysSetRequestIdInResponse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 37, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setAlwaysSetRequestIdInResponse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 37, value);
};


/**
 * optional ForwardClientCertDetails forward_client_cert_details = 16;
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ForwardClientCertDetails}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getForwardClientCertDetails = function() {
  return /** @type {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ForwardClientCertDetails} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ForwardClientCertDetails} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setForwardClientCertDetails = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional SetCurrentClientCertDetails set_current_client_cert_details = 17;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getSetCurrentClientCertDetails = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails, 17));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setSetCurrentClientCertDetails = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearSetCurrentClientCertDetails = function() {
  return this.setSetCurrentClientCertDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasSetCurrentClientCertDetails = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool proxy_100_continue = 18;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getProxy100Continue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setProxy100Continue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool represent_ipv4_remote_address_as_ipv4_mapped_ipv6 = 20;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getRepresentIpv4RemoteAddressAsIpv4MappedIpv6 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setRepresentIpv4RemoteAddressAsIpv4MappedIpv6 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * repeated UpgradeConfig upgrade_configs = 23;
 * @return {!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig>}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getUpgradeConfigsList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig, 23));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig>} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setUpgradeConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 23, value);
};


/**
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.addUpgradeConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 23, opt_value, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearUpgradeConfigsList = function() {
  return this.setUpgradeConfigsList([]);
};


/**
 * optional google.protobuf.BoolValue normalize_path = 30;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getNormalizePath = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 30));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setNormalizePath = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearNormalizePath = function() {
  return this.setNormalizePath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasNormalizePath = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional bool merge_slashes = 33;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getMergeSlashes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 33, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setMergeSlashes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 33, value);
};


/**
 * optional PathWithEscapedSlashesAction path_with_escaped_slashes_action = 45;
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathWithEscapedSlashesAction}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getPathWithEscapedSlashesAction = function() {
  return /** @type {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathWithEscapedSlashesAction} */ (jspb.Message.getFieldWithDefault(this, 45, 0));
};


/**
 * @param {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathWithEscapedSlashesAction} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setPathWithEscapedSlashesAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 45, value);
};


/**
 * optional RequestIDExtension request_id_extension = 36;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getRequestIdExtension = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension, 36));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setRequestIdExtension = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearRequestIdExtension = function() {
  return this.setRequestIdExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasRequestIdExtension = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional LocalReplyConfig local_reply_config = 38;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getLocalReplyConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig, 38));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setLocalReplyConfig = function(value) {
  return jspb.Message.setWrapperField(this, 38, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearLocalReplyConfig = function() {
  return this.setLocalReplyConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasLocalReplyConfig = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional bool strip_matching_host_port = 39;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getStripMatchingHostPort = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 39, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setStripMatchingHostPort = function(value) {
  return jspb.Message.setProto3BooleanField(this, 39, value);
};


/**
 * optional bool strip_any_host_port = 42;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getStripAnyHostPort = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 42, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setStripAnyHostPort = function(value) {
  return jspb.Message.setOneofField(this, 42, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearStripAnyHostPort = function() {
  return jspb.Message.setOneofField(this, 42, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasStripAnyHostPort = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional google.protobuf.BoolValue stream_error_on_invalid_http_message = 40;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getStreamErrorOnInvalidHttpMessage = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 40));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setStreamErrorOnInvalidHttpMessage = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearStreamErrorOnInvalidHttpMessage = function() {
  return this.setStreamErrorOnInvalidHttpMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasStreamErrorOnInvalidHttpMessage = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional PathNormalizationOptions path_normalization_options = 43;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getPathNormalizationOptions = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions, 43));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setPathNormalizationOptions = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearPathNormalizationOptions = function() {
  return this.setPathNormalizationOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasPathNormalizationOptions = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional bool strip_trailing_host_dot = 47;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getStripTrailingHostDot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 47, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setStripTrailingHostDot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 47, value);
};


/**
 * optional ProxyStatusConfig proxy_status_config = 49;
 * @return {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getProxyStatusConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig, 49));
};


/**
 * @param {?proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setProxyStatusConfig = function(value) {
  return jspb.Message.setWrapperField(this, 49, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearProxyStatusConfig = function() {
  return this.setProxyStatusConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasProxyStatusConfig = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional envoy.config.core.v3.TypedExtensionConfig typed_header_validation_config = 50;
 * @return {?proto.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getTypedHeaderValidationConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.TypedExtensionConfig, 50));
};


/**
 * @param {?proto.envoy.config.core.v3.TypedExtensionConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setTypedHeaderValidationConfig = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearTypedHeaderValidationConfig = function() {
  return this.setTypedHeaderValidationConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasTypedHeaderValidationConfig = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional bool append_x_forwarded_port = 51;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getAppendXForwardedPort = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 51, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setAppendXForwardedPort = function(value) {
  return jspb.Message.setProto3BooleanField(this, 51, value);
};


/**
 * optional google.protobuf.BoolValue add_proxy_protocol_connection_state = 53;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.getAddProxyProtocolConnectionState = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.BoolValue, 53));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
*/
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.setAddProxyProtocolConnectionState = function(value) {
  return jspb.Message.setWrapperField(this, 53, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager} returns this
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.clearAddProxyProtocolConnectionState = function() {
  return this.setAddProxyProtocolConnectionState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.prototype.hasAddProxyProtocolConnectionState = function() {
  return jspb.Message.getField(this, 53) != null;
};


