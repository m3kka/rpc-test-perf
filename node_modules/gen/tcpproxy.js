// source: envoy/extensions/filters/network/tcp_proxy/v3/tcp_proxy.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy');
goog.provide('proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.ClusterSpecifierCase');
goog.provide('proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand');
goog.provide('proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions');
goog.provide('proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig');
goog.provide('proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster');
goog.provide('proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.accesslog.v3.AccessLog');
goog.require('proto.envoy.config.core.v3.ConfigSource');
goog.require('proto.envoy.config.core.v3.HeaderValueOption');
goog.require('proto.envoy.config.core.v3.Metadata');
goog.require('proto.envoy.type.v3.HashPolicy');
goog.require('proto.google.protobuf.Duration');
goog.require('proto.google.protobuf.UInt32Value');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.repeatedFields_, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.displayName = 'proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.displayName = 'proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.displayName = 'proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.displayName = 'proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.displayName = 'proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.displayName = 'proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.repeatedFields_ = [5,11];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.oneofGroups_ = [[2,10]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.ClusterSpecifierCase = {
  CLUSTER_SPECIFIER_NOT_SET: 0,
  CLUSTER: 2,
  WEIGHTED_CLUSTERS: 10
};

/**
 * @return {proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.ClusterSpecifierCase}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getClusterSpecifierCase = function() {
  return /** @type {proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.ClusterSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    statPrefix: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cluster: jspb.Message.getFieldWithDefault(msg, 2, ""),
    weightedClusters: (f = msg.getWeightedClusters()) && proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.toObject(includeInstance, f),
    onDemand: (f = msg.getOnDemand()) && proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.toObject(includeInstance, f),
    metadataMatch: (f = msg.getMetadataMatch()) && proto.envoy.config.core.v3.Metadata.toObject(includeInstance, f),
    idleTimeout: (f = msg.getIdleTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    downstreamIdleTimeout: (f = msg.getDownstreamIdleTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    upstreamIdleTimeout: (f = msg.getUpstreamIdleTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    accessLogList: jspb.Message.toObjectList(msg.getAccessLogList(),
    proto.envoy.config.accesslog.v3.AccessLog.toObject, includeInstance),
    maxConnectAttempts: (f = msg.getMaxConnectAttempts()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
    hashPolicyList: jspb.Message.toObjectList(msg.getHashPolicyList(),
    proto.envoy.type.v3.HashPolicy.toObject, includeInstance),
    tunnelingConfig: (f = msg.getTunnelingConfig()) && proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.toObject(includeInstance, f),
    maxDownstreamConnectionDuration: (f = msg.getMaxDownstreamConnectionDuration()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    accessLogFlushInterval: (f = msg.getAccessLogFlushInterval()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    flushAccessLogOnConnected: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    accessLogOptions: (f = msg.getAccessLogOptions()) && proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy;
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCluster(value);
      break;
    case 10:
      var value = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster;
      reader.readMessage(value,proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.deserializeBinaryFromReader);
      msg.setWeightedClusters(value);
      break;
    case 14:
      var value = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand;
      reader.readMessage(value,proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.deserializeBinaryFromReader);
      msg.setOnDemand(value);
      break;
    case 9:
      var value = new proto.envoy.config.core.v3.Metadata;
      reader.readMessage(value,proto.envoy.config.core.v3.Metadata.deserializeBinaryFromReader);
      msg.setMetadataMatch(value);
      break;
    case 8:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setIdleTimeout(value);
      break;
    case 3:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setDownstreamIdleTimeout(value);
      break;
    case 4:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setUpstreamIdleTimeout(value);
      break;
    case 5:
      var value = new proto.envoy.config.accesslog.v3.AccessLog;
      reader.readMessage(value,proto.envoy.config.accesslog.v3.AccessLog.deserializeBinaryFromReader);
      msg.addAccessLog(value);
      break;
    case 7:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxConnectAttempts(value);
      break;
    case 11:
      var value = new proto.envoy.type.v3.HashPolicy;
      reader.readMessage(value,proto.envoy.type.v3.HashPolicy.deserializeBinaryFromReader);
      msg.addHashPolicy(value);
      break;
    case 12:
      var value = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig;
      reader.readMessage(value,proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.deserializeBinaryFromReader);
      msg.setTunnelingConfig(value);
      break;
    case 13:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setMaxDownstreamConnectionDuration(value);
      break;
    case 15:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setAccessLogFlushInterval(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFlushAccessLogOnConnected(value);
      break;
    case 17:
      var value = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions;
      reader.readMessage(value,proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.deserializeBinaryFromReader);
      msg.setAccessLogOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWeightedClusters();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.serializeBinaryToWriter
    );
  }
  f = message.getOnDemand();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMatch();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.envoy.config.core.v3.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getIdleTimeout();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getDownstreamIdleTimeout();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamIdleTimeout();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAccessLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.envoy.config.accesslog.v3.AccessLog.serializeBinaryToWriter
    );
  }
  f = message.getMaxConnectAttempts();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getHashPolicyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.envoy.type.v3.HashPolicy.serializeBinaryToWriter
    );
  }
  f = message.getTunnelingConfig();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.serializeBinaryToWriter
    );
  }
  f = message.getMaxDownstreamConnectionDuration();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAccessLogFlushInterval();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getFlushAccessLogOnConnected();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getAccessLogOptions();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.toObject = function(includeInstance, msg) {
  var f, obj = {
    clustersList: jspb.Message.toObjectList(msg.getClustersList(),
    proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster;
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight;
      reader.readMessage(value,proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.deserializeBinaryFromReader);
      msg.addClusters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClustersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    weight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    metadataMatch: (f = msg.getMetadataMatch()) && proto.envoy.config.core.v3.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight;
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    case 3:
      var value = new proto.envoy.config.core.v3.Metadata;
      reader.readMessage(value,proto.envoy.config.core.v3.Metadata.deserializeBinaryFromReader);
      msg.setMetadataMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMetadataMatch();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.core.v3.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 weight = 2;
 * @return {number}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional envoy.config.core.v3.Metadata metadata_match = 3;
 * @return {?proto.envoy.config.core.v3.Metadata}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.getMetadataMatch = function() {
  return /** @type{?proto.envoy.config.core.v3.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.Metadata, 3));
};


/**
 * @param {?proto.envoy.config.core.v3.Metadata|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.setMetadataMatch = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.clearMetadataMatch = function() {
  return this.setMetadataMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight.prototype.hasMetadataMatch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ClusterWeight clusters = 1;
 * @return {!Array<!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight>}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.prototype.getClustersList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight, 1));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight>} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.prototype.setClustersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.prototype.addClusters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.prototype.clearClustersList = function() {
  return this.setClustersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usePost: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    headersToAddList: jspb.Message.toObjectList(msg.getHeadersToAddList(),
    proto.envoy.config.core.v3.HeaderValueOption.toObject, includeInstance),
    propagateResponseHeaders: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    postPath: jspb.Message.getFieldWithDefault(msg, 5, ""),
    propagateResponseTrailers: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig;
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsePost(value);
      break;
    case 3:
      var value = new proto.envoy.config.core.v3.HeaderValueOption;
      reader.readMessage(value,proto.envoy.config.core.v3.HeaderValueOption.deserializeBinaryFromReader);
      msg.addHeadersToAdd(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPropagateResponseHeaders(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostPath(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPropagateResponseTrailers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsePost();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getHeadersToAddList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.envoy.config.core.v3.HeaderValueOption.serializeBinaryToWriter
    );
  }
  f = message.getPropagateResponseHeaders();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getPostPath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPropagateResponseTrailers();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string hostname = 1;
 * @return {string}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.setHostname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool use_post = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.getUsePost = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.setUsePost = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated envoy.config.core.v3.HeaderValueOption headers_to_add = 3;
 * @return {!Array<!proto.envoy.config.core.v3.HeaderValueOption>}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.getHeadersToAddList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.HeaderValueOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.core.v3.HeaderValueOption, 3));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.HeaderValueOption>} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.setHeadersToAddList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.envoy.config.core.v3.HeaderValueOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.HeaderValueOption}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.addHeadersToAdd = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.envoy.config.core.v3.HeaderValueOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.clearHeadersToAddList = function() {
  return this.setHeadersToAddList([]);
};


/**
 * optional bool propagate_response_headers = 4;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.getPropagateResponseHeaders = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.setPropagateResponseHeaders = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string post_path = 5;
 * @return {string}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.getPostPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.setPostPath = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool propagate_response_trailers = 6;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.getPropagateResponseTrailers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig.prototype.setPropagateResponseTrailers = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.toObject = function(includeInstance, msg) {
  var f, obj = {
    odcdsConfig: (f = msg.getOdcdsConfig()) && proto.envoy.config.core.v3.ConfigSource.toObject(includeInstance, f),
    resourcesLocator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timeout: (f = msg.getTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand;
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.core.v3.ConfigSource;
      reader.readMessage(value,proto.envoy.config.core.v3.ConfigSource.deserializeBinaryFromReader);
      msg.setOdcdsConfig(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourcesLocator(value);
      break;
    case 3:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOdcdsConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.core.v3.ConfigSource.serializeBinaryToWriter
    );
  }
  f = message.getResourcesLocator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimeout();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.config.core.v3.ConfigSource odcds_config = 1;
 * @return {?proto.envoy.config.core.v3.ConfigSource}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.getOdcdsConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.ConfigSource} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.ConfigSource, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.ConfigSource|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.setOdcdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.clearOdcdsConfig = function() {
  return this.setOdcdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.hasOdcdsConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string resources_locator = 2;
 * @return {string}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.getResourcesLocator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.setResourcesLocator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Duration timeout = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.getTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.setTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.clearTimeout = function() {
  return this.setTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessLogFlushInterval: (f = msg.getAccessLogFlushInterval()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    flushAccessLogOnConnected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions;
  return proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setAccessLogFlushInterval(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFlushAccessLogOnConnected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessLogFlushInterval();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getFlushAccessLogOnConnected();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration access_log_flush_interval = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.prototype.getAccessLogFlushInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.prototype.setAccessLogFlushInterval = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.prototype.clearAccessLogFlushInterval = function() {
  return this.setAccessLogFlushInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.prototype.hasAccessLogFlushInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool flush_access_log_on_connected = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.prototype.getFlushAccessLogOnConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions.prototype.setFlushAccessLogOnConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string stat_prefix = 1;
 * @return {string}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setStatPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cluster = 2;
 * @return {string}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setCluster = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearCluster = function() {
  return jspb.Message.setOneofField(this, 2, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasCluster = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WeightedCluster weighted_clusters = 10;
 * @return {?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getWeightedClusters = function() {
  return /** @type{?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster, 10));
};


/**
 * @param {?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setWeightedClusters = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearWeightedClusters = function() {
  return this.setWeightedClusters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasWeightedClusters = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional OnDemand on_demand = 14;
 * @return {?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getOnDemand = function() {
  return /** @type{?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand, 14));
};


/**
 * @param {?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setOnDemand = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearOnDemand = function() {
  return this.setOnDemand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasOnDemand = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional envoy.config.core.v3.Metadata metadata_match = 9;
 * @return {?proto.envoy.config.core.v3.Metadata}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getMetadataMatch = function() {
  return /** @type{?proto.envoy.config.core.v3.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.Metadata, 9));
};


/**
 * @param {?proto.envoy.config.core.v3.Metadata|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setMetadataMatch = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearMetadataMatch = function() {
  return this.setMetadataMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasMetadataMatch = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Duration idle_timeout = 8;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getIdleTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 8));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setIdleTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearIdleTimeout = function() {
  return this.setIdleTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasIdleTimeout = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Duration downstream_idle_timeout = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getDownstreamIdleTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setDownstreamIdleTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearDownstreamIdleTimeout = function() {
  return this.setDownstreamIdleTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasDownstreamIdleTimeout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Duration upstream_idle_timeout = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getUpstreamIdleTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setUpstreamIdleTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearUpstreamIdleTimeout = function() {
  return this.setUpstreamIdleTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasUpstreamIdleTimeout = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated envoy.config.accesslog.v3.AccessLog access_log = 5;
 * @return {!Array<!proto.envoy.config.accesslog.v3.AccessLog>}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getAccessLogList = function() {
  return /** @type{!Array<!proto.envoy.config.accesslog.v3.AccessLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.accesslog.v3.AccessLog, 5));
};


/**
 * @param {!Array<!proto.envoy.config.accesslog.v3.AccessLog>} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setAccessLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.envoy.config.accesslog.v3.AccessLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.accesslog.v3.AccessLog}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.addAccessLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.envoy.config.accesslog.v3.AccessLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearAccessLogList = function() {
  return this.setAccessLogList([]);
};


/**
 * optional google.protobuf.UInt32Value max_connect_attempts = 7;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getMaxConnectAttempts = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 7));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setMaxConnectAttempts = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearMaxConnectAttempts = function() {
  return this.setMaxConnectAttempts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasMaxConnectAttempts = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated envoy.type.v3.HashPolicy hash_policy = 11;
 * @return {!Array<!proto.envoy.type.v3.HashPolicy>}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getHashPolicyList = function() {
  return /** @type{!Array<!proto.envoy.type.v3.HashPolicy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.type.v3.HashPolicy, 11));
};


/**
 * @param {!Array<!proto.envoy.type.v3.HashPolicy>} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setHashPolicyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.envoy.type.v3.HashPolicy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.type.v3.HashPolicy}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.addHashPolicy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.envoy.type.v3.HashPolicy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearHashPolicyList = function() {
  return this.setHashPolicyList([]);
};


/**
 * optional TunnelingConfig tunneling_config = 12;
 * @return {?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getTunnelingConfig = function() {
  return /** @type{?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig, 12));
};


/**
 * @param {?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setTunnelingConfig = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearTunnelingConfig = function() {
  return this.setTunnelingConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasTunnelingConfig = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Duration max_downstream_connection_duration = 13;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getMaxDownstreamConnectionDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 13));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setMaxDownstreamConnectionDuration = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearMaxDownstreamConnectionDuration = function() {
  return this.setMaxDownstreamConnectionDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasMaxDownstreamConnectionDuration = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Duration access_log_flush_interval = 15;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getAccessLogFlushInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 15));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setAccessLogFlushInterval = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearAccessLogFlushInterval = function() {
  return this.setAccessLogFlushInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasAccessLogFlushInterval = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool flush_access_log_on_connected = 16;
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getFlushAccessLogOnConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setFlushAccessLogOnConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional TcpAccessLogOptions access_log_options = 17;
 * @return {?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.getAccessLogOptions = function() {
  return /** @type{?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions, 17));
};


/**
 * @param {?proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TcpAccessLogOptions|undefined} value
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
*/
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.setAccessLogOptions = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy} returns this
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.clearAccessLogOptions = function() {
  return this.setAccessLogOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.prototype.hasAccessLogOptions = function() {
  return jspb.Message.getField(this, 17) != null;
};


