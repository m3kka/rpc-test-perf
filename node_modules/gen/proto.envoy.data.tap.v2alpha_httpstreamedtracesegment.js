// source: envoy/data/tap/v2alpha/http.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment');
goog.provide('proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.MessagePieceCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.api.v2.core.HeaderMap');
goog.require('proto.envoy.data.tap.v2alpha.Body');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_);
};
goog.inherits(proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.displayName = 'proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_ = [[2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.MessagePieceCase = {
  MESSAGE_PIECE_NOT_SET: 0,
  REQUEST_HEADERS: 2,
  REQUEST_BODY_CHUNK: 3,
  REQUEST_TRAILERS: 4,
  RESPONSE_HEADERS: 5,
  RESPONSE_BODY_CHUNK: 6,
  RESPONSE_TRAILERS: 7
};

/**
 * @return {proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.MessagePieceCase}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.getMessagePieceCase = function() {
  return /** @type {proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.MessagePieceCase} */(jspb.Message.computeOneofCase(this, proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.toObject = function(includeInstance, msg) {
  var f, obj = {
    traceId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    requestHeaders: (f = msg.getRequestHeaders()) && proto.envoy.api.v2.core.HeaderMap.toObject(includeInstance, f),
    requestBodyChunk: (f = msg.getRequestBodyChunk()) && proto.envoy.data.tap.v2alpha.Body.toObject(includeInstance, f),
    requestTrailers: (f = msg.getRequestTrailers()) && proto.envoy.api.v2.core.HeaderMap.toObject(includeInstance, f),
    responseHeaders: (f = msg.getResponseHeaders()) && proto.envoy.api.v2.core.HeaderMap.toObject(includeInstance, f),
    responseBodyChunk: (f = msg.getResponseBodyChunk()) && proto.envoy.data.tap.v2alpha.Body.toObject(includeInstance, f),
    responseTrailers: (f = msg.getResponseTrailers()) && proto.envoy.api.v2.core.HeaderMap.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment;
  return proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTraceId(value);
      break;
    case 2:
      var value = new proto.envoy.api.v2.core.HeaderMap;
      reader.readMessage(value,proto.envoy.api.v2.core.HeaderMap.deserializeBinaryFromReader);
      msg.setRequestHeaders(value);
      break;
    case 3:
      var value = new proto.envoy.data.tap.v2alpha.Body;
      reader.readMessage(value,proto.envoy.data.tap.v2alpha.Body.deserializeBinaryFromReader);
      msg.setRequestBodyChunk(value);
      break;
    case 4:
      var value = new proto.envoy.api.v2.core.HeaderMap;
      reader.readMessage(value,proto.envoy.api.v2.core.HeaderMap.deserializeBinaryFromReader);
      msg.setRequestTrailers(value);
      break;
    case 5:
      var value = new proto.envoy.api.v2.core.HeaderMap;
      reader.readMessage(value,proto.envoy.api.v2.core.HeaderMap.deserializeBinaryFromReader);
      msg.setResponseHeaders(value);
      break;
    case 6:
      var value = new proto.envoy.data.tap.v2alpha.Body;
      reader.readMessage(value,proto.envoy.data.tap.v2alpha.Body.deserializeBinaryFromReader);
      msg.setResponseBodyChunk(value);
      break;
    case 7:
      var value = new proto.envoy.api.v2.core.HeaderMap;
      reader.readMessage(value,proto.envoy.api.v2.core.HeaderMap.deserializeBinaryFromReader);
      msg.setResponseTrailers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraceId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getRequestHeaders();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.api.v2.core.HeaderMap.serializeBinaryToWriter
    );
  }
  f = message.getRequestBodyChunk();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.data.tap.v2alpha.Body.serializeBinaryToWriter
    );
  }
  f = message.getRequestTrailers();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.api.v2.core.HeaderMap.serializeBinaryToWriter
    );
  }
  f = message.getResponseHeaders();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.api.v2.core.HeaderMap.serializeBinaryToWriter
    );
  }
  f = message.getResponseBodyChunk();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.data.tap.v2alpha.Body.serializeBinaryToWriter
    );
  }
  f = message.getResponseTrailers();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.api.v2.core.HeaderMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 trace_id = 1;
 * @return {number}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.getTraceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.setTraceId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional envoy.api.v2.core.HeaderMap request_headers = 2;
 * @return {?proto.envoy.api.v2.core.HeaderMap}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.getRequestHeaders = function() {
  return /** @type{?proto.envoy.api.v2.core.HeaderMap} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.HeaderMap, 2));
};


/**
 * @param {?proto.envoy.api.v2.core.HeaderMap|undefined} value
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
*/
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.setRequestHeaders = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.clearRequestHeaders = function() {
  return this.setRequestHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.hasRequestHeaders = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Body request_body_chunk = 3;
 * @return {?proto.envoy.data.tap.v2alpha.Body}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.getRequestBodyChunk = function() {
  return /** @type{?proto.envoy.data.tap.v2alpha.Body} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.tap.v2alpha.Body, 3));
};


/**
 * @param {?proto.envoy.data.tap.v2alpha.Body|undefined} value
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
*/
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.setRequestBodyChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.clearRequestBodyChunk = function() {
  return this.setRequestBodyChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.hasRequestBodyChunk = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.api.v2.core.HeaderMap request_trailers = 4;
 * @return {?proto.envoy.api.v2.core.HeaderMap}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.getRequestTrailers = function() {
  return /** @type{?proto.envoy.api.v2.core.HeaderMap} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.HeaderMap, 4));
};


/**
 * @param {?proto.envoy.api.v2.core.HeaderMap|undefined} value
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
*/
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.setRequestTrailers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.clearRequestTrailers = function() {
  return this.setRequestTrailers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.hasRequestTrailers = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional envoy.api.v2.core.HeaderMap response_headers = 5;
 * @return {?proto.envoy.api.v2.core.HeaderMap}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.getResponseHeaders = function() {
  return /** @type{?proto.envoy.api.v2.core.HeaderMap} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.HeaderMap, 5));
};


/**
 * @param {?proto.envoy.api.v2.core.HeaderMap|undefined} value
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
*/
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.setResponseHeaders = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.clearResponseHeaders = function() {
  return this.setResponseHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.hasResponseHeaders = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Body response_body_chunk = 6;
 * @return {?proto.envoy.data.tap.v2alpha.Body}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.getResponseBodyChunk = function() {
  return /** @type{?proto.envoy.data.tap.v2alpha.Body} */ (
    jspb.Message.getWrapperField(this, proto.envoy.data.tap.v2alpha.Body, 6));
};


/**
 * @param {?proto.envoy.data.tap.v2alpha.Body|undefined} value
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
*/
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.setResponseBodyChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.clearResponseBodyChunk = function() {
  return this.setResponseBodyChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.hasResponseBodyChunk = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional envoy.api.v2.core.HeaderMap response_trailers = 7;
 * @return {?proto.envoy.api.v2.core.HeaderMap}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.getResponseTrailers = function() {
  return /** @type{?proto.envoy.api.v2.core.HeaderMap} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.core.HeaderMap, 7));
};


/**
 * @param {?proto.envoy.api.v2.core.HeaderMap|undefined} value
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
*/
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.setResponseTrailers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment} returns this
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.clearResponseTrailers = function() {
  return this.setResponseTrailers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.data.tap.v2alpha.HttpStreamedTraceSegment.prototype.hasResponseTrailers = function() {
  return jspb.Message.getField(this, 7) != null;
};


