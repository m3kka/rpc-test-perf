// source: envoy/extensions/filters/udp/udp_proxy/v3/udp_proxy.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig');
goog.provide('proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy');
goog.provide('proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.PolicySpecifierCase');
goog.provide('proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.RouteSpecifierCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.envoy.config.accesslog.v3.AccessLog');
goog.require('proto.envoy.config.core.v3.UdpSocketConfig');
goog.require('proto.google.protobuf.Duration');
goog.require('proto.xds.type.matcher.v3.Matcher');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.repeatedFields_, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.displayName = 'proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.displayName = 'proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.repeatedFields_ = [5,8,10];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.oneofGroups_ = [[2,9]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.RouteSpecifierCase = {
  ROUTE_SPECIFIER_NOT_SET: 0,
  CLUSTER: 2,
  MATCHER: 9
};

/**
 * @return {proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.RouteSpecifierCase}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getRouteSpecifierCase = function() {
  return /** @type {proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.RouteSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    statPrefix: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cluster: jspb.Message.getFieldWithDefault(msg, 2, ""),
    matcher: (f = msg.getMatcher()) && proto.xds.type.matcher.v3.Matcher.toObject(includeInstance, f),
    idleTimeout: (f = msg.getIdleTimeout()) && proto.google.protobuf.Duration.toObject(includeInstance, f),
    useOriginalSrcIp: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    hashPoliciesList: jspb.Message.toObjectList(msg.getHashPoliciesList(),
    proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.toObject, includeInstance),
    upstreamSocketConfig: (f = msg.getUpstreamSocketConfig()) && proto.envoy.config.core.v3.UdpSocketConfig.toObject(includeInstance, f),
    usePerPacketLoadBalancing: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    accessLogList: jspb.Message.toObjectList(msg.getAccessLogList(),
    proto.envoy.config.accesslog.v3.AccessLog.toObject, includeInstance),
    proxyAccessLogList: jspb.Message.toObjectList(msg.getProxyAccessLogList(),
    proto.envoy.config.accesslog.v3.AccessLog.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig;
  return proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCluster(value);
      break;
    case 9:
      var value = new proto.xds.type.matcher.v3.Matcher;
      reader.readMessage(value,proto.xds.type.matcher.v3.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 3:
      var value = new proto.google.protobuf.Duration;
      reader.readMessage(value,proto.google.protobuf.Duration.deserializeBinaryFromReader);
      msg.setIdleTimeout(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseOriginalSrcIp(value);
      break;
    case 5:
      var value = new proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy;
      reader.readMessage(value,proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.deserializeBinaryFromReader);
      msg.addHashPolicies(value);
      break;
    case 6:
      var value = new proto.envoy.config.core.v3.UdpSocketConfig;
      reader.readMessage(value,proto.envoy.config.core.v3.UdpSocketConfig.deserializeBinaryFromReader);
      msg.setUpstreamSocketConfig(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsePerPacketLoadBalancing(value);
      break;
    case 8:
      var value = new proto.envoy.config.accesslog.v3.AccessLog;
      reader.readMessage(value,proto.envoy.config.accesslog.v3.AccessLog.deserializeBinaryFromReader);
      msg.addAccessLog(value);
      break;
    case 10:
      var value = new proto.envoy.config.accesslog.v3.AccessLog;
      reader.readMessage(value,proto.envoy.config.accesslog.v3.AccessLog.deserializeBinaryFromReader);
      msg.addProxyAccessLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.xds.type.matcher.v3.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getIdleTimeout();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.Duration.serializeBinaryToWriter
    );
  }
  f = message.getUseOriginalSrcIp();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getHashPoliciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamSocketConfig();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.config.core.v3.UdpSocketConfig.serializeBinaryToWriter
    );
  }
  f = message.getUsePerPacketLoadBalancing();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getAccessLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.envoy.config.accesslog.v3.AccessLog.serializeBinaryToWriter
    );
  }
  f = message.getProxyAccessLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.envoy.config.accesslog.v3.AccessLog.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.PolicySpecifierCase = {
  POLICY_SPECIFIER_NOT_SET: 0,
  SOURCE_IP: 1,
  KEY: 2
};

/**
 * @return {proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.PolicySpecifierCase}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.getPolicySpecifierCase = function() {
  return /** @type {proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.PolicySpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceIp: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    key: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy;
  return proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSourceIp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool source_ip = 1;
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.getSourceIp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.setSourceIp = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.clearSourceIp = function() {
  return jspb.Message.setOneofField(this, 1, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.hasSourceIp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.setKey = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.clearKey = function() {
  return jspb.Message.setOneofField(this, 2, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy.prototype.hasKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string stat_prefix = 1;
 * @return {string}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setStatPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cluster = 2;
 * @return {string}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setCluster = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.clearCluster = function() {
  return jspb.Message.setOneofField(this, 2, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.hasCluster = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional xds.type.matcher.v3.Matcher matcher = 9;
 * @return {?proto.xds.type.matcher.v3.Matcher}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getMatcher = function() {
  return /** @type{?proto.xds.type.matcher.v3.Matcher} */ (
    jspb.Message.getWrapperField(this, proto.xds.type.matcher.v3.Matcher, 9));
};


/**
 * @param {?proto.xds.type.matcher.v3.Matcher|undefined} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
*/
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setMatcher = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.clearMatcher = function() {
  return this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Duration idle_timeout = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getIdleTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
*/
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setIdleTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.clearIdleTimeout = function() {
  return this.setIdleTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.hasIdleTimeout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool use_original_src_ip = 4;
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getUseOriginalSrcIp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setUseOriginalSrcIp = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated HashPolicy hash_policies = 5;
 * @return {!Array<!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy>}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getHashPoliciesList = function() {
  return /** @type{!Array<!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy, 5));
};


/**
 * @param {!Array<!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy>} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
*/
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setHashPoliciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.addHashPolicies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.clearHashPoliciesList = function() {
  return this.setHashPoliciesList([]);
};


/**
 * optional envoy.config.core.v3.UdpSocketConfig upstream_socket_config = 6;
 * @return {?proto.envoy.config.core.v3.UdpSocketConfig}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getUpstreamSocketConfig = function() {
  return /** @type{?proto.envoy.config.core.v3.UdpSocketConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.core.v3.UdpSocketConfig, 6));
};


/**
 * @param {?proto.envoy.config.core.v3.UdpSocketConfig|undefined} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
*/
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setUpstreamSocketConfig = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.clearUpstreamSocketConfig = function() {
  return this.setUpstreamSocketConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.hasUpstreamSocketConfig = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool use_per_packet_load_balancing = 7;
 * @return {boolean}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getUsePerPacketLoadBalancing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setUsePerPacketLoadBalancing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * repeated envoy.config.accesslog.v3.AccessLog access_log = 8;
 * @return {!Array<!proto.envoy.config.accesslog.v3.AccessLog>}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getAccessLogList = function() {
  return /** @type{!Array<!proto.envoy.config.accesslog.v3.AccessLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.accesslog.v3.AccessLog, 8));
};


/**
 * @param {!Array<!proto.envoy.config.accesslog.v3.AccessLog>} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
*/
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setAccessLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.envoy.config.accesslog.v3.AccessLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.accesslog.v3.AccessLog}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.addAccessLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.envoy.config.accesslog.v3.AccessLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.clearAccessLogList = function() {
  return this.setAccessLogList([]);
};


/**
 * repeated envoy.config.accesslog.v3.AccessLog proxy_access_log = 10;
 * @return {!Array<!proto.envoy.config.accesslog.v3.AccessLog>}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.getProxyAccessLogList = function() {
  return /** @type{!Array<!proto.envoy.config.accesslog.v3.AccessLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.accesslog.v3.AccessLog, 10));
};


/**
 * @param {!Array<!proto.envoy.config.accesslog.v3.AccessLog>} value
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
*/
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.setProxyAccessLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.envoy.config.accesslog.v3.AccessLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.accesslog.v3.AccessLog}
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.addProxyAccessLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.envoy.config.accesslog.v3.AccessLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig} returns this
 */
proto.envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.prototype.clearProxyAccessLogList = function() {
  return this.setProxyAccessLogList([]);
};


